proj_name = setupgui

setupgui_autodepends = .AUTODEPEND

setupgui_nofpu = 1

setupgui_nodoslfn = 1

setupgui_trmem = 1

setupgui_dos_extender = causeway

.ERROR:

additional_clean = *.i *.rex setup.inf *.grc

!include cproj.mif
!include defrule.mif
!include deftarg.mif
!include win386.mif
!include trmem.mif

!include $(gui_dir)/client.mif
!include $(ui_dir)/client.mif
!include $(hlpview_dir)/client.mif
!include $(wpi_dir)/client.mif
!include $(commonui_dir)/client.mif

#
# cflags
#
.c : ../c;$(trmem_dir)

inc_dirs  = -I"../h" $(ui_inc_dirs) $(wpi_inc_dirs) $(gui_inc_dirs) $(gui_inc_dirs_internal) $(commonui_inc_dirs) &
    $(wpi_inc_dirs) $(hlpview_inc_dirs) -I"$(libzip_dir)/lib" -I"$(zlib_dir)"

!ifeq sys_windowed 1
extra_cpp_flags     = -DGUI_IS_GUI
extra_cpp_flags_os2 = -D__OS2_PM__
!endif

# memory tracker routines
extra_cpp_flags_setupmem = $(trmem_cpp_flags)

extra_c_flags_i86 = -zc

# memory tracker routines
extra_c_flags_setupmem = $(trmem_cover_cflags)

# custom version of resource finder
extra_c_flags_loadfind = $(wres_inc_dirs)

#
# lflags
#
extra_l_flags_dos = option stack=30K
extra_l_flags_os2 = option stack=30K
extra_l_flags_nt = option stack=30K, heap=20K
extra_l_flags_nt_axp = lib {shell32.lib uuid.lib}
extra_l_flags_win_386 = option stack=24K
# Segments must be NONDISCARDABLE so that Windows will not attempt
# to load a segment after the user has swapped diskettes.
extra_l_flags_win_i86 = option manyautodata, stack=20K, heap=10K &
    SEGMENT CLASS 'CODE' MOVEABLE PRELOAD &
    SEGMENT CLASS 'DATA' MOVEABLE PRELOAD &
    LIBRARY ddeml.lib

# explicit rules
##################

!ifeq sys_windowed 1
all : csetup.exe f77setup.exe .SYMBOLIC
!else
all : setup.exe .SYMBOLIC
!endif

#
# objects
#
objs = &
    setup.obj &
    setupfil.obj &
    setupinf.obj &
    guistats.obj &
    dlggen.obj &
    guiutils.obj &
    guictrl.obj &
    genvbl.obj &
    dynarray.obj &
    gendlg.obj &
    hash.obj &
    nlmver.obj &
    strvbuf.obj &
    utils.obj

mem_objs = &
    setupmem.obj &
    $(trmem_objs)

#                     i_dos i_linux i_nt i_os2 i_win i_osx
#===========================================================================
!inject setupio.obj   i_dos i_linux i_nt i_os2 i_win i_osx
!inject os2util.obj                      i_os2
!inject winutil.obj                 i_nt i_os2 i_win
!inject winddeml.obj                i_nt       i_win

objs += $(i_$(host_os)) $(i_$(objs_subdir)) $(mem_objs)

# custom version of resource finder
!ifneq sys_windowed 1
objs += loadfind.obj
!endif

!ifneq sys_windowed 1

libs_dos   = $(ui_lib) $(wres_lib)
libs_linux = $(ui_lib) $(wres_lib)
libs_nt    = $(ui_lib) $(wres_lib)
libs_os2   = $(ui_lib) $(wres_lib)
libs_osx   = $(ui_lib) $(wres_lib)

!endif

!ifeq host_cpu i86
libs = $(gui_lib) $(libs_$(host_os)) $(libs_$(objs_subdir))
!else
libs = $(gui_lib) $(libs_$(host_os)) $(libs_$(objs_subdir)) ../ziplib/$(objs_subdir)/ziplib.lib ../zlib/$(objs_subdir)/zlib.lib
!endif

#
# EXE's
#
exetarg_objs          = $(objs)
exetarg_libs          = $(libs)
exetarg_nt_version    = exever.res
exetarg_nt_manif      = ntmanif.res

exetarg_res_wresui    = wresui.res
exetarg_name          = setup
!include exetarg.mif
!undef exetarg_res_wresui

exetarg_res           = csetup.res
exetarg_name          = csetup
!include exetarg.mif

exetarg_res           = f77setup.res
exetarg_name          = f77setup
!include exetarg.mif

exetarg_res           = jcsetup.res
exetarg_name          = jcsetup
!include exetarg.mif

exetarg_res           = jf77setup.res
exetarg_name          = jf77setup
!include exetarg.mif

#
# rc and others
#
extra_rc_flags     = -r
extra_rc_flags_win = -30 -D_WIN
extra_rc_flags_nt  = -D_WINNT

!ifeq sys_windowed 1
depend_res_os2 = ../res/os2/setup.ico
!endif
depend_res_nt  = ../res/nt/setup.ico ../res/nt/disk.ico
depend_res_win = ../res/win/setup.ico ../res/win/disk.ico
depend_res = ../h/setup.h $(gui_dir)/h/gui.rc $(depend_res_$(host_os))

rc_inc_dirs = -I"../res/$(host_os)" -I"../res" $(gui_rc_inc_dirs)
rcui_inc_dirs = $(gui_rc_inc_dirs)

!include ntverrc.mif
ntmanif_path = ../res/nt
!include ntmanif.mif

# UI resources
wresui.res : ../res/setupui.rc $(depend_res) $(__MAKEFILES__)
    @%make echo_rc
    $(rcui)

# GUI resources
csetup.res : ../res/$(host_os)/setup.rc $(depend_res) ../res/wcc.bmp $(__MAKEFILES__)
    @%make echo_rc
    $(rc) $(ppflags_common) $(rc_cppflags) -DCSETUP $(rc_ui8_encoding) $(rc_flags) $(rc_inc_path) $[@ -fo=$@

jcsetup.res : ../res/$(host_os)/setup.rc $(depend_res) ../res/wcc.bmp $(__MAKEFILES__)
    @%make echo_rc
    $(rc) $(ppflags_common) $(rc_cppflags) -DJCSETUP -DJAPANESE $(rc_ui8_encoding) $(rc_flags) -zk0 $(rc_inc_path) $[@ -fo=$@

f77setup.res : ../res/$(host_os)/setup.rc $(depend_res) ../res/f77.bmp $(__MAKEFILES__)
    @%make echo_rc
    $(rc) $(ppflags_common) $(rc_cppflags) -DF77SETUP $(rc_ui8_encoding) $(rc_flags) $(rc_inc_path) $[@ -fo=$@

jfsetup.res : ../res/$(host_os)/setup.rc $(depend_res) ../res/f77.bmp $(__MAKEFILES__)
    @%make echo_rc
    $(rc) $(ppflags_common) $(rc_cppflags) -DJFSETUP -DJAPANESE $(rc_ui8_encoding) $(rc_flags) -zk0 $(rc_inc_path) $[@ -fo=$@
