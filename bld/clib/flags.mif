!ifeq system windows
default_windowing = 1
!endif
!ifeq default_windowing 1
def_windowing = -DDEFWIN
!endif

#######################
# C PREPROCESSOR SETINGS
######
# Include system headers in dependency lists
clib_cpp_flags = -D_ENABLE_AUTODEPEND
!ifeq release 0
clib_cpp_flags += -D__RUNTIME_HANDLE_CHECKS__
!endif
!ifeq linkage dynamic
clib_cpp_flags += -D__MAKE_DLL_CLIB
!endif
!ifdef share
clib_cpp_flags += -D__SHARE__ -DIN_SLIB -D_NO_SLIB
!endif

clib_cpp_flags_windows     = -DSTRICT $(def_windowing)
clib_cpp_flags_windows_386 = -D__CALL21__
clib_cpp_flags_winnt       = $(win32ver) $(def_windowing)
clib_cpp_flags_winnt_axp   = -DWIN32 -D_WIN32
clib_cpp_flags_winnt_ppc   = -DWIN32 -D_WIN32
clib_cpp_flags_os2         = $(def_windowing)
clib_cpp_flags_nw_clib     = -D_NETWARE_CLIB
clib_cpp_flags_nw_clibl    = -D_NETWARE_CLIB -D_THIN_LIB
clib_cpp_flags_nw_libc     = -D_NETWARE_LIBC
clib_cpp_flags_nw_libcl    = -D_NETWARE_LIBC -D_THIN_LIB

clib_cpp_flags += $(clib_cpp_flags_$(system)) $(clib_cpp_flags_$(system)_$(processor))

##########################
# C COMPILER SETINGS
######
sw_c_common = $(watcom_common_cflags)-w8-we-j-zl-x-xx-zam-wpx
!ifeq release 0
!else
sw_c_common += -s
!endif
!ifeq processor 086
sw_c_common += -oax
!else ifeq processor 286
sw_c_common += -oax
!else
sw_c_common += -oaxt
!endif
!ifdef __UNIX__
sw_c_common += -fo=.obj
!endif
!ifdef profile
sw_c_common += -hd-etp
!endif
!ifdef overlay
sw_c_common += -of
!endif
!ifdef dll16
sw_c_common += -bm-bd
!else ifdef mthreaded
sw_c_common += -bm
!endif
!ifdef debug
sw_c_common += -en
!endif

# sw_c_(processor)_(model)
sw_c_bigcode  = -nt=_TEXT
sw_c_bigdata  = -zu

sw_c_386_ms_msdos   = -r
sw_c_386_ms_qnx     = -r

sw_c_386_mc_rdosdev = -zdp-zff-zgf

sw_c_086_ms = -ms
sw_c_286_ms = -ms
sw_c_086_mm = -mm$(sw_c_bigcode)
sw_c_286_mm = -mm$(sw_c_bigcode)
sw_c_086_mc = -mc$(sw_c_bigdata)
sw_c_286_mc = -mc$(sw_c_bigdata)
sw_c_086_ml = -ml$(sw_c_bigdata)$(sw_c_bigcode)
sw_c_286_ml = -ml$(sw_c_bigdata)$(sw_c_bigcode)
sw_c_086_mh = -mh$(sw_c_bigdata)$(sw_c_bigcode)
sw_c_286_mh = -mh$(sw_c_bigdata)$(sw_c_bigcode)
sw_c_386_ms = -ms$(sw_c_386_ms_$(system))
sw_c_386_mf = -mf
sw_c_386_mc = -mc$(sw_c_bigdata)$(sw_c_386_mc_$(system))
sw_c_axp_   =
sw_c_ppc_   =
sw_c_mps_   =

# sw_c_(processor)
sw_c_intel    = -fpc
sw_c_register = -5r
sw_c_stack    = -5s

# special case switches
!ifeq release 0
sw_c_fi_nonx86 = -finonx86.h
!endif

sw_c_086 = $(sw_c_intel)-0
sw_c_286 = $(sw_c_intel)-2
sw_c_386 = $(sw_c_intel)$(sw_c_$(convention))-zc
sw_c_axp = $(sw_c_fi_nonx86)
sw_c_ppc = $(sw_c_fi_nonx86)
sw_c_mps = $(sw_c_fi_nonx86)

# sw_c_(system)_(processor)
sw_c_msdos_086    =
sw_c_msdos_286    =
sw_c_msdos_386    =
sw_c_rdos_386     =
sw_c_rdosdev_386  =
sw_c_nw_clib_386  =
sw_c_nw_clibl_386 =
sw_c_nw_libc_386  =
sw_c_nw_libcl_386 =
sw_c_os2_286      =
sw_c_os2_386      =
sw_c_os2_ppc      =
sw_c_qnx_286      =
sw_c_qnx_386      =
sw_c_windows_086  =
sw_c_windows_386  =
sw_c_winnt_386    =
sw_c_winnt_axp    =
sw_c_winnt_ppc    =
sw_c_linux_386    =
sw_c_linux_ppc    =
sw_c_linux_mps    = -eoe

# sw_c_(system)
sw_c_msdos      = -bt=dos
sw_c_nw_clib    = -bt=netware
sw_c_nw_clibl   = -bt=netware
sw_c_nw_libc    = -bt=netware5
sw_c_nw_libcl   = -bt=netware5
sw_c_os2        = -bt=os2
sw_c_qnx        = -bt=qnx
sw_c_windows    = -bt=windows
sw_c_winnt      = -bt=nt
sw_c_linux      = -bt=linux
sw_c_rdos       = -bt=rdos
sw_c_rdosdev    = -bt=rdosdev

#make bug
!ifndef extra_clib_c_flags
extra_clib_c_flags =
!endif

#####################
# ASSEMBLERS SETINGS
######
sw_a_common = -we
!ifdef __UNIX__
sw_a_common += -fo=.obj
!endif
!ifdef dll16
sw_a_common += -D__MT__
!else ifdef mthreaded
sw_a_common += -D__MT__
!endif
!ifdef profile
sw_a_common += -D_PROFILE
!endif
!ifeq linkage dynamic
sw_a_common += -D__MAKE_DLL_CLIB -D_EXPORT
!endif

# sw_a_(processor)_(model)
sw_a_bigcode  = -nt=_TEXT

sw_a_086_ms = -ms
sw_a_286_ms = -ms
sw_a_086_mm = -mm$(sw_a_bigcode)
sw_a_286_mm = -mm$(sw_a_bigcode)
sw_a_086_mc = -mc
sw_a_286_mc = -mc
sw_a_086_ml = -ml$(sw_a_bigcode)
sw_a_286_ml = -ml$(sw_a_bigcode)
sw_a_086_mh = -mh$(sw_a_bigcode)
sw_a_286_mh = -mh$(sw_a_bigcode)
sw_a_386_ms = -ms
sw_a_386_mf = -mf
sw_a_386_mc = -mc
sw_a_axp_   =
sw_a_ppc_   =
sw_a_mps_   =

# sw_a_(processor)
sw_a_intel    = -fpc-w8-e
sw_a_register = -5r
sw_a_stack    = -5s

sw_a_086 = $(sw_a_intel)-0
sw_a_286 = $(sw_a_intel)-2
sw_a_386 = $(sw_a_intel)$(sw_a_$(convention))
sw_a_axp =
sw_a_ppc =
sw_a_mps =

# sw_a_(system)_(processor)
sw_a_msdos_086    =
sw_a_msdos_286    =
sw_a_msdos_386    =
sw_a_rdos_386     =
sw_a_rdosdev_386  =
sw_a_nw_clib_386  =
sw_a_nw_clibl_386 =
sw_a_nw_libc_386  =
sw_a_nw_libcl_386 =
sw_a_os2_286      =
sw_a_os2_386      =
sw_a_os2_ppc      =
sw_a_qnx_286      =
sw_a_qnx_386      =
sw_a_windows_086  =
sw_a_windows_386  = -D__CALL21__
sw_a_winnt_386    =
sw_a_winnt_axp    = -DWIN32 -D_WIN32
sw_a_winnt_ppc    = -oc -DWIN32 -D_WIN32
sw_a_linux_386    =
sw_a_linux_ppc    =
sw_a_linux_mps    =

# sw_a_(system)
sw_a_msdos      = -bt=dos
sw_a_nw_clib    = -bt=netware -D_NETWARE_CLIB
sw_a_nw_clibl   = -bt=netware -D_NETWARE_CLIB -D_THIN_LIB
sw_a_nw_libc    = -bt=netware5 -D_NETWARE_LIBC
sw_a_nw_libcl   = -bt=netware5 -D_NETWARE_LIBC -D_THIN_LIB
sw_a_os2        = -bt=os2
sw_a_qnx        = -bt=qnx
sw_a_windows    = -bt=windows -DSTRICT
sw_a_winnt      = -bt=nt $(win32ver)
sw_a_linux      = -bt=linux
sw_a_rdos       = -bt=rdos
sw_a_rdosdev    = -bt=rdosdev

#make bug
!ifndef extra_clib_a_flags
extra_clib_a_flags =
!endif

clib_c_flags =$(sw_c_common) $(sw_c_$(processor)_$(model)) $(sw_c_$(processor)) &
    $(sw_c_$(system)_$(processor)) $(sw_c_$(system)) $(clib_cpp_flags) $(extra_clib_c_flags)
clib_a_flags =$(sw_a_common) $(sw_a_$(processor)_$(model)) $(sw_a_$(processor)) &
    $(sw_a_$(system)_$(processor)) $(sw_a_$(system)) $(extra_clib_a_flags)

# debug flags need to be last to override optimization flags
!ifeq release 0
c_dbg_flags = -d2
a_dbg_flags = -d1
!else
c_dbg_flags = -DNDEBUG
a_dbg_flags = -DNDEBUG
!endif
