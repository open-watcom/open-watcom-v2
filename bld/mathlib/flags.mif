!ifeq release 0
sw_c_common = $(watcom_common_cflags)-w8-j-we-x-xx-zam-oax-zl-wpx
!else
sw_c_common = $(watcom_common_cflags)-w8-j-we-x-xx-zam-s-oax-zl-wpx
!endif
!ifdef __UNIX__
sw_c_common += -fo=.obj
!endif
# Include system headers in dependency lists
sw_c_common += -D_ENABLE_AUTODEPEND

sw_c_static  =
!ifdef export_only
sw_c_dynamic = -D__MAKE_DLL_WRTLIB
!else
sw_c_dynamic = -D__MAKE_DLL_MATHLIB
!endif

# sw_c_(processor)_(model)
sw_c_bigcode  = -nt=_TEXT
sw_c_bigdata  = -zu

sw_c_386_ms_msdos = -r
sw_c_386_ms_qnx   = -r

sw_c_286_ms = -ms
sw_c_286_mm = -mm$(sw_c_bigcode)
sw_c_286_mc = -mc$(sw_c_bigdata)
sw_c_286_ml = -ml$(sw_c_bigdata)$(sw_c_bigcode)
sw_c_286_mh = -mh$(sw_c_bigdata)$(sw_c_bigcode)
sw_c_386_ms = -ms$(sw_c_386_ms_$(system))
sw_c_386_mf = -mf
sw_c_axp_   =
sw_c_ppc_   =
sw_c_mps_   =

# sw_c_(processor)
sw_c_intel    = -of
sw_c_register = -6r
sw_c_stack    = -6s
!ifdef profile
sw_c_profile  = -hd-etp
!endif

sw_c_286 =$(sw_c_intel)-fpc
sw_c_287 =$(sw_c_intel)-fpi
sw_c_386 =$(sw_c_intel)$(sw_c_$(convention))-fpc-zc-fpd$(sw_c_profile)
sw_c_387 =$(sw_c_intel)$(sw_c_$(convention))-fpi87-zc-fpd$(sw_c_profile)
sw_c_axp =
sw_c_ppc =
sw_c_mps =

# sw_c_(system)
sw_c_msdos    = -bt=dos
sw_c_os2      = -bt=os2
sw_c_windows  = -bt=windows -DSTRICT
sw_c_winnt    = -bt=nt $(win32ver)
sw_c_linux    = -bt=linux
sw_c_netware  = -bt=netware
sw_c_qnx      = -bt=qnx

sw_a_common = -we
!ifdef __UNIX__
sw_a_common += -fo=.obj
!endif

sw_a_static  =
!ifdef export_only
sw_a_dynamic = -D__MAKE_DLL_WRTLIB -D_EXPORT
!else
sw_a_dynamic = -D__MAKE_DLL_MATHLIB -D_EXPORT
!endif

# sw_a_(processor)_(model)
sw_a_bigcode  = -nt=_TEXT

sw_a_286_ms = -ms
sw_a_286_mm = -mm$(sw_a_bigcode)
sw_a_286_mc = -mc
sw_a_286_ml = -ml$(sw_a_bigcode)
sw_a_286_mh = -mh$(sw_a_bigcode)
sw_a_386_ms = -ms
sw_a_386_mf = -mf
sw_a_axp_   =
sw_a_ppc_   =
sw_a_mps_   =

# sw_a_(processor)
sw_a_intel    = -w8-e-DPDIV
sw_a_16bit    = -0
sw_a_register = -5r
sw_a_stack    = -5s

sw_a_286 = $(sw_a_intel)$(sw_a_16bit) -fpc -D_BUILDING_MATHLIB
sw_a_287 = $(sw_a_intel)$(sw_a_16bit) -fpi -fp0
sw_a_386 = $(sw_a_intel)$(sw_a_$(convention)) -fpc -D_BUILDING_MATHLIB
sw_a_387 = $(sw_a_intel)$(sw_a_$(convention)) -fpi87 -fp5
sw_a_axp =
sw_a_ppc =
sw_a_mps =

# sw_a_(system)
sw_a_msdos    = -bt=dos
sw_a_os2      = -bt=os2
sw_a_windows  = -bt=windows
sw_a_winnt    = -bt=nt $(win32ver)
sw_a_linux    = -bt=linux
sw_a_netware  = -bt=netware
sw_a_qnx      = -bt=qnx

mlib_c_flags = $(sw_c_common) $(sw_c_$(linkage)) $(sw_c_$(mlib_$(processor))_$(model)) &
    $(sw_c_$(processor)) $(sw_c_$(system)) $(extra_mlib_c_flags)
mlib_a_flags = $(sw_a_common) $(sw_a_$(linkage)) $(sw_a_$(mlib_$(processor))_$(model)) &
    $(sw_a_$(processor)) $(sw_a_$(system)) $(extra_mlib_a_flags)

# debug flags need to be last to override optimization flags
!ifeq release 0
c_dbg_flags = -d2
a_dbg_flags = -d1
!ifdef debug
c_dbg_flags += -D$(debug)
a_dbg_flags += -D$(debug)
!endif
!else
c_dbg_flags = -DNDEBUG
a_dbg_flags = -DNDEBUG
!endif
