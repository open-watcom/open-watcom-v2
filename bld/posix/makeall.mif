#
#   define macro for OS's which need POSIX utilities
#

!ifndef __UNIX__

proj_name = posix_all

posix_all_autodepends = .AUTODEPEND

!include ../common.mif

model_switch_i86=
model_switch_386=

!include cproj.mif
!include defrule.mif
defrule_key = stdlib
subdir_stdlib = $(stdlibdir)
extra_cpp_stdlib_i86_flags = -m$(model)
extra_cpp_stdlib_386_flags = -m$(model)
extra_cpp_stdlib_flags = $(extra_cpp_stdlib_$(host_cpu)_flags)
!include defrule.mif
!ifdef alt_posixlib
defrule_key = altlib
subdir_altlib = $(altlibdir)
extra_cpp_altlib_i86s_flags = -mc
extra_cpp_altlib_i86c_flags = -ms
extra_cpp_altlib_flags = $(extra_cpp_altlib_$(host_cpu)$(model)_flags)
!include defrule.mif
!endif

!include ../commands.mif

inc_dirs += -I"../h"

.c: ../misc

libs = $(stdlibdir)/posix.lib
!ifdef alt_posixlib
libs += $(altlibdir)/posix.lib
!endif

libdirs = $(stdlibdir)
!ifdef alt_posixlib
libdirs += $(altlibdir)
!endif

all : $(libdirs) $(libs) $(commands) .symbolic
    @%null

!ifdef alt_posixlib
_subdir_ = $(altlibdir)/
libtarg_objs = $(posixlib_objs)
libtarg_name = $(_subdir_)posix
!include libtarg.mif
!endif

_subdir_ = $(stdlibdir)/
libtarg_objs = $(posixlib_objs)
libtarg_name = $(_subdir_)posix
!include libtarg.mif

wmake_opts = host_os=$(host_os) host_cpu=$(host_cpu)
!ifdef bootstrap
wmake_opts += bootstrap=$(bootstrap)
!endif
!ifdef release
wmake_opts += release=$(release)
!endif

$(commands) : .symbolic $(__MAKEFILES__)
    $(noecho)!$(nested_wmake) -h $(wmake_opts) -f "../src/$@/makefile"

curr_dir=$+$(%__CWD__)$-

clean : .symbolic
    cd $(subdir_stdlib)
    @%make killobjs
    cd "$(curr_dir)"
!ifdef alt_posixlib
    cd $(subdir_altlib)
    @%make killobjs
    cd "$(curr_dir)"
!endif
    @%make killobjs

killobjs : .PROCEDURE .EXPLICIT
    rm -f *.obj *.lnk *.exe *.exp *.lib *.lbc *.lst *.err *.pch *.map *.sym
    rm -f *.tmp *.trk $(additional_clean_sys)

!else

clean : .symbolic

!endif
