proj_name = wsample

!ifndef wsample_autodepends
wsample_autodepends = .AUTODEPEND
!endif

!ifndef target
target = $(host_os)
!endif

!ifndef memory_model_i86
memory_model_i86 = c
!endif

!include cproj.mif
!include defrule.mif
!include deftarg.mif

!include $(commonui_dir)/windbg.mif
!ifeq target rsi
!include $(rsilib_dir)/client.mif
!endif

dig_arch = $(host_cpu)

!include $(dig_dir)/digcli.mif

!ifneq target win
!include wres.mif
!endif
!include tools.mif

#
# cflags
#
!ifeq target linux
.c: $(trap_dir)/lcl/linux/c
!endif
.c: .;../c
!ifeq target pls
.c: $(plsdir)
!endif

!ifeq target nov
inc_dirs = -I. -I"../h" -I"$(nwoss_dir)/common/h" -I"$(nwoss_dir)/nw4/h" -I"$(nwsrc)" -I"$(dig_dir)/h"
!else ifeq target win
inc_dirs = -I. -I"../h" $(windbg_inc_dirs) -I"$(dig_dir)/h"
!else ifeq target rsi
inc_dirs = -I. -I"../h" $(rsilib_inc_dirs) -I"$(dig_dir)/h"
!else ifeq target pls
inc_dirs = -I. -I"../h" -I"$(plsdir)" -I"$(dig_dir)/h"
!else ifeq target linux
inc_dirs = -I. -I"../h" -I"$(trap_dir)/lcl/linux/h" -I"$(trap_dir)/h" -I"$(dig_dir)/h"
!else
inc_dirs = -I. -I"../h" -I"$(dig_dir)/h"
!endif

!ifndef bootstrap
fardata_dos_dos =-DFARDATA
fardata_dos_rsi =-DFARDATA
fardata_win_win =-DFARDATA
!endif

extra_cpp_flags = $(dig_arch_cpp_flags)
!ifndef bootstrap
extra_cpp_flags += $(fardata_$(host_os)_$(target))
!endif

!ifeq target pls
extra_cpp_flags_dos =-D__PHARLAP__ -D_far=__far
!else ifeq target rsi
extra_cpp_flags_dos =-D__DOS4G__
!endif

!ifeq target dos
extra_cpp_flags_i86 =-DSHORT_OFF
!else ifeq target os2
extra_cpp_flags_i86 =-DSHORT_OFF
!endif

extra_c_flags_dos_rsi = -zu
extra_c_flags_dos     = $(extra_c_flags_dos_$(target))
extra_c_flags_win     = -zu -zw -orlt
extra_c_flags_nov     = -3s -zp1
extra_c_flags_nt      =
extra_c_flags_os2     =
extra_c_flags_linux   =

#
# aflags
#
.asm: ../asm

extra_a_flags = $(model_switch_$(host_cpu))

#
# lflags
#
extra_l_flags_os2_i86 = op stack=4k, newfiles
extra_l_flags_win = option heap=10k, stack=10k &
    opt description 'Open Watcom Sampler' &
    segment class 'CODE' preload fixed &
    segment class 'DATA' preload fixed &
    lib commdlg, toolhelp
extra_l_flags_nov = debug novell option stack=10k @nversion.tmp &
    opt description 'Open Watcom Sampler' &
    module clib import @$(nwoss_dir)/common/imp/ownwos.imp
!ifeq target rsi
lflags_dos_i86 = sys dos16m opt stub=$(wstub_dir)/dos386/wstubq.exe runtime auto $(lflags_doslfn_i86)
!else ifeq target pls
lflags_dos_386 = sys pharlap ext opt nodefaultlibs, maxdata=0 runtime maxreal=1023K, maxibuf=4K, flag=2 &
    lib { clib3r.lib math3r.lib } file { $(plsdir)/dilseg.obj $(plsdir)/dilglue.obj }
!endif

# explicit rules
#################

rcui_inc_dirs = -I"../h"

#
# names
#
exetarg_name_os2_i86   = wsampos2
exetarg_name_pls_386   = wsamppls
exetarg_name_rsi_i86   = wsamprsi
exetarg_name_win_i86   = wsamplew
!ifdef exetarg_name_$(target)_$(host_cpu)
exetarg_name = $(exetarg_name_$(target)_$(host_cpu))
!else
exetarg_name = wsample
!endif

!ifeq target pls
exetarg_ext = .exp
additional_clean_sys = *.exp
!endif

#
# EXE
#
exetarg_prebuild_objs_nov = nversion.tmp
exetarg_prebuild_objs_pls = except.grh
exetarg_prebuild_objs_rsi = except.grh
exetarg_prebuild_objs = $(exetarg_prebuild_objs_$(target)) wsample.grh usage.gh
exetarg_objs_nt_axp     = sampaxp.obj sysio.obj io.obj sysinit.obj sampexe.obj
exetarg_objs_nt_386     = sampnt.obj sysio.obj io.obj sysinit.obj sampexe.obj
exetarg_objs_nt_x64     = sampnt64.obj sysio.obj io.obj sysinit.obj sampexe.obj
exetarg_objs_os2_386    = sampos22.obj sysio.obj io.obj sysinit.obj sampexe.obj
exetarg_objs_os2_i86    = sampos2.obj sysio.obj io.obj sysinit.obj sampexe.obj
exetarg_objs_win_i86    = sampwin.obj winsysio.obj winio.obj sampexe.obj winmain.obj winopts.obj winfault.obj winnotif.obj winliblo.obj wingetid.obj # wingloba.obj
exetarg_objs_dos_i86    = sampdos.obj dossysio.obj io.obj sampexe.obj realmode.obj rmhooks.obj timasm.obj interc.obj settime.obj
exetarg_objs_rsi_i86    = samprsi.obj sysio.obj io.obj sysinit.obj sampexe.obj settime.obj
exetarg_objs_pls_386    = samppls.obj sysio.obj io.obj sysinit.obj sampexe.obj timer.obj settime.obj
exetarg_objs_nov_386    = sampnlm.obj nlmsysio.obj nlmio.obj realmode.obj nlmhooks.obj settime.obj cpuspeed.obj pitstuff.obj
exetarg_objs_linux_386  = samplnx.obj sysio.obj io.obj sysinit.obj sampexe.obj lnxutl.obj
exetarg_objs_linux_ppc  = samplnx.obj sysio.obj io.obj sysinit.obj sampexe.obj lnxutl.obj
exetarg_objs_linux_x64  = samplnx.obj sysio.obj io.obj sysinit.obj sampexe.obj lnxutl.obj
exetarg_objs          = $(exetarg_objs_$(target)_$(host_cpu)) sample.obj sampdata.obj wmsg.obj output.obj
exetarg_libs_pls      = $(plsdir)/wdos32.lib $(plsdir)/wdosx32.lib
exetarg_libs_rsi      = $(rsilib_lib)
exetarg_libs_win      = $(windbg_lib)
exetarg_libs          = $(wres_lib) $(exetarg_libs_$(target))
exetarg_res_version_nt_386 = exever.res
exetarg_res_version_nt_x64 = exever.res
!ifeq host_os win
exetarg_res           = $(proj_name).res
!else
exetarg_res_wresui    = wresui.res
!endif
!include exetarg.mif

#
# rc and others
#
rc_cpp_dos_rsi_i86 = -D__DOS4G__
rc_cpp_dos_pls_386 = -D__PHARLAP__
!ifdef rc_cpp_dos_$(target)_$(host_cpu)
rc_cpp_dos = $(rc_cpp_dos_$(target)_$(host_cpu))
!endif

verrc_exe = $(exetarg_name)
!include verrc.mif

rcui_inc_dirs = -I"../h"

$(proj_name).res : ../h/wsamplew.rc ../h/wsampres.rc ../h/wsamplew.ico ../h/wsample.rc ../h/wmsg.h ../h/wsample.msg usage.gh $(__MAKEFILES__)
    @%make echo_rc
    $(rcui8) -30

wresui.res : ../h/wsample.rc ../h/wmsg.h ../h/wsample.msg usage.gh $(__MAKEFILES__)
    @%make echo_rc
    $(rcui8)

wsample.gh : ../h/wsample.msg $(__MAKEFILES__)
    @%make echo_cpp
    $(cpp) -zku8 $(rc_cppflags) $(cppflags) -o$^. $[@

wsample.grh : wsample.gh $(__MAKEFILES__)
    @%make echo_awk
    $(awk) -v base=MSG_RC_BASE -f $(build_dir)/makemsg.awk -v OUTFILE=$^. $[@

except.gh : ../h/except.msg $(__MAKEFILES__)
    @%make echo_cpp
    $(cpp) -zku8 $(rc_cppflags) $(cppflags) -o$^. $[@

except.grh : except.gh $(__MAKEFILES__)
    @%make echo_awk
    $(awk) -v base=MSG_EXC_BASE -f $(build_dir)/makemsg.awk -v OUTFILE=$^. $[@

./mknver.exe: $(watcom_dir)/c/mknver.c $(watcom_dir)/h/banner.h $(__MAKEFILES__)
    @%make echo_bldcl
    $(bld_cl) $[@ $(bld_clflags) $(bld_ldflags)

nversion.tmp: ./mknver.exe $(__MAKEFILES__)
    @%make echo_execute
    $(noecho)$[@ $@

!ifdef exetarg_qnx_res
optencod_opt_qnx    = -u=$(exetarg_qnx_res)
!endif
optencod_targets = $(target)
!ifeq release 0
optencod_targets += dbg
!endif

usage.gh $(exetarg_$(host_os)_res) : ../h/options.gml $(__MAKEFILES__)
    @%make echo_optencod
    $(optencod) -rc=MSG_USAGE_BASE -utf8 $(optencod_opt_$(host_os)) $[@ . . $@ $(optencod_targets)
