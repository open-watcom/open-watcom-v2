.387
		PUBLIC	ExpandMacro_
		PUBLIC	MacroDef_
		EXTRN	__STK:BYTE
		EXTRN	AsmAlloc_:BYTE
		EXTRN	strlen_:BYTE
		EXTRN	strcpy_:BYTE
		EXTRN	strncmp_:BYTE
		EXTRN	strncpy_:BYTE
		EXTRN	strcat_:BYTE
		EXTRN	sprintf_:BYTE
		EXTRN	InternalError_:BYTE
		EXTRN	AsmFree_:BYTE
		EXTRN	__IsTable:BYTE
		EXTRN	wipe_space_:BYTE
		EXTRN	strnicmp_:BYTE
		EXTRN	_AsmBuffer:BYTE
		EXTRN	AsmError_:BYTE
		EXTRN	PushLineQueue_:BYTE
		EXTRN	_MacroLocalVarCounter:BYTE
		EXTRN	InputQueueLine_:BYTE
		EXTRN	_Parse_Pass:BYTE
		EXTRN	AsmGetSymbol_:BYTE
		EXTRN	_Token_Count:BYTE
		EXTRN	strcmp_:BYTE
		EXTRN	ReadTextLine_:BYTE
		EXTRN	strncat_:BYTE
		EXTRN	atoi_:BYTE
		EXTRN	stackavail_:BYTE
		EXTRN	DoDebugMsg_:BYTE
		EXTRN	itoa_:BYTE
		EXTRN	ExpandSymbol_:BYTE
		EXTRN	EvalExpr_:BYTE
		EXTRN	_StringBuf:BYTE
		EXTRN	AsmScan_:BYTE
		EXTRN	PushMacro_:BYTE
		EXTRN	dir_insert_:BYTE
		EXTRN	get_curr_filename_:BYTE
		EXTRN	_big_code_:BYTE
DGROUP		GROUP	CONST,CONST2,_DATA,_BSS
macro_TEXT		SEGMENT	BYTE PUBLIC USE16 'CODE'
		ASSUME CS:macro_TEXT, DS:DGROUP, SS:DGROUP
L$1:
    DB	4dH, 61H, 63H, 72H, 6fH, 20H, 65H, 78H
    DB	70H, 61H, 6eH, 73H, 69H, 6fH, 6eH, 3aH
    DB	20H, 20H, 25H, 73H, 20H, 0aH, 0
L$2:
    DB	2eH, 2eH, 5cH, 63H, 5cH, 6dH, 61H, 63H
    DB	72H, 6fH, 2eH, 63H, 0
L$3:
    DB	20H, 54H, 45H, 58H, 54H, 45H, 51H, 55H
    DB	20H, 0
L$4:
    DB	3fH, 3fH, 25H, 23H, 30H, 34H, 64H, 0
L$5:
    DB	6cH, 6fH, 63H, 61H, 6cH, 0
L$6:
    DB	6dH, 61H, 63H, 72H, 6fH, 0
L$7:
    DB	65H, 6eH, 64H, 6dH, 0
L$8:
    DB	52H, 45H, 51H, 0
L$9:
    DB	25H, 32H, 64H, 0
L$10:
    DB	23H, 0
L$11:
    push        bp
    mov         bp,sp
    push        ax
    mov         ax,1cH
    call        far ptr __STK
    pop         ax
    push        si
    push        di
    sub         sp,14H
    mov         word ptr -18H[bp],ax
    mov         word ptr -16H[bp],dx
    mov         word ptr -14H[bp],bx
    mov         word ptr -12H[bp],cx
    mov         ax,word ptr -18H[bp]
    mov         word ptr -0cH[bp],ax
    mov         ax,word ptr -16H[bp]
    mov         word ptr -0aH[bp],ax
L$12:
    lds         bx,dword ptr -0cH[bp]
    mov         dx,word ptr [bx]
    lds         bx,dword ptr -0cH[bp]
    mov         ax,word ptr 2[bx]
    xor         cx,cx
    xor         bx,bx
    cmp         ax,bx
    jne         L$14
    cmp         dx,cx
    jne         L$14
    jmp         L$15
L$13:
    lds         bx,dword ptr -0cH[bp]
    mov         dx,word ptr [bx]
    lds         bx,dword ptr -0cH[bp]
    mov         ax,word ptr 2[bx]
    mov         word ptr -0cH[bp],dx
    mov         word ptr -0aH[bp],ax
    jmp         L$12
L$14:
    jmp         L$13
L$15:
    mov         ax,9
    call        far ptr AsmAlloc_
    mov         cx,ax
    mov         bx,dx
    mov         word ptr -8[bp],cx
    mov         word ptr -6[bp],bx
    lds         bx,dword ptr -8[bp]
    mov         word ptr [bx],0
    lds         bx,dword ptr -8[bp]
    mov         word ptr 2[bx],0
    mov         bx,word ptr -14H[bp]
    mov         dx,word ptr -12H[bp]
    mov         ax,bx
    call        far ptr strlen_
    inc         ax
    call        far ptr AsmAlloc_
    mov         cx,ax
    mov         bx,dx
    lds         si,dword ptr -8[bp]
    mov         word ptr 4[si],cx
    lds         si,dword ptr -8[bp]
    mov         word ptr 6[si],bx
    lds         bx,dword ptr -8[bp]
    mov         byte ptr 8[bx],0
    mov         si,word ptr -14H[bp]
    mov         cx,word ptr -12H[bp]
    lds         bx,dword ptr -8[bp]
    mov         bx,word ptr 4[bx]
    lds         di,dword ptr -8[bp]
    mov         dx,word ptr 6[di]
    mov         ax,bx
    mov         bx,si
    call        far ptr strcpy_
    mov         bx,word ptr -8[bp]
    lds         si,dword ptr -0cH[bp]
    mov         word ptr [si],bx
    mov         bx,word ptr -6[bp]
    lds         si,dword ptr -0cH[bp]
    mov         word ptr 2[si],bx
    mov         bx,word ptr -8[bp]
    mov         word ptr -10H[bp],bx
    mov         bx,word ptr -6[bp]
    mov         word ptr -0eH[bp],bx
    mov         ax,word ptr -10H[bp]
    mov         dx,word ptr -0eH[bp]
    lea         sp,-4[bp]
    pop         di
    pop         si
    pop         bp
    ret         
L$16:
    push        bp
    mov         bp,sp
    push        ax
    mov         ax,38H
    call        far ptr __STK
    pop         ax
    push        si
    push        di
    sub         sp,26H
    mov         word ptr -1cH[bp],ax
    mov         word ptr -1aH[bp],dx
    mov         word ptr -20H[bp],bx
    mov         word ptr -1eH[bp],cx
    mov         byte ptr -8[bp],0
    lds         bx,dword ptr 6[bp]
    mov         ax,word ptr 4[bx]
    mov         word ptr -18H[bp],ax
    lds         bx,dword ptr 6[bp]
    mov         ax,word ptr 6[bx]
    mov         word ptr -16H[bp],ax
    mov         ax,word ptr -1cH[bp]
    mov         word ptr -10H[bp],ax
    mov         ax,word ptr -1aH[bp]
    mov         word ptr -0eH[bp],ax
L$17:
    mov         cx,word ptr -10H[bp]
    mov         bx,word ptr -0eH[bp]
    xor         dx,dx
    xor         ax,ax
    cmp         bx,ax
    jne         L$19
    cmp         cx,dx
    jne         L$19
    jmp         near ptr L$30
L$18:
    lds         bx,dword ptr -10H[bp]
    mov         dx,word ptr [bx]
    lds         bx,dword ptr -10H[bp]
    mov         ax,word ptr 2[bx]
    mov         word ptr -10H[bp],dx
    mov         word ptr -0eH[bp],ax
    jmp         L$17
L$19:
    lds         bx,dword ptr -10H[bp]
    mov         dx,word ptr 4[bx]
    lds         bx,dword ptr -10H[bp]
    mov         ax,word ptr 6[bx]
    xor         cx,cx
    xor         bx,bx
    cmp         ax,bx
    jne         L$20
    cmp         dx,cx
    je          L$21
L$20:
    lds         bx,dword ptr -10H[bp]
    mov         bx,word ptr 4[bx]
    lds         si,dword ptr -10H[bp]
    mov         dx,word ptr 6[si]
    mov         ax,bx
    call        far ptr strlen_
    mov         dl,byte ptr 4[bp]
    xor         dh,dh
    cmp         ax,dx
    je          L$22
L$21:
    jmp         L$23
L$22:
    mov         dl,byte ptr 4[bp]
    xor         dh,dh
    push        dx
    lds         si,dword ptr -10H[bp]
    mov         si,word ptr 4[si]
    lds         bx,dword ptr -10H[bp]
    mov         cx,word ptr 6[bx]
    mov         bx,word ptr -20H[bp]
    mov         dx,word ptr -1eH[bp]
    mov         ax,bx
    mov         bx,si
    call        far ptr strncmp_
    test        ax,ax
    je          L$24
L$23:
    jmp         near ptr L$29
L$24:
    mov         bx,word ptr -18H[bp]
    mov         dx,word ptr -16H[bp]
    mov         ax,bx
    call        far ptr strlen_
    mov         dx,ax
    mov         al,byte ptr 4[bp]
    xor         ah,ah
    sub         dx,ax
    add         dx,4
    mov         ax,dx
    call        far ptr AsmAlloc_
    mov         bx,dx
    mov         word ptr -14H[bp],ax
    mov         word ptr -12H[bp],bx
    mov         dx,word ptr -20H[bp]
    mov         ax,word ptr -1eH[bp]
    sub         dx,word ptr -18H[bp]
    mov         byte ptr -6[bp],dl
    lds         bx,dword ptr -20H[bp]
    cmp         byte ptr -1[bx],26H
    jne         L$25
    mov         al,byte ptr -6[bp]
    dec         byte ptr -6[bp]
L$25:
    mov         dl,byte ptr -6[bp]
    xor         dh,dh
    push        dx
    mov         si,word ptr -18H[bp]
    mov         cx,word ptr -16H[bp]
    mov         bx,word ptr -14H[bp]
    mov         dx,word ptr -12H[bp]
    mov         ax,bx
    mov         bx,si
    call        far ptr strncpy_
    mov         dl,byte ptr -6[bp]
    xor         dh,dh
    lds         bx,dword ptr -14H[bp]
    add         bx,dx
    mov         byte ptr [bx],0
    mov         cx,cs
    mov         dx,offset L$10
    mov         si,dx
    mov         bx,word ptr -14H[bp]
    mov         dx,word ptr -12H[bp]
    mov         ax,bx
    mov         bx,si
    call        far ptr strcat_
    mov         dl,byte ptr -8[bp]
    xor         dh,dh
    push        dx
    mov         dx,cs
    mov         bx,offset L$9
    push        dx
    push        bx
    mov         dx,ss
    lea         bx,-2aH[bp]
    push        dx
    push        bx
    call        far ptr sprintf_
    add         sp,0aH
    cmp         ax,2
    je          L$26
    mov         cx,94H
    mov         dx,cs
    mov         ax,offset L$2
    mov         bx,ax
    mov         ax,bx
    mov         bx,cx
    jmp         far ptr InternalError_
L$26:
    cmp         byte ptr -2aH[bp],20H
    jne         L$27
    mov         byte ptr -2aH[bp],30H
L$27:
    mov         cx,ss
    lea         dx,-2aH[bp]
    mov         si,dx
    mov         bx,word ptr -14H[bp]
    mov         dx,word ptr -12H[bp]
    mov         ax,bx
    mov         bx,si
    call        far ptr strcat_
    mov         dl,byte ptr 4[bp]
    xor         dh,dh
    lds         bx,dword ptr -20H[bp]
    add         bx,dx
    cmp         byte ptr [bx],26H
    jne         L$28
    mov         al,byte ptr 4[bp]
    inc         byte ptr 4[bp]
L$28:
    mov         al,byte ptr 4[bp]
    xor         ah,ah
    mov         cx,word ptr -1eH[bp]
    mov         si,word ptr -20H[bp]
    add         si,ax
    mov         bx,word ptr -14H[bp]
    mov         dx,word ptr -12H[bp]
    mov         ax,bx
    mov         bx,si
    call        far ptr strcat_
    mov         ax,word ptr -14H[bp]
    lds         bx,dword ptr 6[bp]
    mov         word ptr 4[bx],ax
    mov         ax,word ptr -12H[bp]
    lds         bx,dword ptr 6[bp]
    mov         word ptr 6[bx],ax
    lds         bx,dword ptr 6[bp]
    inc         byte ptr 8[bx]
    mov         bx,word ptr -18H[bp]
    mov         dx,word ptr -16H[bp]
    mov         ax,bx
    call        far ptr AsmFree_
    mov         ax,word ptr -12H[bp]
    mov         word ptr -0aH[bp],ax
    mov         ax,word ptr -14H[bp]
    add         ax,3
    mov         word ptr -0cH[bp],ax
    jmp         L$31
L$29:
    mov         al,byte ptr -8[bp]
    inc         byte ptr -8[bp]
    jmp         near ptr L$18
L$30:
    mov         al,byte ptr 4[bp]
    xor         ah,ah
    mov         dx,ax
    mov         ax,word ptr -1eH[bp]
    mov         word ptr -0aH[bp],ax
    mov         bx,word ptr -20H[bp]
    add         bx,dx
    mov         word ptr -0cH[bp],bx
L$31:
    mov         ax,word ptr -0cH[bp]
    mov         dx,word ptr -0aH[bp]
    lea         sp,-4[bp]
    pop         di
    pop         si
    pop         bp
    ret         6
L$32:
    push        bp
    mov         bp,sp
    push        ax
    mov         ax,26H
    call        far ptr __STK
    pop         ax
    push        si
    push        di
    sub         sp,18H
    mov         word ptr -1cH[bp],ax
    mov         word ptr -1aH[bp],dx
    mov         word ptr -18H[bp],bx
    mov         word ptr -16H[bp],cx
    mov         byte ptr -6[bp],0
    lds         bx,dword ptr -1cH[bp]
    mov         ax,word ptr 4[bx]
    mov         word ptr -10H[bp],ax
    lds         bx,dword ptr -1cH[bp]
    mov         ax,word ptr 6[bx]
    mov         word ptr -0eH[bp],ax
    mov         ax,word ptr -10H[bp]
    mov         word ptr -14H[bp],ax
    mov         ax,word ptr -0eH[bp]
    mov         word ptr -12H[bp],ax
L$33:
    lds         bx,dword ptr -14H[bp]
    cmp         byte ptr [bx],0
    jne         L$35
    jmp         near ptr L$76
L$34:
    jmp         L$33
L$35:
    lds         bx,dword ptr -14H[bp]
    cmp         byte ptr [bx],0
    jne         L$37
    jmp         near ptr L$53
L$36:
    mov         dx,word ptr -14H[bp]
    mov         ax,word ptr -12H[bp]
    inc         word ptr -14H[bp]
    jmp         L$35
L$37:
    lds         bx,dword ptr -14H[bp]
    mov         bl,byte ptr [bx]
    xor         bh,bh
    test        byte ptr ss:__IsTable[bx],0c0H
    jne         L$38
    lds         bx,dword ptr -14H[bp]
    mov         bl,byte ptr [bx]
    xor         bh,bh
    test        byte ptr ss:__IsTable[bx],20H
    je          L$39
L$38:
    jmp         L$40
L$39:
    lds         bx,dword ptr -14H[bp]
    cmp         byte ptr [bx],5fH
    jne         L$41
L$40:
    jmp         L$42
L$41:
    lds         bx,dword ptr -14H[bp]
    cmp         byte ptr [bx],40H
    jne         L$43
L$42:
    jmp         L$44
L$43:
    lds         bx,dword ptr -14H[bp]
    cmp         byte ptr [bx],24H
    jne         L$45
L$44:
    jmp         L$46
L$45:
    lds         bx,dword ptr -14H[bp]
    cmp         byte ptr [bx],3fH
    jne         L$48
L$46:
    mov         cx,word ptr -14H[bp]
    mov         bx,word ptr -12H[bp]
    mov         dx,word ptr -10H[bp]
    mov         ax,word ptr -0eH[bp]
    cmp         bx,ax
    jne         L$47
    cmp         cx,dx
    je          L$53
L$47:
    jmp         L$36
L$48:
    lds         bx,dword ptr -14H[bp]
    mov         bl,byte ptr [bx]
    xor         bh,bh
    test        byte ptr ss:__IsTable[bx],2
    je          L$51
L$49:
    lds         bx,dword ptr -14H[bp]
    mov         bl,byte ptr [bx]
    xor         bh,bh
    test        byte ptr ss:__IsTable[bx],2
    je          L$50
    mov         dx,word ptr -14H[bp]
    mov         ax,word ptr -12H[bp]
    inc         word ptr -14H[bp]
    jmp         L$49
L$50:
    jmp         L$53
L$51:
    lds         bx,dword ptr -14H[bp]
    cmp         byte ptr [bx],22H
    jne         L$52
    mov         al,byte ptr -6[bp]
    xor         ah,ah
    inc         ax
    mov         bx,2
    cwd         
    idiv        bx
    mov         byte ptr -6[bp],dl
    mov         ax,word ptr -14H[bp]
    mov         bx,word ptr -12H[bp]
    inc         word ptr -14H[bp]
    jmp         L$53
L$52:
    mov         dx,word ptr -14H[bp]
    mov         ax,word ptr -12H[bp]
    inc         word ptr -14H[bp]
L$53:
    mov         bx,word ptr -14H[bp]
    mov         word ptr -0cH[bp],bx
    mov         bx,word ptr -12H[bp]
    mov         word ptr -0aH[bp],bx
L$54:
    lds         bx,dword ptr -14H[bp]
    cmp         byte ptr [bx],0
    jne         L$56
    jmp         near ptr L$67
L$55:
    mov         dx,word ptr -14H[bp]
    mov         ax,word ptr -12H[bp]
    inc         word ptr -14H[bp]
    jmp         L$54
L$56:
    lds         bx,dword ptr -14H[bp]
    mov         bl,byte ptr [bx]
    xor         bh,bh
    test        byte ptr ss:__IsTable[bx],0c0H
    jne         L$57
    lds         bx,dword ptr -14H[bp]
    mov         bl,byte ptr [bx]
    xor         bh,bh
    test        byte ptr ss:__IsTable[bx],20H
    je          L$58
L$57:
    jmp         L$59
L$58:
    lds         bx,dword ptr -14H[bp]
    cmp         byte ptr [bx],5fH
    jne         L$60
L$59:
    jmp         L$61
L$60:
    lds         bx,dword ptr -14H[bp]
    cmp         byte ptr [bx],40H
    jne         L$62
L$61:
    jmp         L$63
L$62:
    lds         bx,dword ptr -14H[bp]
    cmp         byte ptr [bx],24H
    jne         L$64
L$63:
    jmp         L$65
L$64:
    lds         bx,dword ptr -14H[bp]
    cmp         byte ptr [bx],3fH
    jne         L$66
L$65:
    jmp         L$55
L$66:
    lds         bx,dword ptr -14H[bp]
    mov         bl,byte ptr [bx]
    xor         bh,bh
    test        byte ptr ss:__IsTable[bx],2
    jne         L$67
    lds         bx,dword ptr -14H[bp]
    cmp         byte ptr [bx],22H
    jne         L$67
    mov         bl,byte ptr -6[bp]
    xor         bh,bh
    lea         ax,1[bx]
    mov         bx,2
    cwd         
    idiv        bx
    mov         byte ptr -6[bp],dl
L$67:
    mov         dx,word ptr -14H[bp]
    mov         ax,word ptr -12H[bp]
    sub         dx,word ptr -0cH[bp]
    mov         byte ptr -8[bp],dl
    cmp         byte ptr -6[bp],0
    je          L$68
    lds         bx,dword ptr -0cH[bp]
    cmp         byte ptr [bx],26H
    jne         L$69
L$68:
    jmp         L$70
L$69:
    lds         bx,dword ptr -0cH[bp]
    cmp         byte ptr -1[bx],26H
    jne         L$71
L$70:
    jmp         L$72
L$71:
    mov         bl,byte ptr -8[bp]
    xor         bh,bh
    mov         ds,word ptr -0aH[bp]
    add         bx,word ptr -0cH[bp]
    cmp         byte ptr 1[bx],26H
    jne         L$75
L$72:
    lds         bx,dword ptr -0cH[bp]
    cmp         byte ptr [bx],0
    je          L$73
    cmp         byte ptr -8[bp],0
    ja          L$74
L$73:
    jmp         L$75
L$74:
    mov         bx,word ptr -1cH[bp]
    mov         dx,word ptr -1aH[bp]
    push        dx
    push        bx
    mov         dl,byte ptr -8[bp]
    xor         dh,dh
    push        dx
    mov         si,word ptr -0cH[bp]
    mov         cx,word ptr -0aH[bp]
    mov         bx,word ptr -18H[bp]
    mov         dx,word ptr -16H[bp]
    mov         ax,bx
    mov         bx,si
    call        near ptr L$16
    mov         cx,ax
    mov         bx,dx
    mov         word ptr -14H[bp],cx
    mov         word ptr -12H[bp],bx
L$75:
    jmp         near ptr L$34
L$76:
    lea         sp,-4[bp]
    pop         di
    pop         si
    pop         bp
    ret         
L$77:
    push        bp
    mov         bp,sp
    push        ax
    mov         ax,16H
    call        far ptr __STK
    pop         ax
    push        si
    push        di
    sub         sp,0cH
    mov         word ptr -10H[bp],ax
    mov         word ptr -0eH[bp],dx
    mov         word ptr -0cH[bp],bx
    mov         word ptr -0aH[bp],cx
    mov         bx,word ptr -0cH[bp]
    mov         dx,word ptr -0aH[bp]
    mov         ax,bx
    call        far ptr strlen_
    mov         word ptr -8[bp],ax
    mov         bx,word ptr -10H[bp]
    mov         dx,word ptr -0eH[bp]
    mov         ax,bx
    call        far ptr wipe_space_
    mov         ax,word ptr -8[bp]
    push        ax
    mov         si,word ptr -0cH[bp]
    mov         cx,word ptr -0aH[bp]
    mov         bx,word ptr -10H[bp]
    mov         dx,word ptr -0eH[bp]
    mov         ax,bx
    mov         bx,si
    call        far ptr strnicmp_
    test        ax,ax
    je          L$78
    mov         byte ptr -6[bp],0
    jmp         L$82
L$78:
    lds         bx,dword ptr -10H[bp]
    add         bx,word ptr -8[bp]
    cmp         byte ptr [bx],0
    je          L$79
    lds         bx,dword ptr -10H[bp]
    add         bx,word ptr -8[bp]
    mov         bl,byte ptr [bx]
    xor         bh,bh
    test        byte ptr ss:__IsTable[bx],2
    je          L$80
L$79:
    jmp         L$81
L$80:
    mov         byte ptr -6[bp],0
    jmp         L$82
L$81:
    mov         byte ptr -6[bp],1
L$82:
    mov         al,byte ptr -6[bp]
    lea         sp,-4[bp]
    pop         di
    pop         si
    pop         bp
    ret         
L$83:
    push        bp
    mov         bp,sp
    mov         ax,11cH
    call        far ptr __STK
    push        bx
    push        cx
    push        dx
    push        si
    push        di
    sub         sp,104H
    mov         word ptr -0cH[bp],0
    mov         si,word ptr -0cH[bp]
    shl         si,1
    shl         si,1
    mov         bx,seg _AsmBuffer
    mov         ds,bx
    lds         bx,dword ptr DGROUP:_AsmBuffer[si]
    cmp         word ptr 2[bx],0
    jne         L$84
    cmp         word ptr [bx],16bH
    je          L$85
L$84:
    mov         ax,33H
    call        far ptr AsmError_
    mov         word ptr -0eH[bp],0ffffH
    jmp         near ptr L$92
L$85:
    call        far ptr PushLineQueue_
    mov         ax,word ptr -0cH[bp]
    inc         word ptr -0cH[bp]
L$86:
    mov         si,word ptr -0cH[bp]
    shl         si,1
    shl         si,1
    mov         bx,seg _AsmBuffer
    mov         ds,bx
    lds         bx,dword ptr DGROUP:_AsmBuffer[si]
    cmp         byte ptr 4[bx],0
    jne         L$88
    jmp         near ptr L$91
L$87:
    mov         ax,word ptr -0cH[bp]
    inc         word ptr -0cH[bp]
    jmp         L$86
L$88:
    mov         si,word ptr -0cH[bp]
    shl         si,1
    shl         si,1
    mov         bx,seg _AsmBuffer
    mov         ds,bx
    lds         bx,dword ptr DGROUP:_AsmBuffer[si]
    cmp         byte ptr 4[bx],3
    je          L$89
    mov         ax,67H
    call        far ptr AsmError_
    mov         word ptr -0eH[bp],0ffffH
    jmp         near ptr L$92
L$89:
    mov         si,word ptr -0cH[bp]
    shl         si,1
    shl         si,1
    mov         ax,seg _AsmBuffer
    mov         ds,ax
    lds         di,dword ptr DGROUP:_AsmBuffer[si]
    mov         si,word ptr 5[di]
    mov         cx,word ptr 7[di]
    mov         dx,ss
    lea         ax,-10eH[bp]
    mov         di,ax
    mov         ax,di
    mov         bx,si
    call        far ptr strcpy_
    mov         si,cs
    mov         ax,offset L$3
    mov         di,ax
    mov         dx,ss
    lea         ax,-10eH[bp]
    mov         cx,ax
    mov         ax,cx
    mov         bx,di
    mov         cx,si
    call        far ptr strcat_
    push        word ptr ss:_MacroLocalVarCounter
    mov         dx,cs
    mov         cx,offset L$4
    push        dx
    push        cx
    mov         dx,ss
    lea         si,-10eH[bp]
    mov         cx,si
    mov         ax,cx
    call        far ptr strlen_
    mov         cx,ax
    mov         ax,ss
    lea         dx,-10eH[bp]
    add         cx,dx
    push        ax
    push        cx
    call        far ptr sprintf_
    add         sp,0aH
    inc         word ptr ss:_MacroLocalVarCounter
    mov         dx,ss
    lea         ax,-10eH[bp]
    mov         cx,ax
    mov         ax,cx
    call        far ptr InputQueueLine_
    mov         ax,word ptr -0cH[bp]
    inc         word ptr -0cH[bp]
    mov         di,word ptr -0cH[bp]
    shl         di,1
    shl         di,1
    mov         ax,seg _AsmBuffer
    mov         ds,ax
    lds         si,dword ptr DGROUP:_AsmBuffer[di]
    cmp         byte ptr 4[si],0
    je          L$91
    mov         si,word ptr -0cH[bp]
    shl         si,1
    shl         si,1
    mov         bx,seg _AsmBuffer
    mov         ds,bx
    lds         bx,dword ptr DGROUP:_AsmBuffer[si]
    cmp         byte ptr 4[bx],2cH
    je          L$90
    mov         ax,21H
    call        far ptr AsmError_
    mov         word ptr -0eH[bp],0ffffH
    jmp         L$92
L$90:
    jmp         near ptr L$87
L$91:
    mov         word ptr -0eH[bp],1
L$92:
    mov         ax,word ptr -0eH[bp]
    lea         sp,-0aH[bp]
    pop         di
    pop         si
    pop         dx
    pop         cx
    pop         bx
    pop         bp
    ret         
L$93:
    push        bp
    mov         bp,sp
    push        ax
    mov         ax,138H
    call        far ptr __STK
    pop         ax
    push        bx
    push        cx
    push        dx
    push        si
    push        di
    sub         sp,12aH
    mov         word ptr -0eH[bp],ax
    mov         word ptr -10H[bp],0
    cmp         byte ptr ss:_Parse_Pass,0
    jne         L$94
    mov         si,word ptr -0eH[bp]
    inc         word ptr -0eH[bp]
    shl         si,1
    shl         si,1
    mov         ax,seg _AsmBuffer
    mov         ds,ax
    lds         bx,dword ptr DGROUP:_AsmBuffer[si]
    mov         ax,word ptr 5[bx]
    mov         word ptr -2cH[bp],ax
    mov         ax,word ptr 7[bx]
    mov         word ptr -2aH[bp],ax
    mov         bx,word ptr -2cH[bp]
    mov         dx,word ptr -2aH[bp]
    mov         ax,bx
    call        far ptr AsmGetSymbol_
    mov         bx,ax
    mov         ax,dx
    mov         word ptr -28H[bp],bx
    mov         word ptr -26H[bp],ax
    lds         bx,dword ptr -28H[bp]
    mov         ax,word ptr 1aH[bx]
    mov         word ptr -18H[bp],ax
    lds         bx,dword ptr -28H[bp]
    mov         ax,word ptr 1cH[bx]
    mov         word ptr -16H[bp],ax
L$94:
    mov         ax,word ptr -0eH[bp]
    inc         word ptr -0eH[bp]
    cmp         byte ptr ss:_Parse_Pass,0
    je          L$95
    jmp         near ptr L$112
L$95:
    mov         ax,word ptr -0eH[bp]
    cmp         ax,word ptr ss:_Token_Count
    jl          L$97
    jmp         near ptr L$112
L$96:
    jmp         L$95
L$97:
    mov         si,word ptr -0eH[bp]
    shl         si,1
    shl         si,1
    mov         ax,seg _AsmBuffer
    mov         ds,ax
    lds         bx,dword ptr DGROUP:_AsmBuffer[si]
    mov         ax,word ptr 5[bx]
    mov         word ptr -14H[bp],ax
    mov         ax,word ptr 7[bx]
    mov         word ptr -12H[bp],ax
    mov         ax,11H
    call        far ptr AsmAlloc_
    mov         bx,ax
    mov         ax,dx
    mov         word ptr -30H[bp],bx
    mov         word ptr -2eH[bp],ax
    lds         bx,dword ptr -30H[bp]
    mov         word ptr 0dH[bx],0
    lds         bx,dword ptr -30H[bp]
    mov         word ptr 0fH[bx],0
    lds         bx,dword ptr -30H[bp]
    mov         word ptr 8[bx],0
    lds         bx,dword ptr -30H[bp]
    mov         word ptr 0aH[bx],0
    lds         bx,dword ptr -30H[bp]
    mov         byte ptr 0cH[bx],0
    mov         cx,word ptr -14H[bp]
    mov         dx,word ptr -12H[bp]
    mov         ax,cx
    call        far ptr strlen_
    inc         ax
    call        far ptr AsmAlloc_
    mov         cx,ax
    mov         ax,dx
    lds         bx,dword ptr -30H[bp]
    mov         word ptr 4[bx],cx
    lds         bx,dword ptr -30H[bp]
    mov         word ptr 6[bx],ax
    mov         si,word ptr -14H[bp]
    mov         cx,word ptr -12H[bp]
    lds         bx,dword ptr -30H[bp]
    mov         bx,word ptr 4[bx]
    lds         di,dword ptr -30H[bp]
    mov         dx,word ptr 6[di]
    mov         ax,bx
    mov         bx,si
    call        far ptr strcpy_
    mov         ax,word ptr -0eH[bp]
    inc         word ptr -0eH[bp]
    mov         si,word ptr -0eH[bp]
    shl         si,1
    shl         si,1
    mov         ax,seg _AsmBuffer
    mov         ds,ax
    lds         bx,dword ptr DGROUP:_AsmBuffer[si]
    cmp         byte ptr 4[bx],3aH
    je          L$98
    jmp         near ptr L$102
L$98:
    mov         bx,word ptr -0eH[bp]
    inc         word ptr -0eH[bp]
    mov         si,word ptr -0eH[bp]
    shl         si,1
    shl         si,1
    mov         bx,seg _AsmBuffer
    mov         ds,bx
    lds         bx,dword ptr DGROUP:_AsmBuffer[si]
    les         si,dword ptr 5[bx]
    cmp         byte ptr es:[si],3dH
    je          L$99
    jmp         near ptr L$101
L$99:
    mov         bx,word ptr -0eH[bp]
    inc         word ptr -0eH[bp]
    mov         si,word ptr -0eH[bp]
    shl         si,1
    shl         si,1
    mov         bx,seg _AsmBuffer
    mov         ds,bx
    lds         bx,dword ptr DGROUP:_AsmBuffer[si]
    cmp         byte ptr 4[bx],5
    je          L$100
    mov         ax,33H
    call        far ptr AsmError_
    mov         word ptr -0cH[bp],0ffffH
    jmp         near ptr L$128
L$100:
    mov         si,word ptr -0eH[bp]
    shl         si,1
    shl         si,1
    mov         ax,seg _AsmBuffer
    mov         ds,ax
    lds         bx,dword ptr DGROUP:_AsmBuffer[si]
    mov         ax,word ptr 5[bx]
    mov         word ptr -14H[bp],ax
    mov         ax,word ptr 7[bx]
    mov         word ptr -12H[bp],ax
    mov         bx,word ptr -14H[bp]
    mov         dx,word ptr -12H[bp]
    mov         ax,bx
    call        far ptr strlen_
    inc         ax
    call        far ptr AsmAlloc_
    mov         bx,ax
    mov         ax,dx
    lds         si,dword ptr -30H[bp]
    mov         word ptr 0dH[si],bx
    lds         bx,dword ptr -30H[bp]
    mov         word ptr 0fH[bx],ax
    mov         si,word ptr -14H[bp]
    mov         cx,word ptr -12H[bp]
    lds         bx,dword ptr -30H[bp]
    mov         bx,word ptr 0dH[bx]
    lds         di,dword ptr -30H[bp]
    mov         dx,word ptr 0fH[di]
    mov         ax,bx
    mov         bx,si
    call        far ptr strcpy_
    mov         ax,word ptr -0eH[bp]
    inc         word ptr -0eH[bp]
    jmp         L$102
L$101:
    mov         cx,cs
    mov         dx,offset L$8
    mov         si,dx
    mov         bx,word ptr -0eH[bp]
    shl         bx,1
    shl         bx,1
    mov         ax,seg _AsmBuffer
    mov         ds,ax
    lds         di,dword ptr DGROUP:_AsmBuffer[bx]
    mov         bx,word ptr 5[di]
    mov         dx,word ptr 7[di]
    mov         ax,bx
    mov         bx,si
    call        far ptr strcmp_
    test        ax,ax
    jne         L$102
    lds         bx,dword ptr -30H[bp]
    mov         byte ptr 0cH[bx],1
    mov         bx,word ptr -0eH[bp]
    inc         word ptr -0eH[bp]
L$102:
    mov         ax,word ptr -0eH[bp]
    cmp         ax,word ptr ss:_Token_Count
    jge         L$103
    mov         si,word ptr -0eH[bp]
    shl         si,1
    shl         si,1
    mov         bx,seg _AsmBuffer
    mov         ds,bx
    lds         bx,dword ptr DGROUP:_AsmBuffer[si]
    cmp         byte ptr 4[bx],2cH
    jne         L$104
L$103:
    jmp         L$105
L$104:
    mov         ax,21H
    call        far ptr AsmError_
    mov         word ptr -0cH[bp],0ffffH
    jmp         near ptr L$128
L$105:
    mov         ax,word ptr -0eH[bp]
    inc         word ptr -0eH[bp]
    lds         bx,dword ptr -30H[bp]
    mov         word ptr [bx],0
    lds         bx,dword ptr -30H[bp]
    mov         word ptr 2[bx],0
    lds         bx,dword ptr -18H[bp]
    mov         dx,word ptr [bx]
    lds         bx,dword ptr -18H[bp]
    mov         ax,word ptr 2[bx]
    xor         cx,cx
    xor         bx,bx
    cmp         ax,bx
    jne         L$106
    cmp         dx,cx
    jne         L$106
    mov         bx,word ptr -30H[bp]
    lds         si,dword ptr -18H[bp]
    mov         word ptr [si],bx
    mov         bx,word ptr -2eH[bp]
    lds         si,dword ptr -18H[bp]
    mov         word ptr 2[si],bx
    jmp         L$111
L$106:
    lds         bx,dword ptr -18H[bp]
    mov         ax,word ptr [bx]
    mov         word ptr -24H[bp],ax
    lds         bx,dword ptr -18H[bp]
    mov         ax,word ptr 2[bx]
    mov         word ptr -22H[bp],ax
    jmp         L$108
L$107:
    lds         bx,dword ptr -24H[bp]
    mov         dx,word ptr [bx]
    lds         bx,dword ptr -24H[bp]
    mov         ax,word ptr 2[bx]
    mov         word ptr -24H[bp],dx
    mov         word ptr -22H[bp],ax
L$108:
    lds         bx,dword ptr -24H[bp]
    mov         dx,word ptr [bx]
    lds         bx,dword ptr -24H[bp]
    mov         ax,word ptr 2[bx]
    xor         cx,cx
    xor         bx,bx
    cmp         ax,bx
    jne         L$109
    cmp         dx,cx
    je          L$110
L$109:
    jmp         L$107
L$110:
    mov         bx,word ptr -30H[bp]
    lds         si,dword ptr -24H[bp]
    mov         word ptr [si],bx
    mov         bx,word ptr -2eH[bp]
    lds         si,dword ptr -24H[bp]
    mov         word ptr 2[si],bx
L$111:
    jmp         near ptr L$96
L$112:
    mov         dx,ss
    lea         ax,-130H[bp]
    mov         bx,ax
    mov         ax,bx
    call        far ptr ReadTextLine_
    mov         bx,ax
    mov         ax,dx
    mov         word ptr -1cH[bp],bx
    mov         word ptr -1aH[bp],ax
    mov         dx,word ptr -1cH[bp]
    mov         ax,word ptr -1aH[bp]
    xor         cx,cx
    xor         bx,bx
    cmp         ax,bx
    jne         L$113
    cmp         dx,cx
    jne         L$113
    mov         ax,87H
    call        far ptr AsmError_
    mov         word ptr -0cH[bp],0ffffH
    jmp         near ptr L$128
L$113:
    mov         cx,cs
    mov         dx,offset L$7
    mov         si,dx
    mov         bx,word ptr -1cH[bp]
    mov         dx,word ptr -1aH[bp]
    mov         ax,bx
    mov         bx,si
    call        near ptr L$77
    test        al,al
    je          L$115
    cmp         word ptr -10H[bp],0
    je          L$114
    mov         ax,word ptr -10H[bp]
    dec         word ptr -10H[bp]
    jmp         L$115
L$114:
    mov         word ptr -0cH[bp],1
    jmp         near ptr L$128
L$115:
    mov         ax,word ptr -1cH[bp]
    mov         word ptr -134H[bp],ax
    mov         ax,word ptr -1aH[bp]
    mov         word ptr -132H[bp],ax
L$116:
    lds         bx,dword ptr -134H[bp]
    mov         bl,byte ptr [bx]
    xor         bh,bh
    test        byte ptr ss:__IsTable[bx],2
    je          L$117
    mov         dx,word ptr -134H[bp]
    mov         ax,word ptr -132H[bp]
    inc         word ptr -134H[bp]
    jmp         L$116
L$117:
    mov         cx,word ptr -134H[bp]
    mov         bx,word ptr -132H[bp]
    xor         dx,dx
    xor         ax,ax
    cmp         bx,ax
    jne         L$118
    cmp         cx,dx
    je          L$119
L$118:
    lds         bx,dword ptr -134H[bp]
    mov         bl,byte ptr [bx]
    xor         bh,bh
    test        byte ptr ss:__IsTable[bx],2
    je          L$120
L$119:
    jmp         L$121
L$120:
    mov         dx,word ptr -134H[bp]
    mov         ax,word ptr -132H[bp]
    inc         word ptr -134H[bp]
    jmp         L$117
L$121:
    mov         cx,word ptr -134H[bp]
    mov         bx,word ptr -132H[bp]
    xor         dx,dx
    xor         ax,ax
    cmp         bx,ax
    jne         L$122
    cmp         cx,dx
    je          L$123
L$122:
    lds         bx,dword ptr -134H[bp]
    mov         bl,byte ptr [bx]
    xor         bh,bh
    test        byte ptr ss:__IsTable[bx],2
    jne         L$124
L$123:
    jmp         L$125
L$124:
    mov         dx,word ptr -134H[bp]
    mov         ax,word ptr -132H[bp]
    inc         word ptr -134H[bp]
    jmp         L$121
L$125:
    mov         cx,cs
    mov         dx,offset L$6
    mov         si,dx
    mov         bx,word ptr -134H[bp]
    mov         dx,word ptr -132H[bp]
    mov         ax,bx
    mov         bx,si
    call        near ptr L$77
    test        al,al
    je          L$126
    mov         ax,word ptr -10H[bp]
    inc         word ptr -10H[bp]
L$126:
    cmp         byte ptr ss:_Parse_Pass,0
    jne         L$127
    mov         si,word ptr -1cH[bp]
    mov         cx,word ptr -1aH[bp]
    mov         dx,word ptr -16H[bp]
    mov         ax,word ptr -18H[bp]
    add         ax,4
    mov         bx,ax
    mov         ax,bx
    mov         bx,si
    call        near ptr L$11
    mov         cx,ax
    mov         bx,dx
    mov         word ptr -20H[bp],cx
    mov         word ptr -1eH[bp],bx
    lds         si,dword ptr -18H[bp]
    mov         si,word ptr [si]
    lds         bx,dword ptr -18H[bp]
    mov         cx,word ptr 2[bx]
    mov         bx,word ptr -20H[bp]
    mov         dx,word ptr -1eH[bp]
    mov         ax,bx
    mov         bx,si
    call        near ptr L$32
L$127:
    jmp         near ptr L$112
L$128:
    mov         ax,word ptr -0cH[bp]
    lea         sp,-0aH[bp]
    pop         di
    pop         si
    pop         dx
    pop         cx
    pop         bx
    pop         bp
    ret         
L$129:
    push        bp
    mov         bp,sp
    push        ax
    mov         ax,26H
    call        far ptr __STK
    pop         ax
    push        si
    push        di
    sub         sp,1cH
    mov         word ptr -1cH[bp],ax
    mov         word ptr -1aH[bp],dx
    mov         word ptr -18H[bp],bx
    mov         word ptr -16H[bp],cx
    mov         byte ptr -6[bp],0
    lds         bx,dword ptr -1cH[bp]
    mov         byte ptr [bx],0
    mov         ax,word ptr -18H[bp]
    mov         word ptr -10H[bp],ax
    mov         ax,word ptr -16H[bp]
    mov         word ptr -0eH[bp],ax
    mov         ax,word ptr -10H[bp]
    mov         word ptr -14H[bp],ax
    mov         ax,word ptr -0eH[bp]
    mov         word ptr -12H[bp],ax
L$130:
    lds         bx,dword ptr -14H[bp]
    cmp         byte ptr [bx],0
    jne         L$132
    jmp         near ptr L$148
L$131:
    mov         ax,word ptr -12H[bp]
    mov         word ptr -0eH[bp],ax
    mov         bx,word ptr -14H[bp]
    add         bx,3
    mov         word ptr -10H[bp],bx
    jmp         L$130
L$132:
    mov         bx,word ptr -10H[bp]
    mov         word ptr -14H[bp],bx
    mov         bx,word ptr -0eH[bp]
    mov         word ptr -12H[bp],bx
L$133:
    lds         bx,dword ptr -14H[bp]
    cmp         byte ptr [bx],23H
    jne         L$134
    lds         bx,dword ptr -14H[bp]
    mov         bl,byte ptr 1[bx]
    xor         bh,bh
    test        byte ptr ss:__IsTable[bx],20H
    jne         L$135
L$134:
    jmp         L$136
L$135:
    lds         bx,dword ptr -14H[bp]
    mov         bl,byte ptr 2[bx]
    xor         bh,bh
    test        byte ptr ss:__IsTable[bx],20H
    jne         L$137
L$136:
    mov         word ptr -1eH[bp],1
    jmp         L$138
L$137:
    mov         word ptr -1eH[bp],0
L$138:
    cmp         word ptr -1eH[bp],0
    je          L$139
    lds         bx,dword ptr -14H[bp]
    cmp         byte ptr [bx],0
    jne         L$141
L$139:
    jmp         L$142
L$140:
    mov         dx,word ptr -14H[bp]
    mov         ax,word ptr -12H[bp]
    inc         word ptr -14H[bp]
    jmp         L$133
L$141:
    jmp         L$140
L$142:
    lds         bx,dword ptr -14H[bp]
    cmp         byte ptr [bx],0
    jne         L$143
    mov         bx,word ptr -14H[bp]
    mov         dx,word ptr -12H[bp]
    sub         bx,word ptr -10H[bp]
    mov         ax,bx
    push        ax
    mov         si,word ptr -10H[bp]
    mov         cx,word ptr -0eH[bp]
    mov         bx,word ptr -1cH[bp]
    mov         dx,word ptr -1aH[bp]
    mov         ax,bx
    mov         bx,si
    call        far ptr strncat_
    mov         bx,word ptr -1cH[bp]
    mov         dx,word ptr -1aH[bp]
    mov         ax,bx
    call        far ptr strlen_
    mov         word ptr -8[bp],ax
    jmp         near ptr L$149
L$143:
    lds         bx,dword ptr -14H[bp]
    mov         al,byte ptr 1[bx]
    mov         byte ptr -0cH[bp],al
    lds         bx,dword ptr -14H[bp]
    mov         al,byte ptr 2[bx]
    mov         byte ptr -0bH[bp],al
    mov         byte ptr -0aH[bp],0
    mov         dx,ss
    lea         cx,-0cH[bp]
    mov         bx,cx
    mov         ax,bx
    call        far ptr atoi_
    mov         byte ptr -6[bp],al
    mov         bx,word ptr -14H[bp]
    mov         dx,word ptr -12H[bp]
    sub         bx,word ptr -10H[bp]
    push        bx
    mov         si,word ptr -10H[bp]
    mov         cx,word ptr -0eH[bp]
    mov         bx,word ptr -1cH[bp]
    mov         dx,word ptr -1aH[bp]
    mov         ax,bx
    mov         bx,si
    call        far ptr strncat_
    mov         dl,byte ptr -6[bp]
    xor         dh,dh
    cmp         dx,word ptr 4[bp]
    jg          L$144
    mov         word ptr -20H[bp],0
    jmp         L$145
L$144:
    mov         cx,1a0H
    mov         dx,cs
    mov         ax,offset L$2
    mov         bx,ax
    mov         ax,bx
    mov         bx,cx
    jmp         far ptr InternalError_
L$145:
    mov         al,byte ptr -6[bp]
    xor         ah,ah
    shl         ax,1
    shl         ax,1
    mov         bx,ax
    mov         ds,word ptr 8[bp]
    add         bx,word ptr 6[bp]
    mov         dx,word ptr [bx]
    mov         ax,word ptr 2[bx]
    xor         cx,cx
    xor         bx,bx
    cmp         ax,bx
    jne         L$146
    cmp         dx,cx
    je          L$147
L$146:
    mov         dl,byte ptr -6[bp]
    inc         byte ptr -6[bp]
    xor         dh,dh
    shl         dx,1
    shl         dx,1
    mov         bx,dx
    mov         ds,word ptr 8[bp]
    add         bx,word ptr 6[bp]
    mov         si,word ptr [bx]
    mov         cx,word ptr 2[bx]
    mov         bx,word ptr -1cH[bp]
    mov         dx,word ptr -1aH[bp]
    mov         ax,bx
    mov         bx,si
    call        far ptr strcat_
L$147:
    jmp         near ptr L$131
L$148:
    mov         bx,word ptr -1cH[bp]
    mov         dx,word ptr -1aH[bp]
    mov         ax,bx
    call        far ptr strlen_
    mov         word ptr -8[bp],ax
L$149:
    mov         ax,word ptr -8[bp]
    lea         sp,-4[bp]
    pop         di
    pop         si
    pop         bp
    ret         6
L$150:
    push        bp
    mov         bp,sp
    push        ax
    mov         ax,12cH
    call        far ptr __STK
    pop         ax
    push        si
    push        di
    sub         sp,11eH
    mov         word ptr -16H[bp],ax
    mov         word ptr -14H[bp],dx
    mov         word ptr -1eH[bp],bx
    mov         word ptr -1cH[bp],cx
    mov         byte ptr -6[bp],0
    mov         ax,word ptr -1eH[bp]
    mov         word ptr -0aH[bp],ax
    mov         ax,word ptr -1cH[bp]
    mov         word ptr -8[bp],ax
L$151:
    mov         cx,word ptr -0aH[bp]
    mov         bx,word ptr -8[bp]
    xor         dx,dx
    xor         ax,ax
    cmp         bx,ax
    jne         L$153
    cmp         cx,dx
    jne         L$153
    jmp         L$154
L$152:
    lds         bx,dword ptr -0aH[bp]
    mov         dx,word ptr [bx]
    lds         bx,dword ptr -0aH[bp]
    mov         ax,word ptr 2[bx]
    mov         word ptr -0aH[bp],dx
    mov         word ptr -8[bp],ax
    jmp         L$151
L$153:
    mov         al,byte ptr -6[bp]
    inc         byte ptr -6[bp]
    jmp         L$152
L$154:
    mov         al,byte ptr -6[bp]
    xor         ah,ah
    shl         ax,1
    shl         ax,1
    inc         ax
    and         al,0feH
    mov         dx,ax
    call        far ptr stackavail_
    cmp         dx,ax
    jae         L$155
    mov         al,byte ptr -6[bp]
    xor         ah,ah
    shl         ax,1
    shl         ax,1
    inc         ax
    and         al,0feH
    sub         sp,ax
    mov         ax,sp
    mov         dx,ss
    mov         bx,ax
    mov         ax,dx
    mov         word ptr -122H[bp],bx
    mov         word ptr -120H[bp],ax
    jmp         L$156
L$155:
    mov         word ptr -122H[bp],0
    mov         word ptr -120H[bp],0
L$156:
    mov         ax,word ptr -122H[bp]
    mov         word ptr -12H[bp],ax
    mov         ax,word ptr -120H[bp]
    mov         word ptr -10H[bp],ax
    mov         byte ptr -6[bp],0
    mov         bx,word ptr -1eH[bp]
    mov         word ptr -0aH[bp],bx
    mov         ax,word ptr -1cH[bp]
    mov         word ptr -8[bp],ax
L$157:
    mov         cx,word ptr -0aH[bp]
    mov         bx,word ptr -8[bp]
    xor         dx,dx
    xor         ax,ax
    cmp         bx,ax
    jne         L$159
    cmp         cx,dx
    jne         L$159
    jmp         L$160
L$158:
    lds         bx,dword ptr -0aH[bp]
    mov         dx,word ptr [bx]
    lds         bx,dword ptr -0aH[bp]
    mov         ax,word ptr 2[bx]
    mov         word ptr -0aH[bp],dx
    mov         word ptr -8[bp],ax
    jmp         L$157
L$159:
    mov         al,byte ptr -6[bp]
    xor         ah,ah
    shl         ax,1
    shl         ax,1
    lds         bx,dword ptr -12H[bp]
    add         bx,ax
    les         si,dword ptr -0aH[bp]
    mov         dx,word ptr es:8[si]
    les         si,dword ptr -0aH[bp]
    mov         ax,word ptr es:0aH[si]
    mov         word ptr [bx],dx
    mov         word ptr 2[bx],ax
    mov         al,byte ptr -6[bp]
    inc         byte ptr -6[bp]
    jmp         L$158
L$160:
    mov         dx,word ptr -12H[bp]
    mov         ax,word ptr -10H[bp]
    push        ax
    push        dx
    mov         al,byte ptr -6[bp]
    xor         ah,ah
    dec         ax
    push        ax
    lds         si,dword ptr -16H[bp]
    mov         si,word ptr 4[si]
    lds         bx,dword ptr -16H[bp]
    mov         cx,word ptr 6[bx]
    mov         dx,ss
    lea         ax,-11eH[bp]
    mov         bx,ax
    mov         ax,bx
    mov         bx,si
    call        near ptr L$129
    mov         dx,ss
    lea         ax,-11eH[bp]
    mov         cx,ax
    mov         ax,cx
    call        far ptr strlen_
    inc         ax
    call        far ptr AsmAlloc_
    mov         bx,ax
    mov         ax,dx
    mov         word ptr -0eH[bp],bx
    mov         word ptr -0cH[bp],ax
    mov         cx,ss
    lea         ax,-11eH[bp]
    mov         si,ax
    mov         bx,word ptr -0eH[bp]
    mov         dx,word ptr -0cH[bp]
    mov         ax,bx
    mov         bx,si
    call        far ptr strcpy_
    mov         ax,word ptr -0eH[bp]
    mov         word ptr -1aH[bp],ax
    mov         ax,word ptr -0cH[bp]
    mov         word ptr -18H[bp],ax
    mov         ax,word ptr -1aH[bp]
    mov         dx,word ptr -18H[bp]
    lea         sp,-4[bp]
    pop         di
    pop         si
    pop         bp
    ret         
L$161:
    push        bp
    mov         bp,sp
    push        ax
    mov         ax,14H
    call        far ptr __STK
    pop         ax
    push        bx
    push        cx
    push        si
    push        di
    sub         sp,8
    mov         word ptr -10H[bp],ax
    mov         word ptr -0eH[bp],dx
    mov         ax,word ptr -10H[bp]
    mov         word ptr -0cH[bp],ax
    mov         ax,word ptr -0eH[bp]
    mov         word ptr -0aH[bp],ax
L$162:
    mov         cx,word ptr -0cH[bp]
    mov         bx,word ptr -0aH[bp]
    xor         dx,dx
    xor         ax,ax
    cmp         bx,ax
    jne         L$164
    cmp         cx,dx
    jne         L$164
    jmp         L$165
L$163:
    lds         bx,dword ptr -0cH[bp]
    mov         dx,word ptr [bx]
    lds         bx,dword ptr -0cH[bp]
    mov         ax,word ptr 2[bx]
    mov         word ptr -0cH[bp],dx
    mov         word ptr -0aH[bp],ax
    jmp         L$162
L$164:
    lds         bx,dword ptr -0cH[bp]
    mov         bx,word ptr 8[bx]
    lds         si,dword ptr -0cH[bp]
    mov         dx,word ptr 0aH[si]
    mov         ax,bx
    call        far ptr AsmFree_
    lds         bx,dword ptr -0cH[bp]
    mov         word ptr 8[bx],0
    lds         bx,dword ptr -0cH[bp]
    mov         word ptr 0aH[bx],0
    jmp         L$163
L$165:
    lea         sp,-8[bp]
    pop         di
    pop         si
    pop         cx
    pop         bx
    pop         bp
    ret         
ExpandMacro_:
    inc         bp
    push        bp
    mov         bp,sp
    push        ax
    mov         ax,140H
    call        far ptr __STK
    pop         ax
    push        bx
    push        cx
    push        dx
    push        si
    push        di
    sub         sp,128H
    mov         word ptr -18H[bp],ax
    mov         word ptr -28H[bp],0
    mov         word ptr -26H[bp],0
    mov         word ptr -14H[bp],0
    mov         byte ptr -0cH[bp],0
    mov         si,word ptr -14H[bp]
    shl         si,1
    shl         si,1
    mov         bx,seg _AsmBuffer
    mov         ds,bx
    lds         bx,dword ptr DGROUP:_AsmBuffer[si]
    cmp         byte ptr 4[bx],0
    jne         L$166
    mov         ax,word ptr -18H[bp]
    mov         word ptr -16H[bp],ax
    jmp         near ptr L$231
L$166:
    mov         byte ptr -11H[bp],0
L$167:
    mov         ax,word ptr -14H[bp]
    cmp         ax,word ptr -18H[bp]
    jl          L$169
    jmp         L$175
L$168:
    mov         ax,word ptr -14H[bp]
    inc         word ptr -14H[bp]
    jmp         L$167
L$169:
    mov         si,word ptr -14H[bp]
    shl         si,1
    shl         si,1
    mov         bx,seg _AsmBuffer
    mov         ds,bx
    lds         bx,dword ptr DGROUP:_AsmBuffer[si]
    cmp         byte ptr 4[bx],3
    jne         L$170
    mov         bx,word ptr -14H[bp]
    shl         bx,1
    shl         bx,1
    mov         ax,seg _AsmBuffer
    mov         ds,ax
    lds         si,dword ptr DGROUP:_AsmBuffer[bx]
    mov         bx,word ptr 5[si]
    mov         dx,word ptr 7[si]
    mov         ax,bx
    call        far ptr AsmGetSymbol_
    mov         bx,ax
    mov         ax,dx
    mov         word ptr -28H[bp],bx
    mov         word ptr -26H[bp],ax
L$170:
    mov         cx,word ptr -28H[bp]
    mov         bx,word ptr -26H[bp]
    xor         dx,dx
    xor         ax,ax
    cmp         bx,ax
    jne         L$171
    cmp         cx,dx
    je          L$172
L$171:
    lds         bx,dword ptr -28H[bp]
    cmp         byte ptr 15H[bx],7
    je          L$173
L$172:
    jmp         L$174
L$173:
    jmp         L$175
L$174:
    jmp         L$168
L$175:
    mov         cx,word ptr -28H[bp]
    mov         bx,word ptr -26H[bp]
    xor         dx,dx
    xor         ax,ax
    cmp         bx,ax
    jne         L$176
    cmp         cx,dx
    je          L$177
L$176:
    lds         bx,dword ptr -28H[bp]
    cmp         byte ptr 15H[bx],7
    je          L$178
L$177:
    mov         ax,word ptr -18H[bp]
    mov         word ptr -16H[bp],ax
    jmp         near ptr L$231
L$178:
    mov         ax,word ptr -14H[bp]
    mov         word ptr -10H[bp],ax
    mov         si,word ptr -14H[bp]
    shl         si,1
    shl         si,1
    mov         ax,seg _AsmBuffer
    mov         ds,ax
    lds         bx,dword ptr DGROUP:_AsmBuffer+4[si]
    cmp         byte ptr 4[bx],6
    jne         L$179
    mov         si,word ptr -14H[bp]
    shl         si,1
    shl         si,1
    mov         bx,seg _AsmBuffer
    mov         ds,bx
    lds         bx,dword ptr DGROUP:_AsmBuffer+4[si]
    cmp         word ptr 2[bx],0
    jne         L$179
    cmp         word ptr [bx],17dH
    je          L$180
L$179:
    jmp         L$181
L$180:
    mov         ax,word ptr -18H[bp]
    mov         word ptr -16H[bp],ax
    jmp         near ptr L$231
L$181:
    cmp         word ptr -10H[bp],0
    je          L$186
    call        far ptr PushLineQueue_
    mov         byte ptr -130H[bp],0
    mov         word ptr -14H[bp],0
L$182:
    mov         ax,word ptr -14H[bp]
    cmp         ax,word ptr -10H[bp]
    jl          L$184
    jmp         L$185
L$183:
    mov         ax,word ptr -14H[bp]
    inc         word ptr -14H[bp]
    jmp         L$182
L$184:
    mov         si,word ptr -14H[bp]
    shl         si,1
    shl         si,1
    mov         ax,seg _AsmBuffer
    mov         ds,ax
    lds         bx,dword ptr DGROUP:_AsmBuffer[si]
    mov         si,word ptr 5[bx]
    mov         cx,word ptr 7[bx]
    mov         dx,ss
    lea         ax,-130H[bp]
    mov         bx,ax
    mov         ax,bx
    mov         bx,si
    call        far ptr strcat_
    jmp         L$183
L$185:
    mov         dx,ss
    lea         ax,-130H[bp]
    mov         bx,ax
    mov         ax,bx
    call        far ptr InputQueueLine_
L$186:
    mov         ax,word ptr -10H[bp]
    inc         ax
    mov         word ptr -14H[bp],ax
    mov         si,word ptr -14H[bp]
    shl         si,1
    shl         si,1
    mov         ax,seg _AsmBuffer
    mov         ds,ax
    lds         bx,dword ptr DGROUP:_AsmBuffer-4[si]
    push        word ptr 7[bx]
    push        word ptr 5[bx]
    mov         ax,cs
    mov         bx,offset L$1
    push        ax
    push        bx
    call        far ptr DoDebugMsg_
    add         sp,8
    mov         bx,word ptr -28H[bp]
    mov         word ptr -24H[bp],bx
    mov         ax,word ptr -26H[bp]
    mov         word ptr -22H[bp],ax
    lds         bx,dword ptr -24H[bp]
    mov         bx,word ptr 1aH[bx]
    mov         word ptr -1cH[bp],bx
    lds         bx,dword ptr -24H[bp]
    mov         ax,word ptr 1cH[bx]
    mov         word ptr -1aH[bp],ax
    lds         bx,dword ptr -1cH[bp]
    mov         ax,word ptr [bx]
    mov         word ptr -30H[bp],ax
    lds         bx,dword ptr -1cH[bp]
    mov         ax,word ptr 2[bx]
    mov         word ptr -2eH[bp],ax
L$187:
    mov         cx,word ptr -30H[bp]
    mov         bx,word ptr -2eH[bp]
    xor         dx,dx
    xor         ax,ax
    cmp         bx,ax
    jne         L$189
    cmp         cx,dx
    jne         L$189
    jmp         near ptr L$224
L$188:
    lds         bx,dword ptr -30H[bp]
    mov         dx,word ptr [bx]
    lds         bx,dword ptr -30H[bp]
    mov         ax,word ptr 2[bx]
    mov         word ptr -30H[bp],dx
    mov         word ptr -2eH[bp],ax
    jmp         L$187
L$189:
    mov         byte ptr -130H[bp],0
    mov         ax,word ptr -14H[bp]
    cmp         ax,word ptr -18H[bp]
    jl          L$190
    jmp         near ptr L$222
L$190:
    mov         si,word ptr -14H[bp]
    shl         si,1
    shl         si,1
    mov         bx,seg _AsmBuffer
    mov         ds,bx
    lds         bx,dword ptr DGROUP:_AsmBuffer[si]
    cmp         byte ptr 4[bx],2cH
    je          L$192
    mov         si,word ptr -14H[bp]
    shl         si,1
    shl         si,1
    mov         bx,seg _AsmBuffer
    mov         ds,bx
    lds         bx,dword ptr DGROUP:_AsmBuffer[si]
    cmp         byte ptr 4[bx],5
    jne         L$191
    mov         bx,word ptr -14H[bp]
    shl         bx,1
    shl         bx,1
    mov         ax,seg _AsmBuffer
    mov         ds,ax
    lds         si,dword ptr DGROUP:_AsmBuffer[bx]
    mov         bx,word ptr 5[si]
    mov         dx,word ptr 7[si]
    mov         ax,bx
    call        far ptr strlen_
    test        ax,ax
    je          L$192
L$191:
    jmp         near ptr L$199
L$192:
    lds         bx,dword ptr -30H[bp]
    cmp         byte ptr 0cH[bx],0
    je          L$193
    mov         ax,459H
    call        far ptr AsmError_
    mov         word ptr -16H[bp],0ffffH
    jmp         near ptr L$231
L$193:
    lds         bx,dword ptr -30H[bp]
    mov         dx,word ptr 0dH[bx]
    lds         bx,dword ptr -30H[bp]
    mov         ax,word ptr 0fH[bx]
    xor         cx,cx
    xor         bx,bx
    cmp         ax,bx
    jne         L$194
    cmp         dx,cx
    je          L$195
L$194:
    lds         bx,dword ptr -30H[bp]
    mov         bx,word ptr 0dH[bx]
    lds         si,dword ptr -30H[bp]
    mov         dx,word ptr 0fH[si]
    mov         ax,bx
    call        far ptr strlen_
    inc         ax
    call        far ptr AsmAlloc_
    mov         cx,ax
    mov         bx,dx
    lds         si,dword ptr -30H[bp]
    mov         word ptr 8[si],cx
    lds         si,dword ptr -30H[bp]
    mov         word ptr 0aH[si],bx
    lds         si,dword ptr -30H[bp]
    mov         si,word ptr 0dH[si]
    lds         bx,dword ptr -30H[bp]
    mov         cx,word ptr 0fH[bx]
    lds         bx,dword ptr -30H[bp]
    mov         bx,word ptr 8[bx]
    lds         di,dword ptr -30H[bp]
    mov         dx,word ptr 0aH[di]
    mov         ax,bx
    mov         bx,si
    call        far ptr strcpy_
L$195:
    mov         si,word ptr -14H[bp]
    shl         si,1
    shl         si,1
    mov         bx,seg _AsmBuffer
    mov         ds,bx
    lds         bx,dword ptr DGROUP:_AsmBuffer[si]
    cmp         byte ptr 4[bx],2cH
    je          L$198
    mov         ax,word ptr -14H[bp]
    inc         word ptr -14H[bp]
    mov         ax,word ptr -14H[bp]
    cmp         ax,word ptr -18H[bp]
    jge         L$196
    mov         si,word ptr -14H[bp]
    shl         si,1
    shl         si,1
    mov         bx,seg _AsmBuffer
    mov         ds,bx
    lds         bx,dword ptr DGROUP:_AsmBuffer[si]
    cmp         byte ptr 4[bx],2cH
    jne         L$197
L$196:
    jmp         L$198
L$197:
    mov         ax,21H
    call        far ptr AsmError_
    mov         word ptr -16H[bp],0ffffH
    jmp         near ptr L$231
L$198:
    mov         ax,word ptr -14H[bp]
    inc         word ptr -14H[bp]
    jmp         near ptr L$221
L$199:
    mov         si,word ptr -14H[bp]
    shl         si,1
    shl         si,1
    mov         bx,seg _AsmBuffer
    mov         ds,bx
    lds         bx,dword ptr DGROUP:_AsmBuffer[si]
    cmp         byte ptr 4[bx],0
    jne         L$200
    jmp         near ptr L$220
L$200:
    mov         si,word ptr -14H[bp]
    shl         si,1
    shl         si,1
    mov         bx,seg _AsmBuffer
    mov         ds,bx
    lds         bx,dword ptr DGROUP:_AsmBuffer[si]
    les         si,dword ptr 5[bx]
    cmp         byte ptr es:[si],25H
    jne         L$201
    mov         si,word ptr -14H[bp]
    shl         si,1
    shl         si,1
    mov         ax,seg _AsmBuffer
    mov         ds,ax
    lds         bx,dword ptr DGROUP:_AsmBuffer[si]
    les         si,dword ptr 5[bx]
    mov         byte ptr es:[si],20H
    mov         byte ptr -0cH[bp],1
    mov         ax,word ptr -14H[bp]
    mov         word ptr -0eH[bp],ax
L$201:
    cmp         byte ptr -0cH[bp],0
    je          L$202
    jmp         near ptr L$210
L$202:
    mov         si,word ptr -14H[bp]
    shl         si,1
    shl         si,1
    mov         bx,seg _AsmBuffer
    mov         ds,bx
    lds         bx,dword ptr DGROUP:_AsmBuffer[si]
    cmp         byte ptr 4[bx],2cH
    je          L$203
    mov         si,word ptr -14H[bp]
    shl         si,1
    shl         si,1
    mov         ax,seg _AsmBuffer
    mov         ds,ax
    lds         bx,dword ptr DGROUP:_AsmBuffer[si]
    mov         dx,word ptr 5[bx]
    mov         ax,word ptr 7[bx]
    xor         cx,cx
    xor         bx,bx
    cmp         ax,bx
    jne         L$204
    cmp         dx,cx
    jne         L$204
L$203:
    jmp         L$205
L$204:
    mov         ax,word ptr -14H[bp]
    cmp         ax,word ptr -18H[bp]
    jne         L$206
L$205:
    jmp         near ptr L$220
L$206:
    mov         si,word ptr -14H[bp]
    shl         si,1
    shl         si,1
    mov         bx,seg _AsmBuffer
    mov         ds,bx
    lds         bx,dword ptr DGROUP:_AsmBuffer[si]
    cmp         byte ptr 4[bx],11H
    jbe         L$207
    mov         si,word ptr -14H[bp]
    shl         si,1
    shl         si,1
    mov         ax,seg _AsmBuffer
    mov         ds,ax
    lds         bx,dword ptr DGROUP:_AsmBuffer[si]
    les         si,dword ptr 5[bx]
    mov         al,byte ptr es:[si]
    mov         byte ptr -12H[bp],al
    mov         cx,ss
    lea         ax,-12H[bp]
    mov         si,ax
    mov         dx,ss
    lea         ax,-130H[bp]
    mov         bx,ax
    mov         ax,bx
    mov         bx,si
    call        far ptr strcat_
    jmp         L$209
L$207:
    mov         si,word ptr -14H[bp]
    shl         si,1
    shl         si,1
    mov         bx,seg _AsmBuffer
    mov         ds,bx
    lds         bx,dword ptr DGROUP:_AsmBuffer[si]
    cmp         byte ptr 4[bx],0cH
    jne         L$208
    mov         di,0aH
    mov         dx,ss
    lea         ax,-130H[bp]
    mov         cx,ax
    mov         ax,cx
    call        far ptr strlen_
    mov         bx,ax
    mov         ax,ss
    lea         dx,-130H[bp]
    mov         cx,ax
    add         dx,bx
    mov         si,word ptr -14H[bp]
    shl         si,1
    shl         si,1
    mov         ax,seg _AsmBuffer
    mov         ds,ax
    lds         bx,dword ptr DGROUP:_AsmBuffer[si]
    mov         ax,word ptr [bx]
    mov         bx,dx
    mov         dx,di
    call        far ptr itoa_
    jmp         L$209
L$208:
    mov         si,word ptr -14H[bp]
    shl         si,1
    shl         si,1
    mov         ax,seg _AsmBuffer
    mov         ds,ax
    lds         bx,dword ptr DGROUP:_AsmBuffer[si]
    mov         si,word ptr 5[bx]
    mov         cx,word ptr 7[bx]
    mov         dx,ss
    lea         ax,-130H[bp]
    mov         bx,ax
    mov         ax,bx
    mov         bx,si
    call        far ptr strcat_
L$209:
    jmp         near ptr L$219
L$210:
    xor         dx,dx
    mov         ax,word ptr -14H[bp]
    call        far ptr ExpandSymbol_
    mov         word ptr -132H[bp],ax
    cmp         word ptr -132H[bp],0ffffH
    jl          L$211
    cmp         word ptr -132H[bp],0ffffH
    jle         L$212
    cmp         word ptr -132H[bp],2
    je          L$213
    jmp         L$214
L$211:
    jmp         L$214
L$212:
    lds         bx,dword ptr -1cH[bp]
    mov         bx,word ptr [bx]
    lds         si,dword ptr -1cH[bp]
    mov         dx,word ptr 2[si]
    mov         ax,bx
    call        near ptr L$161
    mov         word ptr -16H[bp],0ffffH
    jmp         near ptr L$231
L$213:
    jmp         near ptr L$199
L$214:
    mov         si,word ptr -14H[bp]
    shl         si,1
    shl         si,1
    mov         bx,seg _AsmBuffer
    mov         ds,bx
    lds         bx,dword ptr DGROUP:_AsmBuffer[si]
    cmp         byte ptr 4[bx],2cH
    je          L$215
    mov         si,word ptr -14H[bp]
    shl         si,1
    shl         si,1
    mov         ax,seg _AsmBuffer
    mov         ds,ax
    lds         bx,dword ptr DGROUP:_AsmBuffer[si]
    mov         dx,word ptr 5[bx]
    mov         ax,word ptr 7[bx]
    xor         cx,cx
    xor         bx,bx
    cmp         ax,bx
    jne         L$216
    cmp         dx,cx
    jne         L$216
L$215:
    jmp         L$217
L$216:
    mov         si,word ptr -14H[bp]
    shl         si,1
    shl         si,1
    mov         bx,seg _AsmBuffer
    mov         ds,bx
    lds         bx,dword ptr DGROUP:_AsmBuffer+4[si]
    cmp         byte ptr 4[bx],0
    jne         L$219
L$217:
    mov         si,word ptr -14H[bp]
    shl         si,1
    shl         si,1
    mov         bx,seg _AsmBuffer
    mov         ds,bx
    lds         bx,dword ptr DGROUP:_AsmBuffer+4[si]
    cmp         byte ptr 4[bx],0
    jne         L$218
    mov         ax,word ptr -14H[bp]
    inc         word ptr -14H[bp]
L$218:
    mov         bx,word ptr -14H[bp]
    dec         bx
    mov         dx,word ptr -0eH[bp]
    mov         ax,word ptr -18H[bp]
    call        far ptr EvalExpr_
    mov         word ptr -18H[bp],ax
    mov         byte ptr -0cH[bp],0
    mov         ax,word ptr -18H[bp]
    mov         word ptr ss:_Token_Count,ax
    mov         ax,word ptr -0eH[bp]
    mov         word ptr -14H[bp],ax
L$219:
    mov         ax,word ptr -14H[bp]
    inc         word ptr -14H[bp]
    jmp         near ptr L$199
L$220:
    mov         ax,word ptr -14H[bp]
    inc         word ptr -14H[bp]
    mov         dx,ss
    lea         ax,-130H[bp]
    mov         bx,ax
    mov         ax,bx
    call        far ptr strlen_
    inc         ax
    call        far ptr AsmAlloc_
    mov         bx,ax
    mov         ax,dx
    lds         si,dword ptr -30H[bp]
    mov         word ptr 8[si],bx
    lds         bx,dword ptr -30H[bp]
    mov         word ptr 0aH[bx],ax
    mov         cx,ss
    lea         ax,-130H[bp]
    mov         si,ax
    lds         bx,dword ptr -30H[bp]
    mov         bx,word ptr 8[bx]
    lds         di,dword ptr -30H[bp]
    mov         dx,word ptr 0aH[di]
    mov         ax,bx
    mov         bx,si
    call        far ptr strcpy_
L$221:
    jmp         L$223
L$222:
    lds         bx,dword ptr -30H[bp]
    cmp         byte ptr 0cH[bx],0
    je          L$223
    mov         ax,459H
    call        far ptr AsmError_
    mov         word ptr -16H[bp],0ffffH
    jmp         near ptr L$231
L$223:
    jmp         near ptr L$188
L$224:
    call        far ptr PushLineQueue_
    lds         bx,dword ptr -1cH[bp]
    mov         ax,word ptr 4[bx]
    mov         word ptr -2cH[bp],ax
    lds         bx,dword ptr -1cH[bp]
    mov         ax,word ptr 6[bx]
    mov         word ptr -2aH[bp],ax
L$225:
    mov         cx,word ptr -2cH[bp]
    mov         bx,word ptr -2aH[bp]
    xor         dx,dx
    xor         ax,ax
    cmp         bx,ax
    jne         L$227
    cmp         cx,dx
    jne         L$227
    jmp         near ptr L$230
L$226:
    lds         bx,dword ptr -2cH[bp]
    mov         dx,word ptr [bx]
    lds         bx,dword ptr -2cH[bp]
    mov         ax,word ptr 2[bx]
    mov         word ptr -2cH[bp],dx
    mov         word ptr -2aH[bp],ax
    jmp         L$225
L$227:
    lds         si,dword ptr -1cH[bp]
    mov         si,word ptr [si]
    lds         bx,dword ptr -1cH[bp]
    mov         cx,word ptr 2[bx]
    mov         bx,word ptr -2cH[bp]
    mov         dx,word ptr -2aH[bp]
    mov         ax,bx
    mov         bx,si
    call        near ptr L$150
    mov         si,ax
    mov         cx,dx
    mov         word ptr -20H[bp],si
    mov         word ptr -1eH[bp],cx
    mov         si,cs
    mov         dx,offset L$5
    mov         di,dx
    mov         cx,word ptr -20H[bp]
    mov         dx,word ptr -1eH[bp]
    mov         ax,cx
    mov         bx,di
    mov         cx,si
    call        near ptr L$77
    test        al,al
    je          L$229
    mov         cx,seg _StringBuf
    mov         dx,offset _StringBuf
    mov         si,dx
    mov         bx,word ptr -20H[bp]
    mov         dx,word ptr -1eH[bp]
    mov         ax,bx
    mov         bx,si
    call        far ptr AsmScan_
    call        near ptr L$83
    cmp         ax,0ffffH
    jne         L$228
    mov         word ptr -16H[bp],0ffffH
    jmp         L$231
L$228:
    mov         bx,word ptr -20H[bp]
    mov         dx,word ptr -1eH[bp]
    mov         ax,bx
    call        far ptr AsmFree_
    jmp         near ptr L$226
L$229:
    mov         bx,word ptr -20H[bp]
    mov         dx,word ptr -1eH[bp]
    mov         ax,bx
    call        far ptr InputQueueLine_
    mov         bx,word ptr -20H[bp]
    mov         dx,word ptr -1eH[bp]
    mov         ax,bx
    call        far ptr AsmFree_
    jmp         near ptr L$226
L$230:
    lds         bx,dword ptr -28H[bp]
    mov         bx,word ptr 4[bx]
    lds         si,dword ptr -28H[bp]
    mov         dx,word ptr 6[si]
    mov         ax,bx
    call        far ptr PushMacro_
    lds         bx,dword ptr -1cH[bp]
    mov         bx,word ptr [bx]
    lds         si,dword ptr -1cH[bp]
    mov         dx,word ptr 2[si]
    mov         ax,bx
    call        near ptr L$161
    mov         word ptr -16H[bp],0
L$231:
    mov         ax,word ptr -16H[bp]
    lea         sp,-0aH[bp]
    pop         di
    pop         si
    pop         dx
    pop         cx
    pop         bx
    pop         bp
    dec         bp
    retf        
MacroDef_:
    inc         bp
    push        bp
    mov         bp,sp
    push        ax
    mov         ax,24H
    call        far ptr __STK
    pop         ax
    push        bx
    push        cx
    push        dx
    push        si
    push        di
    sub         sp,14H
    mov         word ptr -0cH[bp],ax
    cmp         byte ptr ss:_Parse_Pass,0
    je          L$232
    jmp         near ptr L$238
L$232:
    cmp         word ptr -0cH[bp],0
    jge         L$233
    mov         ax,41eH
    call        far ptr AsmError_
    mov         word ptr -0eH[bp],0ffffH
    jmp         near ptr L$244
L$233:
    mov         si,word ptr -0cH[bp]
    shl         si,1
    shl         si,1
    mov         ax,seg _AsmBuffer
    mov         ds,ax
    lds         bx,dword ptr DGROUP:_AsmBuffer[si]
    mov         ax,word ptr 5[bx]
    mov         word ptr -16H[bp],ax
    mov         ax,word ptr 7[bx]
    mov         word ptr -14H[bp],ax
    mov         bx,word ptr -16H[bp]
    mov         dx,word ptr -14H[bp]
    mov         ax,bx
    call        far ptr AsmGetSymbol_
    mov         bx,ax
    mov         ax,dx
    mov         word ptr -12H[bp],bx
    mov         word ptr -10H[bp],ax
    mov         cx,word ptr -12H[bp]
    mov         bx,word ptr -10H[bp]
    xor         dx,dx
    xor         ax,ax
    cmp         bx,ax
    je          L$234
    jmp         near ptr L$236
L$234:
    cmp         cx,dx
    je          L$235
    jmp         near ptr L$236
L$235:
    mov         cx,7
    mov         bx,word ptr -16H[bp]
    mov         dx,word ptr -14H[bp]
    mov         ax,bx
    mov         bx,cx
    call        far ptr dir_insert_
    mov         bx,dx
    mov         word ptr -1aH[bp],ax
    mov         word ptr -18H[bp],bx
    call        far ptr get_curr_filename_
    mov         bx,ax
    mov         ax,dx
    mov         word ptr -16H[bp],bx
    mov         word ptr -14H[bp],ax
    mov         bx,word ptr -16H[bp]
    mov         dx,word ptr -14H[bp]
    mov         ax,bx
    call        far ptr strlen_
    inc         ax
    call        far ptr AsmAlloc_
    mov         bx,ax
    mov         ax,dx
    lds         si,dword ptr -1aH[bp]
    mov         si,word ptr 1aH[si]
    lds         di,dword ptr -1aH[bp]
    mov         ds,word ptr 1cH[di]
    mov         word ptr 8[si],bx
    mov         word ptr 0aH[si],ax
    mov         si,word ptr -16H[bp]
    mov         cx,word ptr -14H[bp]
    lds         di,dword ptr -1aH[bp]
    mov         di,word ptr 1aH[di]
    lds         bx,dword ptr -1aH[bp]
    mov         ds,word ptr 1cH[bx]
    mov         bx,word ptr 8[di]
    mov         dx,word ptr 0aH[di]
    mov         ax,bx
    mov         bx,si
    call        far ptr strcpy_
    mov         bx,word ptr -1aH[bp]
    mov         word ptr -12H[bp],bx
    mov         bx,word ptr -18H[bp]
    mov         word ptr -10H[bp],bx
    jmp         L$237
L$236:
    mov         ax,41fH
    call        far ptr AsmError_
    mov         word ptr -0eH[bp],0ffffH
    jmp         near ptr L$244
L$237:
    lds         bx,dword ptr -12H[bp]
    mov         byte ptr 15H[bx],7
    mov         ax,word ptr -0cH[bp]
    call        near ptr L$93
    mov         word ptr -0eH[bp],ax
    jmp         near ptr L$244
L$238:
    cmp         word ptr -0cH[bp],0
    jl          L$239
    mov         word ptr -1cH[bp],0
    jmp         L$240
L$239:
    mov         cx,28eH
    mov         dx,cs
    mov         ax,offset L$2
    mov         bx,ax
    mov         ax,bx
    mov         bx,cx
    jmp         far ptr InternalError_
L$240:
    mov         bx,word ptr -0cH[bp]
    shl         bx,1
    shl         bx,1
    mov         ax,seg _AsmBuffer
    mov         ds,ax
    lds         si,dword ptr DGROUP:_AsmBuffer[bx]
    mov         bx,word ptr 5[si]
    mov         dx,word ptr 7[si]
    mov         ax,bx
    call        far ptr AsmGetSymbol_
    mov         bx,ax
    mov         ax,dx
    mov         word ptr -1aH[bp],bx
    mov         word ptr -18H[bp],ax
    mov         si,word ptr -1aH[bp]
    mov         bx,word ptr -18H[bp]
    xor         dx,dx
    xor         ax,ax
    cmp         bx,ax
    jne         L$241
    cmp         si,dx
    je          L$242
L$241:
    mov         word ptr -1eH[bp],0
    jmp         L$243
L$242:
    mov         cx,291H
    mov         dx,cs
    mov         ax,offset L$2
    mov         bx,ax
    mov         ax,bx
    mov         bx,cx
    jmp         far ptr InternalError_
L$243:
    mov         ax,word ptr -0cH[bp]
    inc         ax
    call        near ptr L$93
    mov         word ptr -0eH[bp],ax
L$244:
    mov         ax,word ptr -0eH[bp]
    lea         sp,-0aH[bp]
    pop         di
    pop         si
    pop         dx
    pop         cx
    pop         bx
    pop         bp
    dec         bp
    retf        
macro_TEXT		ENDS
CONST		SEGMENT	WORD PUBLIC USE16 'DATA'
CONST		ENDS
CONST2		SEGMENT	WORD PUBLIC USE16 'DATA'
CONST2		ENDS
_DATA		SEGMENT	WORD PUBLIC USE16 'DATA'
_DATA		ENDS
_BSS		SEGMENT	WORD PUBLIC USE16 'BSS'
_BSS		ENDS

$$SYMBOLS		SEGMENT	BYTE PRIVATE USE16 'DEBSYM'
    DB	6, 31H
    DD	L$11
    DB	25H, 21H, 0, 0, 0e9H, 0, 0, 0
    DB	13H, 7, 2, 0, 31H, 31H, 8, 0bH
    DB	2, 31H, 8, 0bH, 31H, 9, 0aH, 61H
    DB	73H, 6dH, 6cH, 69H, 6eH, 65H, 5fH, 69H
    DB	6eH, 73H, 65H, 72H, 74H, 0aH, 11H, 10H
    DB	0f8H, 2eH, 65H, 6eH, 74H, 72H, 79H, 8
    DB	11H, 10H, 0f4H, 2fH, 70H, 74H, 72H, 9
    DB	11H, 10H, 0ecH, 30H, 64H, 61H, 74H, 61H
    DB	9, 11H, 10H, 0e8H, 2fH, 68H, 65H, 61H
    DB	64H, 23H, 21H, 0e9H, 0, 30H, 2, 0
    DB	0, 13H, 9, 2, 0, 37H, 31H, 8
    DB	0bH, 2, 31H, 8, 0bH, 31H, 9, 0aH
    DB	72H, 65H, 70H, 6cH, 61H, 63H, 65H, 5fH
    DB	70H, 61H, 72H, 6dH, 0bH, 11H, 10H, 0d6H
    DB	38H, 62H, 75H, 66H, 66H, 65H, 72H, 6
    DB	11H, 10H, 0f0H, 36H, 70H, 0dH, 11H, 10H
    DB	0ecH, 11H, 6eH, 65H, 77H, 5fH, 6cH, 69H
    DB	6eH, 65H, 0dH, 11H, 10H, 0e8H, 11H, 6fH
    DB	6cH, 64H, 5fH, 6cH, 69H, 6eH, 65H, 0bH
    DB	11H, 10H, 0faH, 8, 62H, 65H, 66H, 6fH
    DB	72H, 65H, 0aH, 11H, 10H, 0f8H, 8, 63H
    DB	6fH, 75H, 6eH, 74H, 0cH, 11H, 10H, 6
    DB	2eH, 6cH, 73H, 74H, 72H, 75H, 63H, 74H
    DB	8, 11H, 10H, 4, 8, 6cH, 65H, 6eH
    DB	0aH, 11H, 10H, 0e0H, 11H, 73H, 74H, 61H
    DB	72H, 74H, 0aH, 11H, 10H, 0e4H, 36H, 70H
    DB	61H, 72H, 6dH, 73H, 32H, 21H, 19H, 3
    DB	33H, 2, 0, 0, 13H, 7, 2, 0
    DB	39H, 0, 2, 31H, 8, 0bH, 31H, 9
    DB	0aH, 70H, 75H, 74H, 5fH, 70H, 61H, 72H
    DB	6dH, 5fH, 70H, 6cH, 61H, 63H, 65H, 68H
    DB	6fH, 6cH, 64H, 65H, 72H, 73H, 5fH, 69H
    DB	6eH, 5fH, 6cH, 69H, 6eH, 65H, 9, 11H
    DB	10H, 0f0H, 11H, 6cH, 69H, 6eH, 65H, 8
    DB	11H, 10H, 0ecH, 11H, 74H, 6dH, 70H, 0aH
    DB	11H, 10H, 0f4H, 11H, 73H, 74H, 61H, 72H
    DB	74H, 0aH, 11H, 10H, 0faH, 8, 71H, 75H
    DB	6fH, 74H, 65H, 8, 11H, 10H, 0f8H, 8
    DB	6cH, 65H, 6eH, 0aH, 11H, 10H, 0e8H, 36H
    DB	70H, 61H, 72H, 6dH, 73H, 0fH, 11H, 10H
    DB	0e4H, 2eH, 6cH, 69H, 6eH, 65H, 73H, 74H
    DB	72H, 75H, 63H, 74H, 1bH, 21H, 4cH, 5
    DB	94H, 0, 0, 0, 13H, 7, 2, 0
    DB	3aH, 40H, 2, 31H, 8, 0bH, 31H, 9
    DB	0aH, 6cH, 69H, 6eH, 65H, 69H, 73H, 8
    DB	11H, 10H, 0f8H, 6, 6cH, 65H, 6eH, 0bH
    DB	11H, 10H, 0f4H, 11H, 73H, 75H, 62H, 73H
    DB	74H, 72H, 8, 11H, 10H, 0f0H, 11H, 73H
    DB	74H, 72H, 1aH, 21H, 0e0H, 5, 71H, 1
    DB	0, 0, 14H, 0aH, 2, 0, 3bH, 48H
    DB	0, 6dH, 61H, 63H, 72H, 6fH, 5fH, 6cH
    DB	6fH, 63H, 61H, 6cH, 6, 11H, 10H, 0f4H
    DB	6, 69H, 0cH, 11H, 11H, 0f2H, 0feH, 3cH
    DB	62H, 75H, 66H, 66H, 65H, 72H, 8, 20H
    DB	3aH, 0aH, 65H, 1, 0c5H, 1, 9, 11H
    DB	11H, 0ccH, 0feH, 11H, 70H, 74H, 72H, 1aH
    DB	21H, 51H, 7, 5eH, 4, 0, 0, 16H
    DB	0aH, 2, 0, 3dH, 48H, 1, 48H, 6dH
    DB	61H, 63H, 72H, 6fH, 5fH, 65H, 78H, 61H
    DB	6dH, 9, 11H, 10H, 0e8H, 40H, 69H, 6eH
    DB	66H, 6fH, 0bH, 11H, 10H, 0e4H, 11H, 73H
    DB	74H, 72H, 69H, 6eH, 67H, 0aH, 11H, 10H
    DB	0ecH, 11H, 74H, 6fH, 6bH, 65H, 6eH, 9
    DB	11H, 10H, 0d4H, 11H, 6eH, 61H, 6dH, 65H
    DB	0dH, 11H, 10H, 0d0H, 36H, 70H, 61H, 72H
    DB	61H, 6eH, 6fH, 64H, 65H, 0dH, 11H, 10H
    DB	0dcH, 36H, 70H, 61H, 72H, 61H, 63H, 75H
    DB	72H, 72H, 0fH, 11H, 10H, 0e0H, 2eH, 6cH
    DB	69H, 6eH, 65H, 73H, 74H, 72H, 75H, 63H
    DB	74H, 0cH, 11H, 11H, 0d0H, 0feH, 41H, 62H
    DB	75H, 66H, 66H, 65H, 72H, 9, 11H, 10H
    DB	0d8H, 80H, 0baH, 64H, 69H, 72H, 12H, 11H
    DB	10H, 0f0H, 17H, 6eH, 65H, 73H, 74H, 69H
    DB	6eH, 67H, 5fH, 64H, 65H, 70H, 74H, 68H
    DB	6, 11H, 10H, 0f2H, 6, 69H, 20H, 21H
    DB	0afH, 0bH, 0cfH, 1, 0, 0, 13H, 9
    DB	2, 0, 80H, 0bcH, 48H, 2, 31H, 8
    DB	0bH, 31H, 9, 0aH, 6dH, 79H, 5fH, 73H
    DB	70H, 72H, 69H, 6eH, 74H, 66H, 0cH, 11H
    DB	10H, 0f4H, 80H, 0bdH, 62H, 75H, 66H, 66H
    DB	65H, 72H, 0aH, 11H, 10H, 0f0H, 11H, 73H
    DB	74H, 61H, 72H, 74H, 8, 11H, 10H, 0ecH
    DB	11H, 65H, 6eH, 64H, 0bH, 11H, 10H, 0faH
    DB	8, 70H, 61H, 72H, 6dH, 6eH, 6fH, 0aH
    DB	11H, 10H, 6, 80H, 0bbH, 61H, 72H, 67H
    DB	76H, 9, 11H, 10H, 4, 6, 61H, 72H
    DB	67H, 63H, 0bH, 11H, 10H, 0e8H, 11H, 66H
    DB	6fH, 72H, 6dH, 61H, 74H, 9, 11H, 10H
    DB	0e4H, 11H, 64H, 65H, 73H, 74H, 25H, 21H
    DB	7eH, 0dH, 88H, 1, 0, 0, 13H, 7
    DB	2, 0, 80H, 0beH, 31H, 8, 0bH, 2
    DB	31H, 8, 0bH, 31H, 9, 0aH, 66H, 69H
    DB	6cH, 6cH, 5fH, 69H, 6eH, 5fH, 70H, 61H
    DB	72H, 6dH, 73H, 0dH, 11H, 11H, 0e2H, 0feH
    DB	80H, 0bfH, 62H, 75H, 66H, 66H, 65H, 72H
    DB	9, 11H, 10H, 0f6H, 36H, 70H, 61H, 72H
    DB	6dH, 0dH, 11H, 10H, 0f2H, 11H, 6eH, 65H
    DB	77H, 5fH, 6cH, 69H, 6eH, 65H, 10H, 11H
    DB	10H, 0eeH, 80H, 0bbH, 70H, 61H, 72H, 6dH
    DB	5fH, 61H, 72H, 72H, 61H, 79H, 0aH, 11H
    DB	10H, 0faH, 8, 63H, 6fH, 75H, 6eH, 74H
    DB	0dH, 11H, 10H, 0e2H, 36H, 70H, 61H, 72H
    DB	6dH, 6cH, 69H, 73H, 74H, 0aH, 11H, 10H
    DB	0eaH, 2eH, 6cH, 6eH, 6fH, 64H, 65H, 20H
    DB	21H, 6, 0fH, 7cH, 0, 0, 0, 15H
    DB	9, 2, 0, 80H, 0c0H, 0, 1, 31H
    DB	8, 0bH, 66H, 72H, 65H, 65H, 5fH, 70H
    DB	61H, 72H, 6dH, 6cH, 69H, 73H, 74H, 9
    DB	11H, 10H, 0f4H, 36H, 70H, 61H, 72H, 6dH
    DB	9, 11H, 10H, 0f0H, 36H, 68H, 65H, 61H
    DB	64H, 1cH, 22H, 82H, 0fH, 0e2H, 6, 0
    DB	0, 17H, 0bH, 2, 0, 80H, 0c1H, 48H
    DB	1, 48H, 45H, 78H, 70H, 61H, 6eH, 64H
    DB	4dH, 61H, 63H, 72H, 6fH, 0dH, 11H, 11H
    DB	0d0H, 0feH, 80H, 0c2H, 62H, 75H, 66H, 66H
    DB	65H, 72H, 0fH, 11H, 10H, 0eeH, 80H, 0c3H
    DB	6eH, 65H, 78H, 74H, 5fH, 63H, 68H, 61H
    DB	72H, 9, 11H, 10H, 0dcH, 80H, 0baH, 64H
    DB	69H, 72H, 9, 11H, 10H, 0d8H, 80H, 0c5H
    DB	73H, 79H, 6dH, 9, 11H, 10H, 0e4H, 40H
    DB	69H, 6eH, 66H, 6fH, 9, 11H, 10H, 0d0H
    DB	36H, 70H, 61H, 72H, 6dH, 0aH, 11H, 10H
    DB	0d4H, 2eH, 6cH, 6eH, 6fH, 64H, 65H, 9
    DB	11H, 10H, 0e0H, 11H, 6cH, 69H, 6eH, 65H
    DB	0aH, 11H, 10H, 0ecH, 6, 63H, 6fH, 75H
    DB	6eH, 74H, 13H, 11H, 10H, 0f0H, 6, 6dH
    DB	61H, 63H, 72H, 6fH, 5fH, 6eH, 61H, 6dH
    DB	65H, 5fH, 6cH, 6fH, 63H, 13H, 11H, 10H
    DB	0f4H, 8, 65H, 78H, 70H, 61H, 6eH, 73H
    DB	69H, 6fH, 6eH, 5fH, 66H, 6cH, 61H, 67H
    DB	0eH, 11H, 10H, 0f2H, 6, 65H, 78H, 70H
    DB	5fH, 73H, 74H, 61H, 72H, 74H, 0eH, 11H
    DB	10H, 0e8H, 6, 74H, 6fH, 6bH, 5fH, 63H
    DB	6fH, 75H, 6eH, 74H, 19H, 22H, 64H, 16H
    DB	0b5H, 1, 0, 0, 17H, 0bH, 2, 0
    DB	80H, 0c1H, 48H, 1, 48H, 4dH, 61H, 63H
    DB	72H, 6fH, 44H, 65H, 66H, 8, 11H, 10H
    DB	0eeH, 43H, 73H, 79H, 6dH, 9, 11H, 10H
    DB	0eaH, 11H, 6eH, 61H, 6dH, 65H, 0eH, 11H
    DB	10H, 0e6H, 80H, 0baH, 63H, 75H, 72H, 72H
    DB	70H, 72H, 6fH, 63H, 6, 11H, 10H, 0f4H
    DB	6, 69H

$$SYMBOLS		ENDS
$$TYPES		SEGMENT	BYTE PRIVATE USE16 'DEBTYP'
    DB	8, 11H, 73H, 74H, 72H, 75H, 63H, 74H
    DB	7, 11H, 75H, 6eH, 69H, 6fH, 6eH, 6
    DB	11H, 65H, 6eH, 75H, 6dH, 3, 10H, 0
    DB	3, 10H, 10H, 3, 10H, 1, 3, 10H
    DB	11H, 8, 12H, 0, 5, 63H, 68H, 61H
    DB	72H, 8, 12H, 0, 5, 63H, 68H, 61H
    DB	72H, 0aH, 12H, 0, 7, 73H, 69H, 7aH
    DB	65H, 5fH, 74H, 0bH, 12H, 0, 7, 77H
    DB	63H, 68H, 61H, 72H, 5fH, 74H, 0bH, 12H
    DB	0, 7, 77H, 63H, 68H, 61H, 72H, 5fH
    DB	74H, 3, 10H, 30H, 4, 71H, 0dH, 0
    DB	3, 41H, 0eH, 0cH, 12H, 0, 0fH, 6fH
    DB	6eH, 65H, 78H, 69H, 74H, 5fH, 74H, 3
    DB	41H, 8, 4, 20H, 0, 11H, 0dH, 12H
    DB	0, 12H, 5fH, 5fH, 76H, 61H, 5fH, 6cH
    DB	69H, 73H, 74H, 3, 10H, 3, 0aH, 12H
    DB	0, 14H, 66H, 70H, 6fH, 73H, 5fH, 74H
    DB	0aH, 12H, 0, 14H, 66H, 70H, 6fH, 73H
    DB	5fH, 74H, 8, 12H, 0, 7, 75H, 69H
    DB	6eH, 74H, 0aH, 12H, 0, 5, 75H, 69H
    DB	6eH, 74H, 5fH, 38H, 0bH, 12H, 0, 7
    DB	75H, 69H, 6eH, 74H, 5fH, 31H, 36H, 3
    DB	10H, 13H, 0bH, 12H, 0, 1aH, 75H, 69H
    DB	6eH, 74H, 5fH, 33H, 32H, 0eH, 12H, 0
    DB	5, 75H, 6eH, 73H, 69H, 67H, 6eH, 65H
    DB	64H, 5fH, 38H, 0fH, 12H, 0, 7, 75H
    DB	6eH, 73H, 69H, 67H, 6eH, 65H, 64H, 5fH
    DB	31H, 36H, 0fH, 12H, 0, 1aH, 75H, 6eH
    DB	73H, 69H, 67H, 6eH, 65H, 64H, 5fH, 33H
    DB	32H, 9, 12H, 0, 4, 69H, 6eH, 74H
    DB	5fH, 38H, 0aH, 12H, 0, 6, 69H, 6eH
    DB	74H, 5fH, 31H, 36H, 0aH, 12H, 0, 14H
    DB	69H, 6eH, 74H, 5fH, 33H, 32H, 0cH, 12H
    DB	0, 4, 73H, 69H, 67H, 6eH, 65H, 64H
    DB	5fH, 38H, 0dH, 12H, 0, 6, 73H, 69H
    DB	67H, 6eH, 65H, 64H, 5fH, 31H, 36H, 0dH
    DB	12H, 0, 14H, 73H, 69H, 67H, 6eH, 65H
    DB	64H, 5fH, 33H, 32H, 8, 12H, 0, 8
    DB	62H, 6fH, 6fH, 6cH, 0dH, 12H, 0, 6
    DB	70H, 74H, 72H, 64H, 69H, 66H, 66H, 5fH
    DB	74H, 0fH, 12H, 0, 19H, 6eH, 61H, 6dH
    DB	65H, 5fH, 68H, 61H, 6eH, 64H, 6cH, 65H
    DB	0aH, 12H, 0, 5, 75H, 69H, 6eH, 74H
    DB	5fH, 38H, 0eH, 12H, 0, 6, 64H, 69H
    DB	72H, 65H, 63H, 74H, 5fH, 69H, 64H, 78H
    DB	0dH, 12H, 1, 80H, 2cH, 61H, 73H, 6dH
    DB	6cH, 69H, 6eH, 65H, 73H, 3, 41H, 2aH
    DB	8, 60H, 3, 0, 9, 0, 0, 0
    DB	0dH, 61H, 8, 8, 70H, 61H, 72H, 6dH
    DB	63H, 6fH, 75H, 6eH, 74H, 8, 61H, 4
    DB	11H, 6cH, 69H, 6eH, 65H, 8, 61H, 0
    DB	2bH, 6eH, 65H, 78H, 74H, 0cH, 12H, 0
    DB	2aH, 61H, 73H, 6dH, 6cH, 69H, 6eH, 65H
    DB	73H, 3, 41H, 2dH, 3, 41H, 2eH, 3
    DB	41H, 0dH, 6, 70H, 2eH, 2, 2fH, 30H
    DB	0eH, 12H, 1, 80H, 34H, 70H, 61H, 72H
    DB	6dH, 5fH, 6cH, 69H, 73H, 74H, 3, 41H
    DB	32H, 8, 60H, 5, 0, 11H, 0, 0
    DB	0, 7, 61H, 0dH, 11H, 64H, 65H, 66H
    DB	0cH, 61H, 0cH, 8, 72H, 65H, 71H, 75H
    DB	69H, 72H, 65H, 64H, 0bH, 61H, 8, 11H
    DB	72H, 65H, 70H, 6cH, 61H, 63H, 65H, 9
    DB	61H, 4, 11H, 6cH, 61H, 62H, 65H, 6cH
    DB	8, 61H, 0, 33H, 6eH, 65H, 78H, 74H
    DB	0dH, 12H, 0, 32H, 70H, 61H, 72H, 6dH
    DB	5fH, 6cH, 69H, 73H, 74H, 3, 41H, 35H
    DB	8, 70H, 11H, 4, 36H, 11H, 8, 2eH
    DB	4, 20H, 9, 8, 6, 70H, 0dH, 2
    DB	2eH, 36H, 6, 70H, 1fH, 2, 11H, 11H
    DB	5, 70H, 6, 1, 0dH, 5, 21H, 0ffH
    DB	0, 8, 5, 70H, 6, 1, 6, 8
    DB	60H, 4, 0, 0eH, 0, 0, 0, 0eH
    DB	61H, 0cH, 7, 73H, 74H, 61H, 72H, 74H
    DB	5fH, 6cH, 69H, 6eH, 65H, 0cH, 61H, 8
    DB	11H, 66H, 69H, 6cH, 65H, 6eH, 61H, 6dH
    DB	65H, 8, 61H, 4, 2eH, 64H, 61H, 74H
    DB	61H, 0cH, 61H, 0, 36H, 70H, 61H, 72H
    DB	6dH, 6cH, 69H, 73H, 74H, 0eH, 12H, 0
    DB	3eH, 6dH, 61H, 63H, 72H, 6fH, 5fH, 69H
    DB	6eH, 66H, 6fH, 3, 41H, 3fH, 5, 21H
    DB	0ffH, 0, 8, 0cH, 12H, 1, 80H, 4cH
    DB	61H, 73H, 6dH, 5fH, 73H, 79H, 6dH, 3
    DB	41H, 42H, 5, 50H, 0fH, 0, 10H, 0dH
    DB	51H, 0eH, 53H, 59H, 4dH, 5fH, 53H, 54H
    DB	52H, 55H, 43H, 54H, 13H, 51H, 0dH, 53H
    DB	59H, 4dH, 5fH, 53H, 54H, 52H, 55H, 43H
    DB	54H, 5fH, 46H, 49H, 45H, 4cH, 44H, 12H
    DB	51H, 0cH, 53H, 59H, 4dH, 5fH, 43H, 4cH
    DB	41H, 53H, 53H, 5fH, 4cH, 4eH, 41H, 4dH
    DB	45H, 0cH, 51H, 0bH, 53H, 59H, 4dH, 5fH
    DB	4cH, 4eH, 41H, 4dH, 45H, 0aH, 51H, 0aH
    DB	53H, 59H, 4dH, 5fH, 45H, 58H, 54H, 0aH
    DB	51H, 9, 53H, 59H, 4dH, 5fH, 4cH, 49H
    DB	42H, 0cH, 51H, 8, 53H, 59H, 4dH, 5fH
    DB	43H, 4fH, 4eH, 53H, 54H, 0cH, 51H, 7
    DB	53H, 59H, 4dH, 5fH, 4dH, 41H, 43H, 52H
    DB	4fH, 0bH, 51H, 6, 53H, 59H, 4dH, 5fH
    DB	50H, 52H, 4fH, 43H, 0aH, 51H, 5, 53H
    DB	59H, 4dH, 5fH, 47H, 52H, 50H, 0aH, 51H
    DB	4, 53H, 59H, 4dH, 5fH, 53H, 45H, 47H
    DB	0cH, 51H, 3, 53H, 59H, 4dH, 5fH, 53H
    DB	54H, 41H, 43H, 4bH, 0fH, 51H, 2, 53H
    DB	59H, 4dH, 5fH, 45H, 58H, 54H, 45H, 52H
    DB	4eH, 41H, 4cH, 0fH, 51H, 1, 53H, 59H
    DB	4dH, 5fH, 49H, 4eH, 54H, 45H, 52H, 4eH
    DB	41H, 4cH, 10H, 51H, 0, 53H, 59H, 4dH
    DB	5fH, 55H, 4eH, 44H, 45H, 46H, 49H, 4eH
    DB	45H, 44H, 0dH, 12H, 3, 44H, 73H, 79H
    DB	6dH, 5fH, 73H, 74H, 61H, 74H, 65H, 0dH
    DB	12H, 1, 80H, 4aH, 61H, 73H, 6dH, 66H
    DB	69H, 78H, 75H, 70H, 3, 41H, 46H, 5
    DB	50H, 8, 0, 10H, 0cH, 51H, 7, 46H
    DB	49H, 58H, 5fH, 50H, 54H, 52H, 33H, 32H
    DB	0cH, 51H, 6, 46H, 49H, 58H, 5fH, 50H
    DB	54H, 52H, 31H, 36H, 0cH, 51H, 5, 46H
    DB	49H, 58H, 5fH, 4fH, 46H, 46H, 33H, 32H
    DB	0cH, 51H, 4, 46H, 49H, 58H, 5fH, 4fH
    DB	46H, 46H, 31H, 36H, 0fH, 51H, 3, 46H
    DB	49H, 58H, 5fH, 52H, 45H, 4cH, 4fH, 46H
    DB	46H, 33H, 32H, 0fH, 51H, 2, 46H, 49H
    DB	58H, 5fH, 52H, 45H, 4cH, 4fH, 46H, 46H
    DB	31H, 36H, 0eH, 51H, 1, 46H, 49H, 58H
    DB	5fH, 52H, 45H, 4cH, 4fH, 46H, 46H, 38H
    DB	0aH, 51H, 0, 46H, 49H, 58H, 5fH, 53H
    DB	45H, 47H, 0fH, 12H, 3, 48H, 66H, 69H
    DB	78H, 75H, 70H, 5fH, 74H, 79H, 70H, 65H
    DB	73H, 8, 60H, 8, 0, 13H, 0, 0
    DB	0, 0fH, 61H, 11H, 19H, 66H, 72H, 61H
    DB	6dH, 65H, 5fH, 64H, 61H, 74H, 75H, 6dH
    DB	9, 61H, 10H, 1fH, 66H, 72H, 61H, 6dH
    DB	65H, 0cH, 61H, 0fH, 8, 65H, 78H, 74H
    DB	65H, 72H, 6eH, 61H, 6cH, 0cH, 61H, 0eH
    DB	48H, 66H, 69H, 78H, 5fH, 74H, 79H, 70H
    DB	65H, 0bH, 61H, 0cH, 7, 66H, 69H, 78H
    DB	5fH, 6cH, 6fH, 63H, 0aH, 61H, 8, 1aH
    DB	6fH, 66H, 66H, 73H, 65H, 74H, 8, 61H
    DB	4, 11H, 6eH, 61H, 6dH, 65H, 8, 61H
    DB	0, 47H, 6eH, 65H, 78H, 74H, 3, 41H
    DB	46H, 8, 60H, 0dH, 0, 1aH, 0, 0
    DB	0, 9, 61H, 16H, 4bH, 66H, 69H, 78H
    DB	75H, 70H, 9, 61H, 15H, 44H, 73H, 74H
    DB	61H, 74H, 65H, 0cH, 61H, 13H, 6, 6dH
    DB	65H, 6dH, 5fH, 74H, 79H, 70H, 65H, 10H
    DB	61H, 12H, 18H, 74H, 6fH, 74H, 61H, 6cH
    DB	5fH, 6cH, 65H, 6eH, 67H, 74H, 68H, 0eH
    DB	61H, 11H, 18H, 74H, 6fH, 74H, 61H, 6cH
    DB	5fH, 73H, 69H, 7aH, 65H, 10H, 61H, 10H
    DB	18H, 66H, 69H, 72H, 73H, 74H, 5fH, 6cH
    DB	65H, 6eH, 67H, 74H, 68H, 0eH, 61H, 0fH
    DB	18H, 66H, 69H, 72H, 73H, 74H, 5fH, 73H
    DB	69H, 7aH, 65H, 0aH, 61H, 0eH, 18H, 70H
    DB	75H, 62H, 6cH, 69H, 63H, 0aH, 61H, 0cH
    DB	17H, 6fH, 66H, 66H, 73H, 65H, 74H, 0aH
    DB	61H, 0aH, 17H, 73H, 65H, 67H, 69H, 64H
    DB	78H, 0aH, 61H, 8, 17H, 67H, 72H, 70H
    DB	69H, 64H, 78H, 8, 61H, 4, 11H, 6eH
    DB	61H, 6dH, 65H, 8, 61H, 0, 43H, 6eH
    DB	65H, 78H, 74H, 0cH, 12H, 0, 80H, 7dH
    DB	6fH, 62H, 6aH, 5fH, 72H, 65H, 63H, 3
    DB	41H, 4dH, 3, 41H, 18H, 8, 60H, 2
    DB	0, 2, 0, 0, 0, 9, 61H, 1
    DB	18H, 63H, 6cH, 61H, 73H, 73H, 8, 61H
    DB	0, 18H, 61H, 74H, 74H, 72H, 0fH, 12H
    DB	1, 50H, 63H, 6fH, 6dH, 65H, 6eH, 74H
    DB	5fH, 69H, 6eH, 66H, 6fH, 8, 60H, 6
    DB	0, 9, 0, 0, 0, 11H, 61H, 5
    DB	21H, 74H, 61H, 72H, 67H, 65H, 74H, 5fH
    DB	6fH, 66H, 66H, 73H, 65H, 74H, 10H, 61H
    DB	3, 19H, 74H, 61H, 72H, 67H, 65H, 74H
    DB	5fH, 64H, 61H, 74H, 75H, 6dH, 0fH, 61H
    DB	1, 19H, 66H, 72H, 61H, 6dH, 65H, 5fH
    DB	64H, 61H, 74H, 75H, 6dH, 12H, 64H, 0
    DB	6, 1, 5, 69H, 73H, 5fH, 73H, 65H
    DB	63H, 6fH, 6eH, 64H, 61H, 72H, 79H, 0cH
    DB	64H, 0, 3, 3, 5, 74H, 61H, 72H
    DB	67H, 65H, 74H, 0bH, 64H, 0, 0, 3
    DB	5, 66H, 72H, 61H, 6dH, 65H, 0aH, 12H
    DB	0, 52H, 6cH, 6fH, 67H, 72H, 65H, 66H
    DB	8, 60H, 2, 0, 6, 0, 0, 0
    DB	0aH, 61H, 2, 1bH, 6fH, 66H, 66H, 73H
    DB	65H, 74H, 9, 61H, 0, 19H, 66H, 72H
    DB	61H, 6dH, 65H, 0bH, 12H, 0, 54H, 70H
    DB	68H, 79H, 73H, 72H, 65H, 66H, 8, 60H
    DB	2, 0, 9, 0, 0, 0, 8, 61H
    DB	0, 55H, 70H, 68H, 79H, 73H, 7, 61H
    DB	0, 53H, 6cH, 6fH, 67H, 0bH, 12H, 0
    DB	56H, 6cH, 6fH, 67H, 70H, 68H, 79H, 73H
    DB	8, 60H, 4, 0, 0aH, 0, 0, 0
    DB	7, 61H, 1, 57H, 72H, 65H, 66H, 10H
    DB	64H, 0, 2, 1, 5, 69H, 73H, 5fH
    DB	6cH, 6fH, 67H, 69H, 63H, 61H, 6cH, 11H
    DB	64H, 0, 1, 1, 5, 73H, 74H, 61H
    DB	72H, 74H, 5fH, 61H, 64H, 64H, 72H, 73H
    DB	11H, 64H, 0, 0, 1, 5, 6dH, 61H
    DB	69H, 6eH, 5fH, 6dH, 6fH, 64H, 75H, 6cH
    DB	65H, 0fH, 12H, 1, 58H, 6dH, 6fH, 64H
    DB	65H, 6eH, 64H, 5fH, 69H, 6eH, 66H, 6fH
    DB	8, 60H, 2, 0, 4, 0, 0, 0
    DB	0dH, 61H, 2, 19H, 6eH, 75H, 6dH, 5fH
    DB	6eH, 61H, 6dH, 65H, 73H, 0dH, 61H, 0
    DB	19H, 66H, 69H, 72H, 73H, 74H, 5fH, 69H
    DB	64H, 78H, 0fH, 12H, 1, 5aH, 6cH, 6eH
    DB	61H, 6dH, 65H, 73H, 5fH, 69H, 6eH, 66H
    DB	6fH, 8, 60H, 1, 0, 2, 0, 0
    DB	0, 7, 61H, 0, 19H, 69H, 64H, 78H
    DB	0fH, 12H, 1, 5cH, 67H, 72H, 70H, 64H
    DB	65H, 66H, 5fH, 69H, 6eH, 66H, 6fH, 8
    DB	60H, 0bH, 0, 14H, 0, 0, 0, 10H
    DB	61H, 12H, 19H, 6fH, 76H, 6cH, 5fH, 6eH
    DB	61H, 6dH, 65H, 5fH, 69H, 64H, 78H, 12H
    DB	61H, 10H, 19H, 63H, 6cH, 61H, 73H, 73H
    DB	5fH, 6eH, 61H, 6dH, 65H, 5fH, 69H, 64H
    DB	78H, 10H, 61H, 0eH, 19H, 73H, 65H, 67H
    DB	5fH, 6eH, 61H, 6dH, 65H, 5fH, 69H, 64H
    DB	78H, 0eH, 61H, 0aH, 1bH, 73H, 65H, 67H
    DB	5fH, 6cH, 65H, 6eH, 67H, 74H, 68H, 7
    DB	61H, 4, 55H, 61H, 62H, 73H, 11H, 64H
    DB	3, 2, 2, 5, 61H, 63H, 63H, 65H
    DB	73H, 73H, 5fH, 61H, 74H, 74H, 72H, 12H
    DB	64H, 3, 1, 1, 5, 61H, 63H, 63H
    DB	65H, 73H, 73H, 5fH, 76H, 61H, 6cH, 69H
    DB	64H, 0cH, 64H, 3, 0, 1, 5, 75H
    DB	73H, 65H, 5fH, 33H, 32H, 0dH, 64H, 2
    DB	4, 4, 5, 63H, 6fH, 6dH, 62H, 69H
    DB	6eH, 65H, 0bH, 64H, 2, 0, 4, 5
    DB	61H, 6cH, 69H, 67H, 6eH, 7, 61H, 0
    DB	19H, 69H, 64H, 78H, 0fH, 12H, 1, 5eH
    DB	73H, 65H, 67H, 64H, 65H, 66H, 5fH, 69H
    DB	6eH, 66H, 6fH, 8, 60H, 2, 0, 6
    DB	0, 0, 0, 0aH, 61H, 2, 1bH, 6fH
    DB	66H, 66H, 73H, 65H, 74H, 7, 61H, 0
    DB	19H, 69H, 64H, 78H, 0fH, 12H, 1, 60H
    DB	6cH, 65H, 64H, 61H, 74H, 61H, 5fH, 69H
    DB	6eH, 66H, 6fH, 8, 60H, 3, 0, 6
    DB	0, 0, 0, 9, 61H, 4, 19H, 66H
    DB	72H, 61H, 6dH, 65H, 0bH, 61H, 2, 19H
    DB	73H, 65H, 67H, 5fH, 69H, 64H, 78H, 0bH
    DB	61H, 0, 19H, 67H, 72H, 70H, 5fH, 69H
    DB	64H, 78H, 0dH, 12H, 1, 62H, 62H, 61H
    DB	73H, 65H, 5fH, 69H, 6eH, 66H, 6fH, 0aH
    DB	12H, 0, 80H, 67H, 66H, 69H, 78H, 75H
    DB	70H, 3, 41H, 64H, 8, 60H, 6, 0
    DB	12H, 0, 0, 0, 6, 61H, 9, 53H
    DB	6cH, 72H, 0eH, 61H, 5, 1bH, 6cH, 6fH
    DB	63H, 5fH, 6fH, 66H, 66H, 73H, 65H, 74H
    DB	15H, 64H, 4, 4, 1, 5, 6cH, 6fH
    DB	61H, 64H, 65H, 72H, 5fH, 72H, 65H, 73H
    DB	6fH, 6cH, 76H, 65H, 64H, 13H, 64H, 4
    DB	3, 1, 5, 73H, 65H, 6cH, 66H, 5fH
    DB	72H, 65H, 6cH, 61H, 74H, 69H, 76H, 65H
    DB	10H, 64H, 4, 0, 3, 5, 6cH, 6fH
    DB	63H, 5fH, 6dH, 65H, 74H, 68H, 6fH, 64H
    DB	8, 61H, 0, 65H, 6eH, 65H, 78H, 74H
    DB	9, 12H, 1, 66H, 66H, 69H, 78H, 75H
    DB	70H, 3, 41H, 64H, 8, 60H, 2, 0
    DB	8, 0, 0, 0, 9, 61H, 4, 68H
    DB	66H, 69H, 78H, 75H, 70H, 0cH, 61H, 0
    DB	4eH, 64H, 61H, 74H, 61H, 5fH, 72H, 65H
    DB	63H, 0eH, 12H, 1, 69H, 66H, 69H, 78H
    DB	75H, 70H, 5fH, 69H, 6eH, 66H, 6fH, 8
    DB	60H, 2, 0, 3, 0, 0, 0, 13H
    DB	61H, 1, 19H, 70H, 75H, 62H, 6cH, 69H
    DB	63H, 5fH, 6eH, 61H, 6dH, 65H, 5fH, 69H
    DB	64H, 78H, 9, 61H, 0, 18H, 66H, 6cH
    DB	61H, 67H, 73H, 8, 60H, 2, 0, 6
    DB	0, 0, 0, 0aH, 61H, 0, 6bH, 6cH
    DB	69H, 6eH, 73H, 79H, 6dH, 8, 61H, 0
    DB	63H, 62H, 61H, 73H, 65H, 8, 60H, 2
    DB	0, 6, 0, 0, 0, 0aH, 61H, 2
    DB	1bH, 6fH, 66H, 66H, 73H, 65H, 74H, 0aH
    DB	61H, 0, 19H, 6eH, 75H, 6dH, 62H, 65H
    DB	72H, 0fH, 12H, 1, 6dH, 6cH, 69H, 6eH
    DB	6eH, 75H, 6dH, 5fH, 64H, 61H, 74H, 61H
    DB	3, 41H, 6eH, 8, 60H, 3, 0, 0cH
    DB	0, 0, 0, 9, 61H, 8, 6fH, 6cH
    DB	69H, 6eH, 65H, 73H, 0dH, 61H, 6, 19H
    DB	6eH, 75H, 6dH, 5fH, 6cH, 69H, 6eH, 65H
    DB	73H, 5, 61H, 0, 6cH, 64H, 0fH, 12H
    DB	1, 70H, 6cH, 69H, 6eH, 6eH, 75H, 6dH
    DB	5fH, 69H, 6eH, 66H, 6fH, 8, 60H, 1
    DB	0, 2, 0, 0, 0, 7, 61H, 0
    DB	19H, 69H, 64H, 78H, 8, 60H, 3, 0
    DB	8, 0, 0, 0, 8, 61H, 6, 72H
    DB	74H, 79H, 70H, 65H, 0aH, 61H, 2, 1bH
    DB	6fH, 66H, 66H, 73H, 65H, 74H, 8, 61H
    DB	0, 27H, 6eH, 61H, 6dH, 65H, 0fH, 12H
    DB	1, 73H, 70H, 75H, 62H, 64H, 65H, 66H
    DB	5fH, 64H, 61H, 74H, 61H, 3, 41H, 74H
    DB	8, 60H, 5, 0, 0dH, 0, 0, 0
    DB	0fH, 64H, 0cH, 1, 1, 5, 70H, 72H
    DB	6fH, 63H, 65H, 73H, 73H, 65H, 64H, 0fH
    DB	64H, 0cH, 0, 1, 5, 66H, 72H, 65H
    DB	65H, 5fH, 70H, 75H, 62H, 73H, 8, 61H
    DB	8, 75H, 70H, 75H, 62H, 73H, 0cH, 61H
    DB	6, 19H, 6eH, 75H, 6dH, 5fH, 70H, 75H
    DB	62H, 73H, 8, 61H, 0, 63H, 62H, 61H
    DB	73H, 65H, 0fH, 12H, 1, 76H, 70H, 75H
    DB	62H, 64H, 65H, 66H, 5fH, 69H, 6eH, 66H
    DB	6fH, 8, 60H, 7, 0, 11H, 0, 0
    DB	0, 13H, 61H, 0fH, 19H, 70H, 75H, 62H
    DB	6cH, 69H, 63H, 5fH, 6eH, 61H, 6dH, 65H
    DB	5fH, 69H, 64H, 78H, 0cH, 61H, 0dH, 19H
    DB	74H, 79H, 70H, 65H, 5fH, 69H, 64H, 78H
    DB	0aH, 61H, 9, 1bH, 6fH, 66H, 66H, 73H
    DB	65H, 74H, 9, 61H, 8, 18H, 61H, 6cH
    DB	69H, 67H, 6eH, 0eH, 61H, 7, 18H, 61H
    DB	74H, 74H, 72H, 69H, 62H, 75H, 74H, 65H
    DB	73H, 9, 61H, 6, 18H, 66H, 6cH, 61H
    DB	67H, 73H, 8, 61H, 0, 63H, 62H, 61H
    DB	73H, 65H, 0fH, 12H, 1, 78H, 63H, 6fH
    DB	6dH, 64H, 61H, 74H, 5fH, 69H, 6eH, 66H
    DB	6fH, 8, 60H, 11H, 0, 14H, 0, 0
    DB	0, 0aH, 61H, 0, 79H, 63H, 6fH, 6dH
    DB	64H, 61H, 74H, 0aH, 61H, 0, 77H, 70H
    DB	75H, 62H, 64H, 65H, 66H, 0aH, 61H, 0
    DB	71H, 6cH, 69H, 6eH, 73H, 79H, 6dH, 0aH
    DB	61H, 0, 71H, 6cH, 69H, 6eH, 6eH, 75H
    DB	6dH, 9, 61H, 0, 6aH, 66H, 69H, 78H
    DB	75H, 70H, 8, 61H, 0, 63H, 62H, 61H
    DB	73H, 65H, 0aH, 61H, 0, 61H, 6cH, 69H
    DB	64H, 61H, 74H, 61H, 0aH, 61H, 0, 61H
    DB	6cH, 65H, 64H, 61H, 74H, 61H, 0aH, 61H
    DB	0, 5fH, 73H, 65H, 67H, 64H, 65H, 66H
    DB	0aH, 61H, 0, 5dH, 67H, 72H, 70H, 64H
    DB	65H, 66H, 0aH, 61H, 0, 5bH, 63H, 65H
    DB	78H, 74H, 64H, 66H, 0aH, 61H, 0, 5bH
    DB	63H, 6fH, 6dH, 64H, 65H, 66H, 0aH, 61H
    DB	0, 5bH, 65H, 78H, 74H, 64H, 65H, 66H
    DB	0bH, 61H, 0, 5bH, 6cH, 6cH, 6eH, 61H
    DB	6dH, 65H, 73H, 0aH, 61H, 0, 5bH, 6cH
    DB	6eH, 61H, 6dH, 65H, 73H, 0aH, 61H, 0
    DB	59H, 6dH, 6fH, 64H, 65H, 6eH, 64H, 0aH
    DB	61H, 0, 51H, 63H, 6fH, 6dH, 65H, 6eH
    DB	74H, 0fH, 12H, 2, 7aH, 6fH, 62H, 6aH
    DB	72H, 65H, 63H, 5fH, 69H, 6eH, 66H, 6fH
    DB	8, 60H, 9, 0, 22H, 0, 0, 0
    DB	5, 61H, 0eH, 7bH, 64H, 0fH, 64H, 0dH
    DB	2, 1, 5, 66H, 72H, 65H, 65H, 5fH
    DB	64H, 61H, 74H, 61H, 0bH, 64H, 0dH, 1
    DB	1, 5, 69H, 73H, 5fH, 33H, 32H, 0dH
    DB	64H, 0dH, 0, 1, 5, 69H, 73H, 5fH
    DB	70H, 68H, 61H, 72H, 0bH, 61H, 0cH, 18H
    DB	63H, 6fH, 6dH, 6dH, 61H, 6eH, 64H, 8
    DB	61H, 8, 4fH, 64H, 61H, 74H, 61H, 0aH
    DB	61H, 6, 19H, 63H, 75H, 72H, 6fH, 66H
    DB	66H, 0aH, 61H, 4, 19H, 6cH, 65H, 6eH
    DB	67H, 74H, 68H, 8, 61H, 0, 4eH, 6eH
    DB	65H, 78H, 74H, 0bH, 12H, 1, 7cH, 6fH
    DB	62H, 6aH, 5fH, 72H, 65H, 63H, 3, 41H
    DB	4dH, 8, 60H, 6, 0, 0bH, 0, 0
    DB	0, 0dH, 61H, 9, 29H, 6cH, 6eH, 61H
    DB	6dH, 65H, 5fH, 69H, 64H, 78H, 0cH, 64H
    DB	8, 1, 1, 4, 69H, 67H, 6eH, 6fH
    DB	72H, 65H, 0eH, 64H, 8, 0, 1, 4
    DB	72H, 65H, 61H, 64H, 6fH, 6eH, 6cH, 79H
    DB	0dH, 61H, 6, 19H, 73H, 74H, 61H, 72H
    DB	74H, 5fH, 6cH, 6fH, 63H, 7, 61H, 4
    DB	29H, 69H, 64H, 78H, 0aH, 61H, 0, 7eH
    DB	73H, 65H, 67H, 72H, 65H, 63H, 0cH, 12H
    DB	0, 7fH, 73H, 65H, 67H, 5fH, 69H, 6eH
    DB	66H, 6fH, 4, 41H, 80H, 80H, 0dH, 12H
    DB	1, 80H, 86H, 73H, 65H, 67H, 5fH, 6cH
    DB	69H, 73H, 74H, 4, 41H, 80H, 82H, 0dH
    DB	12H, 1, 80H, 0b8H, 64H, 69H, 72H, 5fH
    DB	6eH, 6fH, 64H, 65H, 4, 41H, 80H, 84H
    DB	8, 60H, 2, 0, 8, 0, 0, 0
    DB	8, 61H, 4, 80H, 85H, 73H, 65H, 67H
    DB	9, 61H, 0, 80H, 83H, 6eH, 65H, 78H
    DB	74H, 0dH, 12H, 0, 80H, 82H, 73H, 65H
    DB	67H, 5fH, 6cH, 69H, 73H, 74H, 4, 41H
    DB	80H, 87H, 8, 60H, 4, 0, 0aH, 0
    DB	0, 0, 0dH, 61H, 8, 29H, 6cH, 6eH
    DB	61H, 6dH, 65H, 5fH, 69H, 64H, 78H, 0aH
    DB	61H, 6, 17H, 6eH, 75H, 6dH, 73H, 65H
    DB	67H, 0cH, 61H, 2, 80H, 88H, 73H, 65H
    DB	67H, 6cH, 69H, 73H, 74H, 7, 61H, 0
    DB	29H, 69H, 64H, 78H, 0dH, 12H, 0, 80H
    DB	89H, 67H, 72H, 70H, 5fH, 69H, 6eH, 66H
    DB	6fH, 4, 41H, 80H, 8aH, 8, 60H, 1
    DB	0, 2, 0, 0, 0, 7, 61H, 0
    DB	17H, 69H, 64H, 78H, 0dH, 12H, 0, 80H
    DB	8cH, 65H, 78H, 74H, 5fH, 69H, 6eH, 66H
    DB	6fH, 4, 41H, 80H, 8dH, 5, 50H, 22H
    DB	0, 10H, 0cH, 51H, 25H, 54H, 5fH, 50H
    DB	45H, 52H, 43H, 45H, 4eH, 54H, 12H, 51H
    DB	3fH, 54H, 5fH, 51H, 55H, 45H, 53H, 54H
    DB	49H, 4fH, 4eH, 5fH, 4dH, 41H, 52H, 4bH
    DB	8, 51H, 2eH, 54H, 5fH, 44H, 4fH, 54H
    DB	0aH, 51H, 2dH, 54H, 5fH, 4dH, 49H, 4eH
    DB	55H, 53H, 9, 51H, 2bH, 54H, 5fH, 50H
    DB	4cH, 55H, 53H, 0aH, 51H, 2aH, 54H, 5fH
    DB	54H, 49H, 4dH, 45H, 53H, 0fH, 51H, 3bH
    DB	54H, 5fH, 53H, 45H, 4dH, 49H, 5fH, 43H
    DB	4fH, 4cH, 4fH, 4eH, 0aH, 51H, 3aH, 54H
    DB	5fH, 43H, 4fH, 4cH, 4fH, 4eH, 0aH, 51H
    DB	2cH, 54H, 5fH, 43H, 4fH, 4dH, 4dH, 41H
    DB	12H, 51H, 5dH, 54H, 5fH, 43H, 4cH, 5fH
    DB	53H, 51H, 5fH, 42H, 52H, 41H, 43H, 4bH
    DB	45H, 54H, 0fH, 51H, 29H, 54H, 5fH, 43H
    DB	4cH, 5fH, 42H, 52H, 41H, 43H, 4bH, 45H
    DB	54H, 12H, 51H, 5bH, 54H, 5fH, 4fH, 50H
    DB	5fH, 53H, 51H, 5fH, 42H, 52H, 41H, 43H
    DB	4bH, 45H, 54H, 0fH, 51H, 28H, 54H, 5fH
    DB	4fH, 50H, 5fH, 42H, 52H, 41H, 43H, 4bH
    DB	45H, 54H, 13H, 51H, 14H, 54H, 5fH, 55H
    DB	4eH, 41H, 52H, 59H, 5fH, 4fH, 50H, 45H
    DB	52H, 41H, 54H, 4fH, 52H, 9, 51H, 13H
    DB	54H, 5fH, 50H, 41H, 54H, 48H, 0cH, 51H
    DB	12H, 54H, 5fH, 42H, 49H, 4eH, 5fH, 4eH
    DB	55H, 4dH, 15H, 51H, 11H, 54H, 5fH, 49H
    DB	44H, 5fH, 49H, 4eH, 5fH, 42H, 41H, 43H
    DB	4bH, 51H, 55H, 4fH, 54H, 45H, 53H, 0dH
    DB	51H, 10H, 54H, 5fH, 4eH, 45H, 47H, 41H
    DB	54H, 49H, 56H, 45H, 0dH, 51H, 0fH, 54H
    DB	5fH, 50H, 4fH, 53H, 49H, 54H, 49H, 56H
    DB	45H, 9, 51H, 0eH, 54H, 5fH, 4eH, 4fH
    DB	4fH, 50H, 0aH, 51H, 0dH, 54H, 5fH, 46H
    DB	4cH, 4fH, 41H, 54H, 8, 51H, 0cH, 54H
    DB	5fH, 4eH, 55H, 4dH, 0cH, 51H, 0bH, 54H
    DB	5fH, 48H, 45H, 58H, 5fH, 4eH, 55H, 4dH
    DB	0eH, 51H, 0aH, 54H, 5fH, 48H, 45H, 58H
    DB	5fH, 4eH, 55H, 4dH, 5fH, 30H, 0cH, 51H
    DB	9, 54H, 5fH, 4fH, 43H, 54H, 5fH, 4eH
    DB	55H, 4dH, 0cH, 51H, 8, 54H, 5fH, 44H
    DB	45H, 43H, 5fH, 4eH, 55H, 4dH, 10H, 51H
    DB	7, 54H, 5fH, 44H, 49H, 52H, 45H, 43H
    DB	54H, 5fH, 45H, 58H, 50H, 52H, 0eH, 51H
    DB	6, 54H, 5fH, 44H, 49H, 52H, 45H, 43H
    DB	54H, 49H, 56H, 45H, 0bH, 51H, 5, 54H
    DB	5fH, 53H, 54H, 52H, 49H, 4eH, 47H, 8
    DB	51H, 4, 54H, 5fH, 52H, 45H, 47H, 7
    DB	51H, 3, 54H, 5fH, 49H, 44H, 0bH, 51H
    DB	2, 54H, 5fH, 52H, 45H, 53H, 5fH, 49H
    DB	44H, 8, 51H, 1, 54H, 5fH, 49H, 4eH
    DB	53H, 0aH, 51H, 0, 54H, 5fH, 46H, 49H
    DB	4eH, 41H, 4cH, 0aH, 12H, 3, 80H, 8fH
    DB	73H, 74H, 61H, 74H, 65H, 8, 60H, 3
    DB	0, 9, 0, 0, 0, 0eH, 61H, 5
    DB	11H, 73H, 74H, 72H, 69H, 6eH, 67H, 5fH
    DB	70H, 74H, 72H, 0aH, 61H, 4, 80H, 8fH
    DB	74H, 6fH, 6bH, 65H, 6eH, 9, 61H, 0
    DB	14H, 76H, 61H, 6cH, 75H, 65H, 0cH, 12H
    DB	1, 80H, 91H, 61H, 73H, 6dH, 5fH, 74H
    DB	6fH, 6bH, 4, 41H, 80H, 92H, 8, 60H
    DB	4, 0, 8, 0, 0, 0, 9, 61H
    DB	4, 80H, 93H, 64H, 61H, 74H, 61H, 9
    DB	61H, 2, 6, 63H, 6fH, 75H, 6eH, 74H
    DB	12H, 64H, 0, 1, 1, 6, 65H, 78H
    DB	70H, 61H, 6eH, 64H, 5fH, 65H, 61H, 72H
    DB	6cH, 79H, 0eH, 64H, 0, 0, 1, 6
    DB	72H, 65H, 64H, 65H, 66H, 69H, 6eH, 65H
    DB	0fH, 12H, 0, 80H, 94H, 63H, 6fH, 6eH
    DB	73H, 74H, 5fH, 69H, 6eH, 66H, 6fH, 4
    DB	41H, 80H, 95H, 0eH, 12H, 1, 80H, 99H
    DB	72H, 65H, 67H, 73H, 5fH, 6cH, 69H, 73H
    DB	74H, 4, 41H, 80H, 97H, 8, 60H, 2
    DB	0, 8, 0, 0, 0, 7, 61H, 4
    DB	11H, 72H, 65H, 67H, 9, 61H, 0, 80H
    DB	98H, 6eH, 65H, 78H, 74H, 0eH, 12H, 0
    DB	80H, 97H, 72H, 65H, 67H, 73H, 5fH, 6cH
    DB	69H, 73H, 74H, 4, 41H, 80H, 9aH, 5
    DB	50H, 3, 0, 10H, 0dH, 51H, 2, 56H
    DB	49H, 53H, 5fH, 45H, 58H, 50H, 4fH, 52H
    DB	54H, 0dH, 51H, 1, 56H, 49H, 53H, 5fH
    DB	50H, 55H, 42H, 4cH, 49H, 43H, 0eH, 51H
    DB	0, 56H, 49H, 53H, 5fH, 50H, 52H, 49H
    DB	56H, 41H, 54H, 45H, 0dH, 12H, 0, 80H
    DB	9cH, 76H, 69H, 73H, 5fH, 74H, 79H, 70H
    DB	65H, 5, 50H, 8, 0, 10H, 0fH, 51H
    DB	7, 4cH, 41H, 4eH, 47H, 5fH, 53H, 59H
    DB	53H, 43H, 41H, 4cH, 4cH, 0fH, 51H, 6
    DB	4cH, 41H, 4eH, 47H, 5fH, 53H, 54H, 44H
    DB	43H, 41H, 4cH, 4cH, 10H, 51H, 5, 4cH
    DB	41H, 4eH, 47H, 5fH, 57H, 41H, 54H, 43H
    DB	4fH, 4dH, 5fH, 43H, 9, 51H, 4, 4cH
    DB	41H, 4eH, 47H, 5fH, 43H, 0eH, 51H, 3
    DB	4cH, 41H, 4eH, 47H, 5fH, 50H, 41H, 53H
    DB	43H, 41H, 4cH, 0fH, 51H, 2, 4cH, 41H
    DB	4eH, 47H, 5fH, 46H, 4fH, 52H, 54H, 52H
    DB	41H, 4eH, 0dH, 51H, 1, 4cH, 41H, 4eH
    DB	47H, 5fH, 42H, 41H, 53H, 49H, 43H, 0cH
    DB	51H, 0, 4cH, 41H, 4eH, 47H, 5fH, 4eH
    DB	4fH, 4eH, 45H, 0eH, 12H, 0, 80H, 9eH
    DB	6cH, 61H, 6eH, 67H, 5fH, 74H, 79H, 70H
    DB	65H, 0fH, 12H, 1, 80H, 0a2H, 6cH, 61H
    DB	62H, 65H, 6cH, 5fH, 6cH, 69H, 73H, 74H
    DB	4, 41H, 80H, 0a0H, 8, 60H, 7, 0
    DB	14H, 0, 0, 0, 9, 61H, 12H, 6
    DB	63H, 6fH, 75H, 6eH, 74H, 0fH, 64H, 10H
    DB	0, 1, 6, 69H, 73H, 5fH, 76H, 61H
    DB	72H, 61H, 72H, 67H, 0aH, 61H, 0eH, 6
    DB	66H, 61H, 63H, 74H, 6fH, 72H, 8, 61H
    DB	0cH, 6, 73H, 69H, 7aH, 65H, 0bH, 61H
    DB	8, 11H, 72H, 65H, 70H, 6cH, 61H, 63H
    DB	65H, 9, 61H, 4, 11H, 6cH, 61H, 62H
    DB	65H, 6cH, 9, 61H, 0, 80H, 0a1H, 6eH
    DB	65H, 78H, 74H, 0fH, 12H, 0, 80H, 0a0H
    DB	6cH, 61H, 62H, 65H, 6cH, 5fH, 6cH, 69H
    DB	73H, 74H, 4, 41H, 80H, 0a3H, 8, 60H
    DB	9, 0, 16H, 0, 0, 0, 0fH, 64H
    DB	14H, 0, 1, 6, 69H, 73H, 5fH, 76H
    DB	61H, 72H, 61H, 72H, 67H, 0cH, 61H, 12H
    DB	6, 6dH, 65H, 6dH, 5fH, 74H, 79H, 70H
    DB	65H, 0dH, 61H, 10H, 6, 6cH, 6fH, 63H
    DB	61H, 6cH, 73H, 69H, 7aH, 65H, 0cH, 61H
    DB	0eH, 6, 70H, 61H, 72H, 61H, 73H, 69H
    DB	7aH, 65H, 0eH, 61H, 0aH, 80H, 0a4H, 6cH
    DB	6fH, 63H, 61H, 6cH, 6cH, 69H, 73H, 74H
    DB	0dH, 61H, 6, 80H, 0a4H, 70H, 61H, 72H
    DB	61H, 6cH, 69H, 73H, 74H, 0dH, 61H, 5
    DB	80H, 9fH, 6cH, 61H, 6eH, 67H, 74H, 79H
    DB	70H, 65H, 0fH, 61H, 4, 80H, 9dH, 76H
    DB	69H, 73H, 69H, 62H, 69H, 6cH, 69H, 74H
    DB	79H, 0dH, 61H, 0, 80H, 9bH, 72H, 65H
    DB	67H, 73H, 6cH, 69H, 73H, 74H, 0eH, 12H
    DB	0, 80H, 0a5H, 70H, 72H, 6fH, 63H, 5fH
    DB	69H, 6eH, 66H, 6fH, 4, 41H, 80H, 0a6H
    DB	8, 60H, 1, 0, 2, 0, 0, 0
    DB	7, 61H, 0, 29H, 69H, 64H, 78H, 0fH
    DB	12H, 0, 80H, 0a8H, 6cH, 6eH, 61H, 6dH
    DB	65H, 5fH, 69H, 6eH, 66H, 6fH, 4, 41H
    DB	80H, 0a9H, 0fH, 12H, 1, 80H, 0adH, 66H
    DB	69H, 65H, 6cH, 64H, 5fH, 6cH, 69H, 73H
    DB	74H, 4, 41H, 80H, 0abH, 8, 60H, 3
    DB	0, 0cH, 0, 0, 0, 9, 61H, 8
    DB	11H, 76H, 61H, 6cH, 75H, 65H, 0fH, 61H
    DB	4, 11H, 69H, 6eH, 69H, 74H, 69H, 61H
    DB	6cH, 69H, 7aH, 65H, 72H, 9, 61H, 0
    DB	80H, 0acH, 6eH, 65H, 78H, 74H, 0fH, 12H
    DB	0, 80H, 0abH, 66H, 69H, 65H, 6cH, 64H
    DB	5fH, 6cH, 69H, 73H, 74H, 4, 41H, 80H
    DB	0aeH, 8, 60H, 4, 0, 0cH, 0, 0
    DB	0, 9, 61H, 8, 80H, 0afH, 74H, 61H
    DB	69H, 6cH, 9, 61H, 4, 80H, 0afH, 68H
    DB	65H, 61H, 64H, 0dH, 61H, 2, 7, 61H
    DB	6cH, 69H, 67H, 6eH, 6dH, 65H, 6eH, 74H
    DB	8, 61H, 0, 7, 73H, 69H, 7aH, 65H
    DB	10H, 12H, 0, 80H, 0b0H, 73H, 74H, 72H
    DB	75H, 63H, 74H, 5fH, 69H, 6eH, 66H, 6fH
    DB	4, 41H, 80H, 0b1H, 8, 60H, 3, 0
    DB	8, 0, 0, 0, 0cH, 61H, 6, 17H
    DB	64H, 69H, 73H, 74H, 61H, 6eH, 63H, 65H
    DB	8, 61H, 2, 1aH, 73H, 69H, 7aH, 65H
    DB	7, 61H, 0, 17H, 69H, 64H, 78H, 0eH
    DB	12H, 0, 80H, 0b3H, 63H, 6fH, 6dH, 6dH
    DB	5fH, 69H, 6eH, 66H, 6fH, 4, 41H, 80H
    DB	0b4H, 8, 60H, 9, 0, 4, 0, 0
    DB	0, 0dH, 61H, 0, 80H, 0b5H, 63H, 6fH
    DB	6dH, 6dH, 69H, 6eH, 66H, 6fH, 0fH, 61H
    DB	0, 80H, 0b2H, 73H, 74H, 72H, 75H, 63H
    DB	74H, 69H, 6eH, 66H, 6fH, 0eH, 61H, 0
    DB	80H, 0aaH, 6cH, 6eH, 61H, 6dH, 65H, 69H
    DB	6eH, 66H, 6fH, 0dH, 61H, 0, 40H, 6dH
    DB	61H, 63H, 72H, 6fH, 69H, 6eH, 66H, 6fH
    DB	0dH, 61H, 0, 80H, 0a7H, 70H, 72H, 6fH
    DB	63H, 69H, 6eH, 66H, 6fH, 0eH, 61H, 0
    DB	80H, 96H, 63H, 6fH, 6eH, 73H, 74H, 69H
    DB	6eH, 66H, 6fH, 0cH, 61H, 0, 80H, 8eH
    DB	65H, 78H, 74H, 69H, 6eH, 66H, 6fH, 0cH
    DB	61H, 0, 80H, 8bH, 67H, 72H, 70H, 69H
    DB	6eH, 66H, 6fH, 0cH, 61H, 0, 80H, 81H
    DB	73H, 65H, 67H, 69H, 6eH, 66H, 6fH, 0aH
    DB	12H, 2, 80H, 0b6H, 65H, 6eH, 74H, 72H
    DB	79H, 8, 60H, 5, 0, 28H, 0, 0
    DB	0, 9, 61H, 24H, 80H, 85H, 70H, 72H
    DB	65H, 76H, 9, 61H, 20H, 80H, 85H, 6eH
    DB	65H, 78H, 74H, 8, 61H, 1eH, 19H, 6cH
    DB	69H, 6eH, 65H, 6, 61H, 1aH, 80H, 0b7H
    DB	65H, 7, 61H, 0, 42H, 73H, 79H, 6dH
    DB	0dH, 12H, 0, 80H, 84H, 64H, 69H, 72H
    DB	5fH, 6eH, 6fH, 64H, 65H, 4, 41H, 80H
    DB	0b9H, 3, 41H, 11H, 9, 70H, 6, 4
    DB	11H, 11H, 6, 80H, 0bbH, 4, 20H, 2
    DB	8, 6, 70H, 11H, 2, 2eH, 36H, 5
    DB	21H, 0ffH, 0, 8, 5, 70H, 0dH, 1
    DB	36H, 5, 71H, 6, 1, 6, 5, 21H
    DB	0ffH, 0, 8, 4, 20H, 1, 8, 0bH
    DB	12H, 0, 42H, 61H, 73H, 6dH, 5fH, 73H
    DB	79H, 6dH, 4, 41H, 80H, 0c4H

$$TYPES		ENDS
		END
