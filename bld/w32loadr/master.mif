proj_name = w32loadr

w32loadr_autodepends = .autodepend

additional_cleanup = mkdginfo.bat

!include cproj.mif
!include defrule.mif
!include deftarg.mif

.asm: ..
.c: ..
.h: ..

dpmildr_objs = loader16.obj dpmi_ldr.obj int21win.obj
dpmi_objs    = loader16.obj dpmi.obj int21win.obj
os2stub_objs = loader16.obj dpmildr.obj int21win.obj
d4grun_objs  = d4grun.obj cmain32.obj int21dos.obj
cwsrun_objs  = cwsrun.obj cmain32.obj int21dos.obj
tntrun_objs  = tntrun.obj cmain32.obj int21pl.obj
x32run_objs  = x32run.obj cmain32.obj x32start.obj
        
os2ldr_objs  = cstrtos2.obj loader.obj int21.obj int21os2.obj tnk.obj
ntldr_objs   = cstrtwnt.obj loader.obj int21.obj int21nt.obj

!ifeq bootstrap 1

all : w32bind.exe

w32bind.exe : w32bind.c
  $(bld_cl) $[@ $(bld_clflags) $(bld_ldflags)

!else ifeq host_os dos

extra_c_flags_tntrun = -D__DOS -D__CALL21__ -D__TNT -fo=$@
extra_c_flags_x32run = -D__DOS -D__CALL21__ -D__X32 -fo=$@
extra_c_flags_d4grun = -D__DOS -D__CALL21__ -D__DOS4G -fo=$@
extra_c_flags_cwsrun = -D__DOS -D__CALL21__ -D__CAUSEWAY -fo=$@

all: .SYMBOLIC cwsrun.exe #d4grun.exe x32run.exe tntrun.exe

dpmi_ldr.exe : $(dpmildr_objs)
  $(linker) name $^@ system dos option map file {$(dpmildr_objs)}

# we don't need to link w386run with wstub.exe
# this will make it about 14k smaller
d4grun.exe : $(d4grun_objs)
# NB: DOS4GOPTIONS export is disabled due to incompatibility with DOS/4G 2.x
#  $(linker) name w386run.exe system dos4g option stack=32k,map export DOS4GOPTIONS=_DOS4GOPTIONS file d4grun.obj,cmain32.obj,int21dos.obj
  $(linker) name w386run.exe system dos4g option stack=32k,map file {$(d4grun_objs)}
  $(rsi_root)\bin\4gbind $(rsi_root)\bin\dos4g.exe w386run.exe $^@ -V

dbgrun.exe : $(d4grun_objs)
  $(linker) name $^@ debug all system dos4g option stack=32k,map file {$(d4grun_objs)}

cwsrun.exe : $(cwsrun_objs)
  $(linker) name $^@ system causeway option stack=32k,map,stub=$(causeway_dir)/cw32/dosi86/cwstub.exe file {$(cwsrun_objs)}

tntrun.exe : $(tntrun_objs)
  $(linker) name $^&.exp system pharlap ext option stack=32k,map file {$(tntrun_objs)}
  $(%tntdir)\bin\rebind $(%tntdir)\bin\rtk\tntb.exe $^&.exp -exe $^@

x32run.exe : $(x32run_objs)
  $(linker) name $^@ format os2 lx option map,dosseg,internalrelocs,stack=4k libpath $(lang_root)/lib386/dos;$(lang_root)/lib386 file {$(x32run_objs)} lib {x32b.lib}
  x32fix $^@
   
# Probably should use default build rules?
tntrun.obj : loader.c #../loader.h
  $(cc) $(cflags) $(extra_c_flags_$^&) $(inc_path) $[@
x32run.obj : loader.c #../loader.h
  $(cc) $(cflags) $(extra_c_flags_$^&) $(inc_path) $[@
d4grun.obj : loader.c #../loader.h dginfo.gh
  $(cc) $(cflags) $(extra_c_flags_$^&) $(inc_path) $[@
cwsrun.obj : loader.c #../loader.h
  $(cc) $(cflags) $(extra_c_flags_$^&) $(inc_path) $[@
        
dginfo.gh : $(rsi_root)/bin/dos4g.exe
  @%write mkdginfo.bat $(rsi_root)\bin\dos4g $(rsi_root)\bin\dginfo >dginfo.gh
  -mkdginfo

dpmi.exe : $(dpmi_objs)
  $(linker) name $^@ system dos option map,stack=8k file {$(dpmi_objs)}

!else ifeq host_os nt

extra_c_flags_loader  = -D__NT -D__CALL21__ -DW32RUN -s
extra_c_flags_int21nt = -s

all : w32run.exe

w32run.exe : $(ntldr_objs) ntstub.exe
  %create $^&.lnk
  @%append $^&.lnk $(lflags)
  @%append $^&.lnk file {$(ntldr_objs)}
  @%append $^&.lnk opt map,stack=64k,stub=ntstub.exe
  $(linker) name $^@ @$^&.lnk
  
ntstub.exe : ntstub.obj
  $(linker) name $^@ system dos option map file {ntstub.obj}

!else ifeq host_os os2

all: .symbolic

extra_c_flags_loader = -D__OS2 -D__CALL21__
        
os2ldr.exe : $(os2ldr_objs) os2stub.exe
  $(linker) name $^@ system os2v2 pmc opt map,stack=32k,stub=os2stub.exe file {$(os2ldr_objs)} lib {os2386.lib}

os2stub.exe : $(os2stub_objs)
  $(linker) name $^@ system dos option map file {$(os2stub_objs)}

!endif
