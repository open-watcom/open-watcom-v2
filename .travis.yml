language: c

compiler: gcc

sudo: required

dist: trusty

env:
  global:
    - OWROOT=$TRAVIS_BUILD_DIR
    - OWOBJDIR=binbuild
    - OWDOCBUILD=0
    - OWDOCQUIET=1
#    - OWUSE_FILENAME_VERSION=1
    - OWBRANCH=master
    - OWBRANCH_COVERITY=coverity_scan
    - OWTRAVIS_REPO_SLUG=open-watcom/travis-ci-ow-builds
    - OWTRAVIS_BUILD_DIR=${HOME}/build/$OWTRAVIS_REPO_SLUG

cache:
  directories:
    - build/$OWOBJDIR
    - bld/watcom/$OWOBJDIR
#    - bld
    - test
    - build1

before_script:
   # initialize OW build environment variables
 - . ./cmnvars.sh
   # get clone of GitHub repository to return Travis CI OW build/log files
 - travis/envinfo.sh
 - travis/cacheinf.sh

after_failure:
   # after failure transfer log files back to GitHub repository
 - travis/cacheinf.sh
 - travis/gitupdf.sh

after_success:
   # after success transfer OW build to GitHub repository
 - travis/cacheinf.sh
 - travis/gitupds.sh

jobs:
  allow_failures:
    - os: osx

  include:
    #################################
    - stage: Initialize
      name: "Initialize stages shared environment"
      os: linux
      before_script:
        - travis/envinfo.sh
        - travis/cacheinf.sh
      script: travis/tinit.sh
    #################################
    - stage: Bootstrap
      name: "Build minimal set of build tools"
      os: linux
      install:
        - export OWTOOLS=GCC
        - export OWTRAVISJOB=BOOTSTRAP
        - export OWDOCBUILD=0
        - export OWVERBOSE=1
      script: travis/build.sh
    - # ...
      name: "Build minimal set of build tools"
      if: env(OWOSXBUILD) = 1
      os: osx
      install:
        - export OWTOOLS=CLANG
        - export OWTRAVISJOB=BOOTSTRAP
        - export OWDOCBUILD=0
        - export OWVERBOSE=1
      script: travis/build.sh
    #################################
    - stage: Build1
      name: "OW tools build"
      os: linux
      install:
        - export OWTOOLS=GCC
        - export OWTRAVISJOB=BUILD
        - export OWDOCBUILD=0
        - export OWVERBOSE=0
          # install DOS Emulator
        - sudo apt-get install -y dosemu
      script: travis/build.sh
    - # ...
      name: "OW Documentation build"
      os: linux
      install:
        - export OWTOOLS=GCC
        - export OWTRAVISJOB=DOCPDF
        - export OWDOCBUILD=1
        - export OWVERBOSE=0
        - export OWGHOSTSCRIPTPATH=$PATH
          # install DOS Emulator + Ghostscript
        - sudo apt-get install -y dosemu ghostscript
      script: travis/build.sh
    - # ...
      name: "OW tools OSX build 1"
      if: env(OWOSXBUILD) = 1
      os: osx
      install:
        - export OWTOOLS=CLANG
        - export OWTRAVISJOB=BUILD1
        - export OWDOCBUILD=0
        - export OWVERBOSE=0
          # install DOS Emulator
        - brew install dosbox
        - export OWDOSBOX=dosbox
      script: travis/build.sh
    #################################
    - stage: Build2
      name: "OW tools OSX build 2"
      if: env(OWOSXBUILD) = 1
      os: osx
      install:
        - export OWTOOLS=CLANG
        - export OWTRAVISJOB=BUILD2
        - export OWDOCBUILD=0
        - export OWVERBOSE=0
          # install DOS Emulator
        - brew install dosbox
        - export OWDOSBOX=dosbox
      script: travis/build.sh
    #################################
    - stage: Tests
      name: "Test wasm assembler"
      os: linux
      install:
        - export OWTOOLS=WATCOM
        - export WATCOM=$OWROOT/test
        - export PATH=$WATCOM/binl:$PATH
        - export INCLUDE=$WATCOM/lh
        - unset LIB
        - export OWTRAVISJOB=TEST
        - export OWDOCBUILD=0
        - export OWVERBOSE=0
      script: travis/test.sh wasm
    - # ...
      name: "Test C compiler"
      os: linux
      install:
        - export OWTOOLS=WATCOM
        - export WATCOM=$OWROOT/test
        - export PATH=$WATCOM/binl:$PATH
        - export INCLUDE=$WATCOM/lh
        - unset LIB
        - export OWTRAVISJOB=TEST
        - export OWDOCBUILD=0
        - export OWVERBOSE=0
      script: travis/test.sh c
    - # ...
      name: "Test FORTRAN 77 compiler"
      os: linux
      install:
        - export OWTOOLS=WATCOM
        - export WATCOM=$OWROOT/test
        - export PATH=$WATCOM/binl:$PATH
        - export INCLUDE=$WATCOM/lh
        - unset LIB
        - export OWTRAVISJOB=TEST
        - export OWDOCBUILD=0
        - export OWVERBOSE=0
      script: travis/test.sh f77
    - # ...
      name: "Test C++ compiler"
      os: linux
      install:
        - export OWTOOLS=WATCOM
        - export WATCOM=$OWROOT/test
        - export PATH=$WATCOM/binl:$PATH
        - export INCLUDE=$WATCOM/lh
        - unset LIB
        - export OWTRAVISJOB=TEST
        - export OWDOCBUILD=0
        - export OWVERBOSE=0
      script: travis/test.sh cpp
    - # ...
      name: "Test C run-time library"
      os: linux
      install:
        - export OWTOOLS=WATCOM
        - export WATCOM=$OWROOT/test
        - export PATH=$WATCOM/binl:$PATH
        - export INCLUDE=$WATCOM/lh
        - unset LIB
        - export OWTRAVISJOB=TEST
        - export OWDOCBUILD=0
        - export OWVERBOSE=0
      script: travis/test.sh crtl
    #################################
    - stage: Finalize
      name: "Clean stages shared environment"
      os: linux
      before_script:
        - travis/envinfo.sh
        - travis/cacheinf.sh
      script: travis/tfini.sh

#  coverity_scan:
#    project:
#      name: "$TRAVIS_REPO_SLUG"
#      description: "Build submitted via Travis CI"
#    notification_email:    "malak.jiri@gmail.com"
#    build_command_prepend:
#    build_command:         "travis/build.sh scan"
#    branch_pattern:        coverity_scan
