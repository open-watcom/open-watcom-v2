name: coverity
description: ''
inputs:
  arch:
    required: false
    default: ''
    type: string
  cscript:
    required: false
    default: ''
    type: string
  pscript:
    required: false
    default: ''
    type: string
  tools:
    required: false
    default: ''
    type: string
  tool_src:
    required: false
    default: ''
    type: string
  tool_base:
    required: false
    default: ''
    type: string
  tool_archive:
    required: false
    default: ''
    type: string
  result_archive:
    required: false
    default: ''
    type: string
  coverity_token:
    required: false
    default: ''
    type: string
  owdebug:
    description: ''
    required: false
    default: ''
    type: string
runs:
  using: composite
  steps:
  - uses: "./.github/actions/dosboxin"
    with:
      arch: ${{ inputs.arch }}
  - name: Get tar file name
    id: cov_archive
    run: |
      Join-Path ${{ runner.temp }} ${{ inputs.tool_archive }} `
      | Join-String -OutputPrefix "path=" `
      | Out-File -FilePath $env:GITHUB_OUTPUT -Encoding utf8 -Append
    shell: pwsh
  - name: Get tar file name
    id: cov_path
    run: |
      Join-Path ${{ runner.temp }} ${{ inputs.tool_base }} `
      | Join-String -OutputPrefix "path=" `
      | Out-File -FilePath $env:GITHUB_OUTPUT -Encoding utf8 -Append
    shell: pwsh
  - name: "Download Coverity Tools"
    run: |
      response=$(curl -s -o ${{ steps.cov_archive.outputs.path }} "https://scan.coverity.com/download/cxx/${{ inputs.tool_src }}" -d "project=${OWCOVERITY_PROJECT}&token=${{ inputs.coverity_token }}")
      mkdir -p ${{ steps.cov_path.outputs.path }}
    shell: bash
  - if: inputs.owdebug == 1
    run: echo "$response"
    shell: bash
  - if: inputs.arch == 'lnx'
    name: "Restore Coverity Tools"
    run: |
      tar xvzf ${{ steps.cov_archive.outputs.path }} -C ${{ steps.cov_path.outputs.path }}
      echo "OWCOVERITY_TOOL_CMD=$(find ${{ steps.cov_path.outputs.path }} -type f -name 'cov-build' -exec realpath {} \;)" >> $GITHUB_ENV
    shell: bash
  - if: inputs.arch == 'nt'
    name: "Restore Coverity Tools"
    run: |
      7z x -aoa -o${{ steps.cov_path.outputs.path }} ${{ steps.cov_archive.outputs.path }}
      pushd ${{ steps.cov_path.outputs.path }}
      for /f %%a in ('dir /b /s cov-build.exe') do echo "OWCOVERITY_TOOL_CMD=%%a" >> %GITHUB_ENV%
      popd
    shell: cmd
  - if: inputs.arch == 'lnx'
    name: "Build Coverity data"
    run: ${{ inputs.pscript }} ${{ inputs.cscript }}
    env:
      OWROOT:        ${{ github.workspace }}
      OWDEBUG:       ${{ inputs.owdebug }}
      OWVERBOSE:     1
    shell: bash
  - if: inputs.arch == 'nt'
    name: "Build Coverity data"
    run: ${{ inputs.pscript }} ${{ inputs.cscript }}
    env:
      OWROOT:        ${{ github.workspace }}
      OWDEBUG:       ${{ inputs.owdebug }}
      OWVERBOSE:     1
    shell: cmd
  - if: inputs.arch == 'lnx'
    name: "Archive Coverity data"
    run: tar czf ${{ inputs.result_archive }} cov-int
    shell: bash
  - if: inputs.arch == 'nt'
    name: "Archive Coverity data"
    run: |
      7z a ${{ inputs.result_archive }} cov-int
      ci\slash.cmd ${{ inputs.result_archive }} > lst.txt
      7z rn ${{ inputs.result_archive }} @lst.txt
      del lst.txt
    shell: cmd
  - name: "Upload Coverity data"
    run: |
      response=$(curl -s --write-out "\n%{http_code}\n" --form project=$OWCOVERITY_PROJECT --form token=${{ inputs.coverity_token }} --form email=malak.jiri@gmail.com --form file=@${{ inputs.result_archive }} --form version=${{ github.sha }} --form description="Open Watcom V2 GitHub Actions CI build" "https://scan.coverity.com/builds")
    shell: bash
  - if: inputs.owdebug == 1
    run: echo "$response"
    shell: bash
  - run: |
      New-Item -Path "${{ github.workspace }}" -Name "xxxxx" -ItemType "directory"
      Copy-Item ${{ inputs.result_archive }} -Destination ${{ github.workspace }}/xxxxx
    shell: pwsh
  - uses: "./.github/actions/artfsave"
    name: "Save Coverity data"
    with:
      arch: ${{ inputs.arch }}
      gitpath: xxxxx
      artifname: ${{ inputs.tool_src }}
