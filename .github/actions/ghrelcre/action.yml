name: github-release-create
description: ''
inputs:
  fullset:
    description: '1 - include installers files, otherwise snapshot only'
    required: false
    default: ''
    type: string
  title:
    description: 'release text'
    required: false
    default: ''
    type: string
  note:
    description: 'release description'
    required: false
    default: ''
    type: string
  tag:
    description: 'tag used for release'
    required: false
    default: ''
    type: string
  tagmsg:
    description: 'tag message'
    required: false
    default: ''
    type: string
  owdebug:
    description: ''
    required: false
    default: ''
    type: string
runs:
  using: composite
  steps:
  - id: ghtag
    name: Create new Release tag
    run: |
      $response = curl -s -L -X POST -H "Accept: application/vnd.github+json" -H "Authorization: Bearer ${{ env.GITHUB_TOKEN }}" -H "X-GitHub-Api-Version: 2022-11-28" `
      "https://api.github.com/repos/${{ github.repository }}/git/tags" `
      -d '{\"tag\":\"${{ inputs.tag }}\",\"message\":\"${{ inputs.tagmsg }}\",\"object\":\"${{ github.sha }}\",\"type\":\"commit\",\"tagger\":{\"name\":\"Open Watcom GitHub\",\"email\":\"openwatcomgithub@gmail.com\"}}'
      if( ${{ inputs.owdebug }} -eq 1 ) { $response }
      $sha = $response | jq -r .sha
      if( $sha -eq 'null' ) { $sha = "" }
      $sha | Join-String -OutputPrefix "sha=" | Out-File -FilePath $env:GITHUB_OUTPUT -Encoding utf8 -Append
    shell: pwsh
  - if: steps.ghtag.outputs.sha != ''
    name: Create new Release tag reference
    run: |
      echo "${{ steps.ghtag.outputs.sha }}"
      $response = curl -s -L -X POST -H "Accept: application/vnd.github+json" -H "Authorization: Bearer ${{ env.GITHUB_TOKEN }}" -H "X-GitHub-Api-Version: 2022-11-28" `
      "https://api.github.com/repos/${{ github.repository }}/git/refs" `
      -d '{\"ref\":\"refs/tags/${{ inputs.tag }}\",\"sha\":\"${{ steps.ghtag.outputs.sha }}\"}'
      if( ${{ inputs.owdebug }} -eq 1 ) { $response }
    shell: pwsh
  - if: steps.ghtag.outputs.sha != ''
    name: Create new Release
    id: ghrelease
    run: |
      $response = curl -s -L -X POST -H "Accept: application/vnd.github+json" -H "Authorization: Bearer ${{ env.GITHUB_TOKEN }}" -H "X-GitHub-Api-Version: 2022-11-28" `
      "https://api.github.com/repos/${{ github.repository }}/releases" `
      -d '{\"tag_name\":\"${{ inputs.tag }}\",\"target_commitish\":\"master\",\"name\":\"${{ inputs.title }}\",\"body\":\"${{ inputs.note }}\",\"draft\":false,\"prerelease\":true,\"generate_release_notes\":false}'
      if( ${{ inputs.owdebug }} -eq 1 ) { $response }
      $id = $response | jq -r .id
      if( $id -eq 'null' ) { $id = "" }
      $id | Join-String -OutputPrefix "id=" | Out-File -FilePath $env:GITHUB_OUTPUT -Encoding utf8 -Append
    shell: pwsh
  - if: inputs.fullset == 1 && steps.ghtag.outputs.sha != '' && steps.ghrelease.outputs.id != ''
    run: |
      echo "${{ steps.ghrelease.outputs.id }}"
      Join-Path ${{ github.workspace }} distrib ow bin `
      | Get-ChildItem -File -Filter open-watcom-* `
      | Foreach-Object {
        $response = curl -s -L -X POST "https://uploads.github.com/repos/${{ github.repository }}/releases/${{ steps.ghrelease.outputs.id }}/assets?name=$_.Name" `
        -H "Accept: application/vnd.github+json" -H "Authorization: Bearer ${{ env.GITHUB_TOKEN }}" -H "X-GitHub-Api-Version: 2022-11-28" `
        -H "Content-Type: application/octet-stream" `
        --data-binary "@$_.FullName"
        if( ${{ inputs.owdebug }} -eq 1 ) { $response }
      }      
    shell: pwsh
  - if: inputs.fullset == 1 && steps.ghtag.outputs.sha != '' && steps.ghrelease.outputs.id != ''
    run: |
      echo "${{ steps.ghrelease.outputs.id }}"
      Join-Path ${{ github.workspace }} distrib ow bin `
      | Get-ChildItem -File -Filter ow-snapshot.tar.xz `
      | Foreach-Object {
        $response = curl -s -L -X POST "https://uploads.github.com/repos/${{ github.repository }}/releases/${{ steps.ghrelease.outputs.id }}/assets?name=$_.Name" `
        -H "Accept: application/vnd.github+json" -H "Authorization: Bearer ${{ env.GITHUB_TOKEN }}" -H "X-GitHub-Api-Version: 2022-11-28" `
        -H "Content-Type: application/octet-stream" `
        --data-binary "@$_.FullName"
        if( ${{ inputs.owdebug }} -eq 1 ) { $response }
      }      
    shell: pwsh
  - if: inputs.fullset != 1 && steps.ghtag.outputs.sha != '' && steps.ghrelease.outputs.id != ''
    run: |
      echo "${{ steps.ghrelease.outputs.id }}"
      Get-ChildItem ${{ github.workspace }} -File -Filter ow-snapshot.tar.xz `
      | Foreach-Object {
        $name = $_.Name
        $fname = $_.FullName
        $response = curl -s -L -X POST "https://uploads.github.com/repos/${{ github.repository }}/releases/${{ steps.ghrelease.outputs.id }}/assets?name=$name" `
        -H "Accept: application/vnd.github+json" -H "Authorization: Bearer ${{ env.GITHUB_TOKEN }}" -H "X-GitHub-Api-Version: 2022-11-28" `
        -H "Content-Type: application/octet-stream" `
        --data-binary "@$fname"
        if( ${{ inputs.owdebug }} -eq 1 ) { $response }
      }      
    shell: pwsh
