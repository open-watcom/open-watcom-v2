name: github-release-create
description: 'Create new OW release on GitHub'
inputs:
  title:
    description: 'release text'
    required: false
    default: ''
    type: string
  note:
    description: 'release description'
    required: false
    default: ''
    type: string
  tag:
    description: 'tag used for release'
    required: false
    default: ''
    type: string
  tagmsg:
    description: 'tag message'
    required: false
    default: ''
    type: string
  owdebug:
    description: 'verbosed/debug output for GH Actions scripts development'
    required: false
    default: ''
    type: string
outputs:
  id:
    description: 'new release ID'
    value: ${{ steps.newrel.outputs.id }}
runs:
  using: composite
  steps:
  - id: curlcmd
    run: >
      if( "${{ inputs.owdebug }}" -eq '1' ) {
        'opts=-sv' | Out-File -FilePath ${{ github.output }} -Encoding utf8 -Append
      } else {
        'opts=-s' | Out-File -FilePath ${{ github.output }} -Encoding utf8 -Append
      }
    shell: pwsh      
  - id: last_commit
    run: git rev-parse HEAD | Join-String -OutputPrefix 'sha=' | Out-File -FilePath ${{ github.output }} -Encoding utf8 -Append
    shell: pwsh
  - id: ghtag
    name: Create new Release tag
    run: |
      $response = curl ${{ steps.curlcmd.outputs.opts }} -L -X POST `
      -H "Accept: application/vnd.github+json" `
      -H "Authorization: Bearer ${{ github.token }}" `
      -H "X-GitHub-Api-Version: 2022-11-28" `
      "https://api.github.com/repos/${{ github.repository }}/git/tags" `
      -d '{\"tag\":\"${{ inputs.tag }}\",\"message\":\"${{ inputs.tagmsg }}\",\"object\":\"${{ steps.last_commit.outputs.sha }}\",\"type\":\"commit\",\"tagger\":{\"name\":\"Open Watcom GitHub\",\"email\":\"openwatcom.github@gmail.com\"}}'
      if( "${{ inputs.owdebug }}" -eq '1' ) { $response }
      $sha = $response | jq -r .sha
      if( "$sha" -eq 'null' ) { $sha = '' }
      $sha | Join-String -OutputPrefix 'sha=' | Out-File -FilePath ${{ github.output }} -Encoding utf8 -Append
    shell: pwsh
  - if: steps.ghtag.outputs.sha != ''
    name: Create new Release tag reference
    run: |
      echo "${{ steps.ghtag.outputs.sha }}"
      $response = curl ${{ steps.curlcmd.outputs.opts }} -L -X POST `
      -H "Accept: application/vnd.github+json" `
      -H "Authorization: Bearer ${{ github.token }}" `
      -H "X-GitHub-Api-Version: 2022-11-28" `
      "https://api.github.com/repos/${{ github.repository }}/git/refs" `
      -d '{\"ref\":\"refs/tags/${{ inputs.tag }}\",\"sha\":\"${{ steps.ghtag.outputs.sha }}\"}'
      if( "${{ inputs.owdebug }}" -eq '1' ) { $response }
    shell: pwsh
  - if: steps.ghtag.outputs.sha != ''
    name: Create new Release
    id: newrel
    run: |
      $response = curl ${{ steps.curlcmd.outputs.opts }} -L -X POST `
      -H "Accept: application/vnd.github+json" `
      -H "Authorization: Bearer ${{ github.token }}" `
      -H "X-GitHub-Api-Version: 2022-11-28" `
      "https://api.github.com/repos/${{ github.repository }}/releases" `
      -d '{\"tag_name\":\"${{ inputs.tag }}\",\"target_commitish\":\"master\",\"name\":\"${{ inputs.title }}\",\"body\":\"${{ inputs.note }}\",\"draft\":false,\"prerelease\":true,\"generate_release_notes\":false}'
      if( "${{ inputs.owdebug }}" -eq '1' ) { $response }
      $id = $response | jq -r .id
      if( "$id" -eq 'null' ) { $id = '' }
      $id | Join-String -OutputPrefix 'id=' | Out-File -FilePath ${{ github.output }} -Encoding utf8 -Append
    shell: pwsh
