name: install
description: 'Build OW install component'
inputs:
  target:
    description: 'install component to process'
    required: false
    default: ''
    type: string
  suffix_nt:
    description: 'artifact name suffix (for Windows)'
    required: false
    default: ''
    type: string
  suffix_lnx:
    description: 'artifact name suffix (for Linux)'
    required: false
    default: ''
    type: string
  suffix_osx:
    description: 'artifact name suffix (for OSX)'
    required: false
    default: ''
    type: string
  owdebug:
    description: 'verbosed/debug output for GH Actions scripts development'
    required: false
    default: ''
    type: string
  testmode:
    description: 'testing mode (no build)'
    required: false
    default: ''
    type: string
runs:
  using: composite
  steps:
  - uses: "./.github/actions/artfload"
    with:
      hostos:       'lnx'
      gitpath:      'build binbuild'
      artifact:     'build lnx x64 ${{inputs.suffix_lnx}}'
      owdebug:      ${{inputs.owdebug}}
  - uses: "./.github/actions/artfload"
    with:
      hostos:       'lnx'
      gitpath:      'bld setupgui'
      artifact:     'bld setupgui nt x64 ${{inputs.suffix_nt}}'
      owdebug:      ${{inputs.owdebug}}
      testmode:     ${{inputs.testmode}}
  - uses: "./.github/actions/artfload"
    with:
      hostos:       'lnx'
      gitpath:      'bld setupgui'
      artifact:     'bld setupgui lnx x64 ${{inputs.suffix_lnx}}'
      owdebug:      ${{inputs.owdebug}}
      testmode:     ${{inputs.testmode}}
  # load all release binaries
  - uses: "./.github/actions/relload"
    with:
      suffix_nt:    ${{inputs.suffix_nt}}
      suffix_lnx:   ${{inputs.suffix_lnx}}
      suffix_osx:   ${{inputs.suffix_osx}}
      owdebug:      ${{inputs.owdebug}}
      testmode:     ${{inputs.testmode}}
  - if: inputs.target == 'snapshot'
    name: Create OW snapshot
    id: owsnapshot
    uses: "./.github/actions/snapshot"
    with:
      hostos:       'lnx'
      gitpath:      'rel'
      owdebug:      ${{inputs.owdebug}}
      testmode:     ${{inputs.testmode}}
  # run build script
  - if: inputs.target != 'snapshot'
    name: Build Installers
    run: |
      if [ "${{ inputs.testmode }}" = "" ]; then
        ci/buildx.sh gcc
      fi
    env:
      OWBUILD_STAGE: 'inst'
      OWTOOLS:       'GCC'
      OWROOT:        ${{github.workspace}}
      OWDEBUG:       ${{inputs.owdebug}}
      OWINSTTARGET:  ${{inputs.target}}
      OWVERBOSE:     1
    shell: bash
  # save all artifacts for distribution
  # full content of directory, cannot specify files
  - uses: "./.github/actions/artfsave"
    with:
      hostos:       'lnx'
      gitpath:      'distrib ow bin'
      artifact:     "install ${{inputs.target}}"
      owdebug:      ${{inputs.owdebug}}
      testmode:     ${{inputs.testmode}}
