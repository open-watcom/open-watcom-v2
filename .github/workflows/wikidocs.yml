# Build Wiki Documentation
#
# set secret OWGHTOKEN - https 'user name:password'

name: WikiDocs

on:
  push:
    branches:
      - master
    paths:
      - '.github/workflows/wikidocs.yml'
      - '.github/actions/artfdelc/action.yml'
      - '.github/actions/artfload/action.yml'
      - '.github/actions/artfsave/action.yml'
      - '.github/actions/boot/action.yml'
      - '.github/actions/dosboxin/action.yml'
      - '.github/actions/docbuild/action.yml'
      - '.github/actions/curlcmd/action.yml'
      - '.github/actions/tarload/action.yml'
      - '.github/actions/tarsave/action.yml'
      - 'docs/**'
      - 'bld/cc/gml/**'
      - 'bld/cg/doc/**'
      - 'bld/dwarf/dw/doc/**'
      - 'bld/f77/wfc/gml/**'
      - 'bld/plusplus/gml/**'
      - 'bld/wpi/doc/**'
      - 'bld/wv/doc/**'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  start-start:
    if: github.repository == 'open-watcom/open-watcom-v2' || github.repository == vars.OWREPO
    name: Check if to run
    runs-on: ubuntu-latest
    steps:
    - run: echo ""
      shell: bash
  wiki-boot:
    needs: start-start
    name: Bootstrap
    runs-on: windows-2022
    steps:
    - name: Set git EOL to LF
      run: |
        git config --global core.eol lf
        git config --global core.autocrlf input
    - name: checkout
      uses: actions/checkout@v4
    - name: Bootstrap
      uses: "./.github/actions/boot"
      with:
        hostos:         'nt'
        args:           'vs2022'
        suffix:         'nt x64 vs2022'
        owtools:        'VISUALC'
        noarchive:      '1'
        owdebug:        ${{ vars.OWDEBUG }}
      env:
        OWDOCTARGET:    'bootdocs'
    # run: git config --local --list
  wiki-build:
    needs: wiki-boot
    name: Build
    runs-on: windows-2022
    strategy:
      matrix:
        include:
        - title:  'HTML'
          doctype:  'wikihtml'
          owtarget: '.and wikihtml .or -- -- docset=wikihtml -i'
        - title:  'PDF'
          doctype:  'wikipdf'
          owtarget: '.and wikipdf .or -- -- docset=wikipdf -i'
    steps:
    - name: Set git EOL to LF
      run: |
        git config --global core.eol lf
        git config --global core.autocrlf input
    - name: checkout
      uses: actions/checkout@v4
    - name: Build ${{ matrix.title }}
      uses: "./.github/actions/docbuild"
      with:
        hostos:     'nt'
        args:       'vs2022'
        target:     ${{ matrix.doctype }}
        gitpath:    'docs wiki'
        suffix:     'nt x64 vs2022'
        doc_suffix: "${{ matrix.doctype }} vs2022"
        owtools:    'VISUALC'
        owtarget:   ${{ matrix.owtarget }}
        owdebug:    ${{ vars.OWDEBUG }}
        noarchive:  '1'
        testmode:   ${{ vars.TESTMODE }}
    # run: git config --local --list
  wiki-update:
    name: Update Wiki
    needs: wiki-build
    runs-on: windows-2022
    steps:
    - name: Set git EOL to LF
      run: |
        git config --global core.eol lf
        git config --global core.autocrlf input
    - name: Setup Git User
      run: |
        git config --global user.email "openwatcom.github@gmail.com"
        git config --global user.name "Open Watcom GitHub"
      shell: cmd
    - name: Wiki Repo clone
      run: |
        git clone -v --depth=1 --branch=master https://%OWGHTOKEN%@github.com/%OWWIKIPROJ%.git .
      env:
        OWGHTOKEN: ${{ secrets.OWGHTOKEN }}
        OWWIKIPROJ: open-watcom/open-watcom-v2-wikidocs
      shell: cmd
    - if: vars.TESTMODE == ''
      name: Download Artifact html
      uses: actions/download-artifact@v4
      with:
        name: 'rel-wikihtml-vs2022'
        path: docs
    - if: vars.TESTMODE == ''
      name: Download Artifact pdf
      uses: actions/download-artifact@v4
      with:
        name: 'rel-wikipdf-vs2022'
        path: docs
    - name: Wiki Repo Update
      run: |
        if "${{ vars.TESTMODE }}" == "" (
          git add -v -f .
          git commit -v -m "GitHub Workflow build"
          git push -v
        )
      shell: cmd
    # run: git config --list
  cleanup:
    needs: wiki-update
    name: Call to delete Artifacts
    runs-on: ubuntu-latest
    steps:
    - name: checkout
      uses: actions/checkout@v4
    - if: vars.OWDELETEARTIFACTS == 1
      name: Call to delete Artifacts
      uses: "./.github/actions/artfdelc"
      with:
        owdebug:    ${{ vars.OWDEBUG }}
        owcurlopts: ${{ vars.OWCURLOPTS }}
