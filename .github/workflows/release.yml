name: Release-Build
run-name: Release build (daily and monthly)

on:
  schedule:
    - cron:  '30 0 * * *'
  workflow_dispatch:

jobs:
  check_run:
    if: github.repository == vars.OWREPO
    name: Check if to run
    runs-on: ubuntu-latest
    outputs:
      runit: ${{ steps.check_tag.outputs.old }}
    steps:
    - name: checkout
      uses: actions/checkout@v4
    - name: Check tag reference
      id: check_tag
      uses: "./.github/actions/ghtagchk"
      with:
        tag:     'Current-build'
        owdebug: ${{ vars.OWDEBUG }}
        owcurlopts: ${{ vars.OWCURLOPTS }}
  Linux:
    needs: check_run
    if: needs.check_run.outputs.runit
    strategy:
      matrix:
        include:
        - owtools: 'GCC'
          arch:    'x64'
          image:   'ubuntu-22.04'
          tools:   'gcc'
        - owtools: 'GCC'
          arch:    'a64'
          image:   'ubuntu-24.04-arm'
          tools:   'gcc'
    name: Linux ${{ matrix.arch }} ${{ matrix.tools }}
    uses: "./.github/workflows/rel-lnx.yml"
    with:
      arch:         ${{ matrix.arch }}
      tools:        ${{ matrix.tools }}
      owtools:      ${{ matrix.owtools }}
      image:        ${{ matrix.image }}
      owdebug:      ${{ vars.OWDEBUG }}
  Windows:
    needs: check_run
    if: needs.check_run.outputs.runit
    strategy:
      matrix:
        include:
        - owtools: 'VISUALC'
          arch:    'x64'
          image:   'windows-2019'
          tools:   'vs2019'
    name: Windows ${{ matrix.arch }} ${{ matrix.tools }}
    uses: "./.github/workflows/rel-nt.yml"
    with:
      arch:         ${{ matrix.arch }}
      tools:        ${{ matrix.tools }}
      owtools:      ${{ matrix.owtools }}
      image:        ${{ matrix.image }}
      owdebug:      ${{ vars.OWDEBUG }}
  OSX:
    needs: check_run
    if: needs.check_run.outputs.runit
    strategy:
      matrix:
        include:
        - owtools: 'CLANG'
          arch:    'x64'
          image:   'macos-13'
          tools:   'clang'
          relpath: 'rel bino64'
        - owtools: 'CLANG'
          arch:    'a64'
          image:   'macos-14'
          tools:   'clang'
          relpath: 'rel armo64'
    name: OSX ${{ matrix.arch }} ${{ matrix.tools }}
    uses: "./.github/workflows/rel-osx.yml"
    with:
      arch:         ${{ matrix.arch }}
      tools:        ${{ matrix.tools }}
      relpath:      ${{ matrix.relpath }}
      owtools:      ${{ matrix.owtools }}
      image:        ${{ matrix.image }}
      owdebug:      ${{ vars.OWDEBUG }}
  Installers:
    needs:
    - Linux
    - Windows
    - OSX
    strategy:
      matrix:
        include:
        - asset: instdos
          title:   'Build DOS Installer'
        - asset: instos2
          title:   'Build OS/2 Installer'
        - asset: instlnx32
          title:   'Build Linux(32-bit) Installer'
        - asset: instlnx64
          title:   'Build Linux(64-bit) Installer'
        - asset: instwin16
          title:   'Build Windows(16-bit) Installer'
        - asset: instwin32
          title:   'Build Windows(32-bit) Installer'
        - asset: instwin64
          title:   'Build Windows(64-bit) Installer'
        - asset: snapshot
          title:   'Create OW full snapshot'
    name: ${{ matrix.title }}
    runs-on: ubuntu-latest
    steps:
    - name: checkout
      uses: actions/checkout@v4
    - name: ${{ matrix.title }}
      uses: "./.github/actions/install"
      with:
        target:     ${{ matrix.asset }}
        owdebug:    ${{ vars.OWDEBUG }}
  release:
    needs: Installers
    name: "Create GitHub Release"
    runs-on: ubuntu-latest
    outputs:
      drelid: ${{ steps.rel_rel.outputs.drelid }}
      mrelid: ${{ steps.rel_rel.outputs.mrelid }}
    steps:
    - name: checkout
      uses: actions/checkout@v4
    - name: GitHub Release
      id: rel_rel
      uses: "./.github/actions/release"
      with:
        owdebug: ${{ vars.OWDEBUG }}
        owcurlopts: ${{ vars.OWCURLOPTS }}
    - run: echo "drelid=${{ steps.rel_rel.outputs.drelid }};mrelid=${{ steps.rel_rel.outputs.mrelid }}"
      shell: bash
  Uploads:
    needs: release
    strategy:
      matrix:
        include:
        - asset: instdos
          title:   'DOS Installer'
        - asset: instos2
          title:   'OS/2 Installer'
        - asset: instlnx32
          title:   'Linux(32-bit) Installer'
        - asset: instlnx64
          title:   'Linux(64-bit) Installer'
        - asset: instwin16
          title:   'Windows(16-bit) Installer'
        - asset: instwin32
          title:   'Windows(32-bit) Installer'
        - asset: instwin64
          title:   'Windows(64-bit) Installer'
        - asset: snapshot
          title:   'OW full snapshot'
    name: Upload ${{ matrix.title }}
    runs-on: ubuntu-latest
    steps:
    - name: checkout
      uses: actions/checkout@v4
    - run: echo "drelid=${{ needs.release.outputs.drelid }};mrelid=${{ needs.release.outputs.mrelid }}"
      shell: bash
    - name: ${{ matrix.title }} Asset
      uses: "./.github/actions/ghassets"
      with:
        hostos:     'lnx'
        target:     ${{ matrix.asset }}
        drelid:     ${{ needs.release.outputs.drelid }}
        mrelid:     ${{ needs.release.outputs.mrelid }}
        owdebug:    ${{ vars.OWDEBUG }}
        owcurlopts: ${{ vars.OWCURLOPTS }}
  end-end:
    needs: Uploads
    name: Call to delete Artifacts
    runs-on: ubuntu-latest
    steps:
    - name: checkout
      uses: actions/checkout@v4
    - if: vars.OWDELETEARTIFACTS == 1
      name: Call to delete Artifacs
      uses: "./.github/actions/artfdelc"
      with:
        owdebug:    ${{ vars.OWDEBUG }}
        owcurlopts: ${{ vars.OWCURLOPTS }}
