name: Coverity-Scan
run-name: Coverity Scan tools download, build and send data to analysis
on:
  schedule:
    - cron:  '0 1 * * *'
env:
  OWCOVERITY_PROJECT: open-watcom/open-watcom-v2
  OWCOVERITY_TOOL_BASE: coverity-scan-analysis
jobs:
  start-start:
    name: Start
    runs-on: ubuntu-latest
    steps:
    - name: checkout
      uses: actions/checkout@v3.5.0
  scan-lnx:
    name: "Coverity Scan Linux"
    needs: start-start
    runs-on: ubuntu-latest
    #timeoutInMinutes: 90
    steps:
    - name: checkout
      uses: actions/checkout@v3.5.0
    - uses: "./.github/actions/coverity"
      with:
        arch:    'lnx'
        #title:   'Coverity Scan Linux'
        cscript: 'ci/covbuild.sh'
        pscript: 'ci/coverity.sh'
        tool_src: linux64
        tool_base: coverity-scan-analysis
        tool_archive: cov-analysis-linux.tgz
        result_archive: open-watcom-v2.tgz
        coverity_token: ${{ secrets.OWCOVERITY_TOKEN }}
        owdebug: ${{ vars.OWDEBUG }}
      env:
        OWTOOLS: GCC
        OWDOSBOX: dosbox
      
#  scan-nt:
#    name: "Coverity Scan Windows"
#    needs: start-start
#    runs-on: windows-2022
#    timeoutInMinutes: 90
#    - name: checkout
#      uses: actions/checkout@v3.5.0
#    - uses: "./.github/actions/coverity"
#      with:
#        arch:    'nt'
#        #title:   'Coverity Scan Windows'
#        cscript: 'ci\covbuild.cmd'
#        pscript: 'ci\coverity.cmd'
#        tool_src: win64
#        tool_base: coverity-scan-analysis
#        tool_archive: cov-analysis-linux.zip
#        result_archive: open-watcom-v2.zip
#        coverity_token: ${{ secrets.OWCOVERITY_TOKEN }}
#        owdebug: ${{ vars.OWDEBUG }}
#      env:
#        OWTOOLS: VISUALC
#        OWIMAGE: windows-2022
#        OWDOSBOX: dosbox.exe
#        OWDOSBOXPATH: ci\nt386
