#
# Pipeline for Coverity Scan build and upload
#
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

variables: 
  owroot:           $(Build.SourcesDirectory)
  owobjdir:         binbuild
  owcoverity.project: open-watcom/open-watcom-v2
#
# this uses maximal supported VM image version
#
  owimage_lnx:      'ubuntu-22.04'
  owimage_nt:       'windows-2022'
  owimage_osx:      'macOS-12'
  owscript_lnx:     ci/buildx.sh
  owscript_nt:      ci\buildx.cmd
  owscript_osx:     ci/buildx.sh

stages:
  - stage: start
    displayName: "Start"
    jobs:
      - job: start
        pool:
          vmImage: $(owimage_lnx)
        steps:
        - checkout: none
  - stage: scanlnx
    displayName: "Coverity Scan Linux"
    dependsOn:
      - start
    variables:
      owtools:      GCC
      owimage:      $(owimage_lnx)
      owcoverity.tool.src: linux64
      owcoverity.tool.archive: /tmp/cov-analysis-linux.tgz
      owcoverity.tool.base: /tmp/coverity-scan-analysis
      owcoverity.results.archive: open-watcom-v2.tgz
      owdosbox:     dosbox
    jobs:
      - template: ci/coverity.yml
        parameters:
          arch:     lnx
          title:    Coverity Scan Linux
          image:    $(owimage_lnx)
          cscript:  $(owroot)/ci/covbuild.sh
          pscript:  $(owroot)/ci/coverity.sh
#  - stage: scannt
#    displayName: "Coverity Scan Windows"
#    dependsOn:
#      - start
#    variables:
#      owtools:      VISUALC
#      owimage:      $(owimage_nt)
#      owcoverity.tool.src: win64
#      owcoverity.tool.archive: $(TEMP)\cov-analysis-windows.zip
#      owcoverity.tool.base: $(TEMP)\coverity-scan-analysis
#      owcoverity.results.archive: open-watcom-v2.zip
#      owdosbox:     dosbox.exe
#      owdosboxpath: $(owroot)\ci\nt386
#    jobs:
#      - template: ci/coverity.yml
#        parameters:
#          arch:     nt
#          title:    Coverity Scan Windows
#          image:    $(owimage_nt)
#          cscript:  $(owroot)\ci\covbuild.cmd
#          pscript:  $(owroot)\ci\coverity.cmd
