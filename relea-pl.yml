#
# Pipeline for Release build and upload
#
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

variables:
  owroot:           $(Build.SourcesDirectory)
  owobjdir:         binbuild
  owgitverbose:     -v
  owartifactfile:   owartifact.tar.xz
  owsnapshotfile:   ow-snapshot.tar.xz
#
# this uses minimal supported VM image version
#
  owimage_lnx:      'ubuntu-20.04'
  owimage_nt:       'windows-2019'
  owimage_osx:      'macOS-11'
  owscript_lnx:     ci/buildx.sh
  owscript_nt:      ci\buildx.cmd
  owscript_osx:     ci/buildx.sh

stages:
  - stage: start
    displayName: "Start"
    jobs:
      - job: start
        pool:
          vmImage: $(owimage_lnx)
        steps:
        - checkout: none
#  - stage: bootosx
#    displayName: "Bootstrap OSX"
#    dependsOn:
#      - start
#    variables:
#      owbuild.stage: boot
#      owimage:      $(owimage_osx)
#      owtools:      CLANG
#    jobs:
#      - template: ci/boot.yml
#        parameters:
#          arch:     osx
#          title:    Bootstrap OSX
#          image:    $(owimage_osx)
#          pscript:  $(owscript_osx)
  - stage: bootlnx
    displayName: "Bootstrap Linux"
    dependsOn:
      - start
    variables:
      owbuild.stage: boot
      owimage:      $(owimage_lnx)
      owtools:      GCC
    jobs:
      - template: ci/boot.yml
        parameters:
          arch:     lnx
          title:    Bootstrap Linux
          image:    $(owimage_lnx)
          pscript:  $(owscript_lnx)
  - stage: bootnt
    displayName: "Bootstrap Windows"
    dependsOn:
      - start
    variables:
      owbuild.stage: boot
      owimage:      $(owimage_nt)
      owtools:      VISUALC
    jobs:
      - template: ci/boot.yml
        parameters:
          arch:     nt
          title:    Bootstrap Windows
          image:    $(owimage_nt)
          pscript:  $(owscript_nt)
#  - stage: buildosx
#    displayName: "Build OSX"
#    dependsOn:
#      - bootosx
#    variables:
#      owbuild.stage: build
#      owimage:      $(owimage_osx)
#      owtools:      CLANG
#      owdosbox:     dosbox
#    jobs:
#      - template: ci/build.yml
#        parameters:
#          arch:     osx
#          title:    Build OSX
#          image:    $(owimage_osx)
#          pscript:  $(owscript_osx)
  - stage: buildlnx
    displayName: "Build Linux"
    dependsOn:
      - bootlnx
    variables:
      owbuild.stage: build
      owimage:      $(owimage_lnx)
      owtools:      GCC
      owdosbox:     dosbox
    jobs:
      - template: ci/build.yml
        parameters:
          arch:     lnx
          title:    Build Linux
          image:    $(owimage_lnx)
          pscript:  $(owscript_lnx)
  - stage: buildnt
    displayName: "Build Windows"
    dependsOn:
      - bootnt
    variables:
      owbuild.stage: build
      owimage:      $(owimage_nt)
      owtools:      VISUALC
      owdosbox:     dosbox.exe
      owdosboxpath: $(owroot)\ci\nt386
    jobs:
      - template: ci/build.yml
        parameters:
          arch:     nt
          title:    Build Windows
          image:    $(owimage_nt)
          pscript:  $(owscript_nt)
  - stage: docsnt
    displayName: "Docs Build Windows"
    dependsOn:
      - bootnt
    variables:
      owbuild.stage: docs
      owtools:      VISUALC
      owimage:      $(owimage_nt)
      owdosbox:     dosbox.exe
      owdosboxpath: $(owroot)\ci\nt386
    jobs:
      - template: ci/docbuild.yml
        parameters:
          arch:     nt
          image:    $(owimage_nt)
          pscript:  $(owscript_nt)
  - stage: testslnx
    displayName: "Tests Linux"
    dependsOn:
      - buildlnx
    variables:
      owbuild.stage: tests
      owtools:      GCC
    jobs:
      - template: ci/tests.yml
        parameters:
          arch:     lnx
          title:    Tests Linux
          image:    $(owimage_lnx)
          pscript:  $(owscript_lnx)
  - stage: testsnt
    displayName: "Tests Windows"
    dependsOn:
      - buildnt
    variables:
      owbuild.stage: tests
      owtools:      VISUALC
    jobs:
      - template: ci/tests.yml
        parameters:
          arch:     nt
          title:    Tests Windows
          image:    $(owimage_nt)
          pscript:  $(owscript_nt)
  - stage: installnx
    displayName: "Installers Build Linux"
    dependsOn:
      - testslnx
      - testsnt
      - docsnt
    variables:
      owbuild.stage: inst
      owimage:      $(owimage_lnx)
      owtools:      GCC
    jobs:
      - template: ci/install.yml
        parameters:
          arch:     lnx
          title:    Installers Build Linux
          image:    $(owimage_lnx)
          pscript:  $(owscript_lnx)
  - stage: release
    displayName: "GitHub Release"
    dependsOn:
      - installnx
    variables:
      owtools:      GCC
    jobs:
      - template: ci/release.yml
        parameters:
          arch:     lnx
          title:    GitHub Release
          image:    $(owimage_lnx)
          pscript:  $(owscript_lnx)
