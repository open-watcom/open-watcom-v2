# build host specific macros
bcc_386         = *wcc386
bcc_axp         = *wccaxp
bcc_ppc         = *wccppc
bcc_mps         = *wccmps

bcl_386         = *wcl386
bcl_axp         = *wclaxp
bcl_ppc         = *wclppc
bcl_mps         = *wclmps

blibrarian_386  = *wlib
blibrarian_axp  = *wlib
blibrarian_ppc  = *wlib
blibrarian_mps  = *wlib

bas_386         = *wasm
bas_axp         = *wasaxp
bas_ppc         = *wasppc
bas_mps         = *wasmps

blib            = $(noecho)$(blibrarian_$(bld_cpu)) -q
bcc             = $(bcc_$(bld_cpu)) -zq $(bldver_cppflags)
bcl             = $(noecho)$(bcl_$(bld_cpu)) -zq $(bldver_cppflags)
bas             = $(bas_$(bld_cpu)) -q $(bldver_cppflags)
blink           = *wlink op q

bld_cc_sys      = $(cflags_$(bld_os))
bld_cl_sys      = $(clflags_$(bld_os)_$(bld_cpu))
bld_incs        = $(bld_extra_incs) -I"$(watcom_dir)/h"

!if $(bld_watcom_ver) >= 1300
bld_new_cflags  = -xx-zam
!endif

!ifeq release 0
bld_gen_cflags  = $(watcom_common_cflags)-w8-j-d2$(bld_new_cflags)-fo=.obj
!else
bld_gen_cflags  = $(watcom_common_cflags)-w8-j-s$(bld_dft_oflags)$(bld_new_cflags)-fo=.obj
!endif

# options for source compilations
bld_cflags      = $(bld_gen_cflags)

# options for single source utility compilations
bld_clflags     = $(bld_gen_cflags) -fe=$@

# options for linking
bld_ldflags     =

bld_libflags    = -b-n-pa $@

bld_cc          = $(bcc) $(bld_cc_sys) $(bld_incs)
bld_cl          = $(bcl) $(bld_cc_sys) $(bld_cl_sys) $(bld_incs)
bld_lib         = $(blib) $(bld_libflags)

awk             = $(noecho)*awk
cpp             = $(noecho)*wcpp $(bldver_cppflags)
cwc             = bcwc
edbind          = $(noecho)bedbind
ide2make        = bide2mak
re2c            = $(noecho)re2c
sed             = $(noecho)sed
wbind           = $(noecho)bwbind
wsplice         = $(noecho)*wsplice
wstrip          = $(noecho)bwstrip
yacc            = $(noecho)yacc
tr              = $(noecho)tr

echo_as : .PROCEDURE .EXPLICIT
!ifeq verbose 0
    @echo as $@
!endif

echo_cc : .PROCEDURE .EXPLICIT
!ifeq verbose 0
    @echo cc $@
!endif

echo_cxx : .PROCEDURE .EXPLICIT
!ifeq verbose 0
    @echo c++ $@
!endif

echo_xcxx : .PROCEDURE .EXPLICIT
!ifeq verbose 0
    @echo xc++ $@
!endif

echo_cl : .PROCEDURE .EXPLICIT
!ifeq verbose 0
    @echo cl $@
!endif

echo_bldcl : .PROCEDURE .EXPLICIT
!ifeq verbose 0
    @echo bld_cl $@
!endif

echo_link : .PROCEDURE .EXPLICIT
!ifeq verbose 0
    @echo link $@
!endif

echo_lib : .PROCEDURE .EXPLICIT
!ifeq verbose 0
    @echo lib $@
!endif

echo_cpp : .PROCEDURE .EXPLICIT
!ifeq verbose 0
    @echo cpp $@
!endif

echo_awk : .PROCEDURE .EXPLICIT
!ifeq verbose 0
    @echo awk $@
!endif

echo_rc : .PROCEDURE .EXPLICIT
!ifeq verbose 0
    @echo rc $@
!endif

echo_sed : .PROCEDURE .EXPLICIT
!ifeq verbose 0
    @echo sed $@
!endif

echo_wsplice : .PROCEDURE .EXPLICIT
!ifeq verbose 0
    @echo wsplice $@
!endif

echo_yacc : .PROCEDURE .EXPLICIT
!ifeq verbose 0
    @echo yacc $@
!endif

echo_execute : .PROCEDURE .EXPLICIT
!ifeq verbose 0
    @echo $[@ $@
!endif

bind_res_wresui : .PROCEDURE .EXPLICIT
!ifeq verbose 0
    @echo bind wresui $@
!endif
    $(wstrip) -q -a -r $@ . wresui.res

bind_res : .PROCEDURE .EXPLICIT
!ifeq verbose 0
    @echo bind res $@
!endif
    $(rcbnd) $^&.res $@
